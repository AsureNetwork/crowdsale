{
  "contractName": "TestAsureBonusesCrowdsale",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "hasClosed",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "defaultRate",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "rate",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "weiRaised",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOpen",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "closingTime",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "wallet",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "bonusRate",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "openingTime",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "bonusTime",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newBonusRate",
          "type": "uint256"
        },
        {
          "name": "newBonusTime",
          "type": "uint256"
        },
        {
          "name": "newDefaultRate",
          "type": "uint256"
        }
      ],
      "name": "updateRates",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "beneficiary",
          "type": "address"
        }
      ],
      "name": "buyTokens",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getCurrentRate",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "bonusRate",
          "type": "uint256"
        },
        {
          "name": "bonusTime",
          "type": "uint256"
        },
        {
          "name": "defaultRate",
          "type": "uint256"
        },
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "wallet",
          "type": "address"
        },
        {
          "name": "token",
          "type": "address"
        },
        {
          "name": "openingTime",
          "type": "uint256"
        },
        {
          "name": "closingTime",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "bonusRate",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "bonusTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "defaultRate",
          "type": "uint256"
        }
      ],
      "name": "RatesUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "purchaser",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokensPurchased",
      "type": "event"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.10+commit.5a6ea5b1\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"hasClosed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"defaultRate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"weiRaised\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOpen\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"closingTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"wallet\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"bonusRate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"openingTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"bonusTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newBonusRate\",\"type\":\"uint256\"},{\"name\":\"newBonusTime\",\"type\":\"uint256\"},{\"name\":\"newDefaultRate\",\"type\":\"uint256\"}],\"name\":\"updateRates\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"buyTokens\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getCurrentRate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"bonusRate\",\"type\":\"uint256\"},{\"name\":\"bonusTime\",\"type\":\"uint256\"},{\"name\":\"defaultRate\",\"type\":\"uint256\"},{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"wallet\",\"type\":\"address\"},{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"openingTime\",\"type\":\"uint256\"},{\"name\":\"closingTime\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"bonusRate\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"bonusTime\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"defaultRate\",\"type\":\"uint256\"}],\"name\":\"RatesUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"purchaser\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensPurchased\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"bonusRate()\":{\"return\":\"the number of token units a buyer gets per wei before the bonus time.\"},\"bonusTime()\":{\"return\":\"the crowdsale bonus time in unix epoch seconds.\"},\"buyTokens(address)\":{\"details\":\"low level token purchase ***DO NOT OVERRIDE*** This function has a non-reentrancy guard, so it shouldn't be called by another `nonReentrant` function.\",\"params\":{\"beneficiary\":\"Recipient of the token purchase\"}},\"closingTime()\":{\"return\":\"the crowdsale closing time.\"},\"defaultRate()\":{\"return\":\"the number of token units a buyer gets per wei after the bonus time.\"},\"getCurrentRate()\":{\"details\":\"Returns the rate of tokens per wei at the present time. Note that, rate can be changed by the owner until the crowdsale is open.\",\"return\":\"The number of tokens a buyer gets per wei at a given time\"},\"hasClosed()\":{\"details\":\"Checks whether the period in which the crowdsale is open has already elapsed.\",\"return\":\"Whether crowdsale period has elapsed\"},\"isOpen()\":{\"return\":\"true if the crowdsale is open, false otherwise.\"},\"isOwner()\":{\"return\":\"true if `msg.sender` is the owner of the contract.\"},\"openingTime()\":{\"return\":\"the crowdsale opening time.\"},\"owner()\":{\"return\":\"the address of the owner.\"},\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract.\"},\"token()\":{\"return\":\"the token being sold.\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}},\"updateRates(uint256,uint256,uint256)\":{\"details\":\"Owner can update bonus rate, bonus time, and default rate before crowdsale opened.\",\"params\":{\"newBonusRate\":\"Number of token units a buyer gets per wei before bonus time\",\"newBonusTime\":\"The crowdsale bonus time in unix epoch seconds\",\"newDefaultRate\":\"Number of token units a buyer gets per wei after the bonus time\"}},\"wallet()\":{\"return\":\"the address where funds are collected.\"},\"weiRaised()\":{\"return\":\"the amount of wei raised.\"}}},\"userdoc\":{\"methods\":{\"rate()\":{\"notice\":\"The base rate function is overridden to revert, since this crowdsale doesn't use it, and all calls to it are a mistake.\"},\"renounceOwnership()\":{\"notice\":\"Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore.\"}}}},\"settings\":{\"compilationTarget\":{\"/home/mischi/p/asurenetwork/crowdsale/packages/crowdsale/contracts/test/TestAsureBonusesCrowdsale.sol\":\"TestAsureBonusesCrowdsale\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/mischi/p/asurenetwork/crowdsale/packages/crowdsale/contracts/AsureBonusesCrowdsale.sol\":{\"keccak256\":\"0x511cd8a6044c6fbc7cfe0d49266de9cd8c9fccf69f460c4d55149bfa68344e7e\",\"urls\":[\"bzzr://5bd57838dd937a58464bca782b05837e0803dc0107e10f62a60014f98cdf20f7\",\"dweb:/ipfs/QmUZmgNM35GUq1dzYHq2UT2xTh78YmwMNgSdkZekosoCqE\"]},\"/home/mischi/p/asurenetwork/crowdsale/packages/crowdsale/contracts/test/TestAsureBonusesCrowdsale.sol\":{\"keccak256\":\"0x2c5d512b8cb9ebc9edd7af94c24cb4cb324e9be3020b76201fbaa3205f29e84f\",\"urls\":[\"bzzr://5079e3e7810b975b5a3adc274c3069ac0d3b107d95abb7afb2e82a29f593b634\",\"dweb:/ipfs/QmNShs951sQfRXe4rF8DTMwnpQQ1Gqh4k4t3tsb15q1CMU\"]},\"openzeppelin-solidity/contracts/access/Roles.sol\":{\"keccak256\":\"0x659ba0f9a3392cd50a8a5fafaf5dfd8c6a0878f6a4613bceff4e90dceddcd865\",\"urls\":[\"bzzr://f704341d520fbc98716541f1b3f67737f0ee6e94adf072a66acb2bd25d593c2b\",\"dweb:/ipfs/QmcmyB4cNazZ1sw963Afaijt67M9bDgwmGXCgQajGTD4tm\"]},\"openzeppelin-solidity/contracts/access/roles/WhitelistAdminRole.sol\":{\"keccak256\":\"0x296248d0db94ffd742e1918944172d8c6f0eda2395330f7e33c058884620efdc\",\"urls\":[\"bzzr://45789874754eddf27772eba7db7c32d825d35f2207a151a8147538fcd587370a\",\"dweb:/ipfs/QmcmHNuJBMbmFZSLfcX8g3rwUsntpPkJgihuGFrjBuapQN\"]},\"openzeppelin-solidity/contracts/access/roles/WhitelistedRole.sol\":{\"keccak256\":\"0xfd5715327c3f75b7056fdf2e9dbb9b22559549af0381cc85859c9dcd8f101000\",\"urls\":[\"bzzr://482e11fb5259da689a571d828c509b9b3e00265c5a07337c5c4c3db444690ca1\",\"dweb:/ipfs/QmXLXQtAtYAiKihMngJPN7TFHJJDhiBL9AHuoUuVdtrgNF\"]},\"openzeppelin-solidity/contracts/crowdsale/Crowdsale.sol\":{\"keccak256\":\"0x8347d09dc704fcd85e048f30bb17d8ec8c0f2bcea7287651fd9f8d1a3d3be24f\",\"urls\":[\"bzzr://0dc01d15c736b7e7a1a01d508b958fa18d30db5690af6dffd6f367a6f7408ad4\",\"dweb:/ipfs/QmUBG9RDuRL4Bg7Uz4CFxa1wjMsR9fJaFjAiGeJntat174\"]},\"openzeppelin-solidity/contracts/crowdsale/validation/CappedCrowdsale.sol\":{\"keccak256\":\"0x9afa9516c50f544efe548f3ce4e74e0984cf20991bb98efe57104f659d3fde8b\",\"urls\":[\"bzzr://80ec9b3dfecf25ba1bd350abbbb95127069caa23743d19a6e64295279e85f587\",\"dweb:/ipfs/QmevLTu6u6bTN3MFa8Wp6kCdFJ8GKr7ErCEB4Kmd8FaDjz\"]},\"openzeppelin-solidity/contracts/crowdsale/validation/TimedCrowdsale.sol\":{\"keccak256\":\"0x6413acc30449378ef618490709536506415a92727012f619c65a8ad0bbc4ab61\",\"urls\":[\"bzzr://890222baa3cf84d93ecc24f59f30a528b29b5134d0885f4dd5383823fa2db8c2\",\"dweb:/ipfs/Qme3HzaouQuDZKKA6dedfL2EmdyKxZ3VmvriKFzwxPWocT\"]},\"openzeppelin-solidity/contracts/crowdsale/validation/WhitelistCrowdsale.sol\":{\"keccak256\":\"0x9353bb9d6dc0ecfe57d0ae3584504cc6b2dc277b18ef4e9d70e1f524d4b62ff1\",\"urls\":[\"bzzr://05a5001c670f395d1d214a5f2ef75ca4f9cde6737d1174e0976a66f9839b260e\",\"dweb:/ipfs/Qmc3M69nCg7jcnjDhwkET37W5qdtrYbT5FHoMwFMbWjsZD\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x965012d27b4262d7a41f5028cbb30c51ebd9ecd4be8fb30380aaa7a3c64fbc8b\",\"urls\":[\"bzzr://41ca38f6b0fa4b77b0feec43e422cfbec48b7eb38a41edf0b85c77e8d9a296b1\",\"dweb:/ipfs/QmbMdvSXcqGKxeeYvzF3VrWpoHQyVzMXBhzhAokF2Gdymv\"]},\"openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0x980de387a1a020a498f53d00f89fecebb12c949a17e8f160093c0303ede2b786\",\"urls\":[\"bzzr://08894efa2a557982070beda6a81a032407e70532d24bdafe80d39660c74904d9\",\"dweb:/ipfs/QmeN3ZiYGSjCnQFeYaJNgoXjF9eDue1g3e9pqManRkeBtV\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xba431353cb4fe70777ac026231eb5468e41aa1e81240a2b8136917acc5fff4dc\",\"urls\":[\"bzzr://80cd02a56e6e33504318124d0d645c82e615cc8a4b5829cc9d82d17635c644c8\",\"dweb:/ipfs/QmT8y2VVjGaFdGphpcXrgvdPi2EgF9LuCDgJiJ89LvpFRV\"]},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x079c4e23ee448f529e43bfa3c4e8fb4be52cd0318ee923a276835bedf45b93d8\",\"urls\":[\"bzzr://48248e86f64407a95f241d6c5c8cfea6b4d4ebf4ebb467e5c98c8af3868fafe4\",\"dweb:/ipfs/QmdxqtgEFZjHCoiYyz6pUAQ5iBm7As25jcyEbZoTaAgyDa\"]},\"openzeppelin-solidity/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0x05fcee7431cd35cd312e14e7f316a44ca3ccc5fb3b859aefc15c1a5db94add7e\",\"urls\":[\"bzzr://5ba67fb83aa7806883a335d53a27dcf1f53b75fa38dedd57893cc84633aa4d4c\",\"dweb:/ipfs/QmZBWbRwAD7ChE8Dsqo4rm7ubtGtDL1bjkAVVq6dVPmVwk\"]},\"openzeppelin-solidity/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x58e8ca389c46941a0bfc26b91025d3427864bd9070a7762f90d29677cd3f3dd8\",\"urls\":[\"bzzr://5c079549429384de9624a5686a33649e7e637bf0b715773182e77dffc9ea4c38\",\"dweb:/ipfs/Qmd4uMLdQm1XBTgsYSttVCnMwPRMT47WvqABENyXFyVMYm\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040516200128e3803806200128e83398181016040526101008110156200003857600080fd5b81019080805190602001909291908051906020019092919080519060200190929190805190602001909291908051906020019092919080519060200190929190805190602001909291908051906020019092919050505087878787858560018a8a600160008190555060008311620000af57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415620000ea57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156200012557600080fd5b8260038190555081600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505042821015620001bf57600080fd5b818111620001cc57600080fd5b8160058190555080600681905550505033600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3620002ad848484620002d060201b60201c565b620002be81620003da60201b60201c565b50505050505050505050505062000597565b620002e06200040860201b60201c565b620002ea57600080fd5b620002fa6200046060201b60201c565b158015620003155750620003136200047c60201b60201c565b155b6200031f57600080fd5b600083116200032d57600080fd5b6200033d6200048860201b60201c565b82101580156200035b5750620003586200049260201b60201c565b82105b6200036557600080fd5b600081116200037357600080fd5b826008819055508160098190555080600a819055507f023010bc68e7f4c0be9887f513c570c7a0f5f511b9716abccd42bf3b8943532b600854600954600a5460405180848152602001838152602001828152602001935050505060405180910390a1505050565b620003ea6200040860201b60201c565b620003f457600080fd5b62000405816200049c60201b60201c565b50565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b600060055442101580156200047757506006544211155b905090565b60006006544211905090565b6000600554905090565b6000600654905090565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415620004d757600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b610ce780620005a76000396000f3fe6080604052600436106101095760003560e01c80638da5cb5b11610095578063c0f3622c11610064578063c0f3622c14610393578063ec8ac4d8146103e2578063f2fde38b14610426578063f7fb07b014610477578063fc0c546a146104a257610109565b80638da5cb5b146102b75780638f32d59b1461030e578063b7a8807c1461033d578063b82a0ce81461036857610109565b806347535d7b116100dc57806347535d7b146101c45780634b6753bc146101f3578063521eb2731461021e5780635af123f414610275578063715018a6146102a057610109565b80631515bc2b146101145780632616501d146101435780632c4e722e1461016e5780634042b66f14610199575b610112336104f9565b005b34801561012057600080fd5b506101296105ed565b604051808215151515815260200191505060405180910390f35b34801561014f57600080fd5b506101586105f9565b6040518082815260200191505060405180910390f35b34801561017a57600080fd5b50610183610603565b6040518082815260200191505060405180910390f35b3480156101a557600080fd5b506101ae61060a565b6040518082815260200191505060405180910390f35b3480156101d057600080fd5b506101d9610614565b604051808215151515815260200191505060405180910390f35b3480156101ff57600080fd5b5061020861062f565b6040518082815260200191505060405180910390f35b34801561022a57600080fd5b50610233610639565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561028157600080fd5b5061028a610663565b6040518082815260200191505060405180910390f35b3480156102ac57600080fd5b506102b561066d565b005b3480156102c357600080fd5b506102cc61073f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561031a57600080fd5b50610323610769565b604051808215151515815260200191505060405180910390f35b34801561034957600080fd5b506103526107c1565b6040518082815260200191505060405180910390f35b34801561037457600080fd5b5061037d6107cb565b6040518082815260200191505060405180910390f35b34801561039f57600080fd5b506103e0600480360360608110156103b657600080fd5b810190808035906020019092919080359060200190929190803590602001909291905050506107d5565b005b610424600480360360208110156103f857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506104f9565b005b34801561043257600080fd5b506104756004803603602081101561044957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506108b0565b005b34801561048357600080fd5b5061048c6108cd565b6040518082815260200191505060405180910390f35b3480156104ae57600080fd5b506104b7610900565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60016000808282540192505081905550600080549050600034905061051e838261092a565b600061052982610949565b90506105408260045461097190919063ffffffff16565b6004819055506105508482610990565b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f6faf93231a456e552dbc9961f58d9713ee4f2e69d15f1975b050ef0911053a7b8484604051808381526020018281526020019250505060405180910390a36105c7848361099e565b6105cf6109a2565b6105d98483610a0d565b505060005481146105e957600080fd5b5050565b60006006544211905090565b6000600a54905090565b6000806000fd5b6000600454905090565b6000600554421015801561062a57506006544211155b905090565b6000600654905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600854905090565b610675610769565b61067e57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6000600554905090565b6000600954905090565b6107dd610769565b6107e657600080fd5b6107ee610614565b15801561080057506107fe6105ed565b155b61080957600080fd5b6000831161081657600080fd5b61081e6107c1565b8210158015610833575061083061062f565b82105b61083c57600080fd5b6000811161084957600080fd5b826008819055508160098190555080600a819055507f023010bc68e7f4c0be9887f513c570c7a0f5f511b9716abccd42bf3b8943532b600854600954600a5460405180848152602001838152602001828152602001935050505060405180910390a1505050565b6108b8610769565b6108c157600080fd5b6108ca81610a11565b50565b60006108d7610614565b6108e457600090506108fd565b60095442116108f75760085490506108fd565b600a5490505b90565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610932610614565b61093b57600080fd5b6109458282610b0b565b5050565b6000806109546108cd565b90506109698382610b5790919063ffffffff16565b915050919050565b60008082840190508381101561098657600080fd5b8091505092915050565b61099a8282610b91565b5050565b5050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f19350505050158015610a0a573d6000803e3d6000fd5b50565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610a4b57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610b4557600080fd5b6000811415610b5357600080fd5b5050565b600080831415610b6a5760009050610b8b565b6000828402905082848281610b7b57fe5b0414610b8657600080fd5b809150505b92915050565b610bde8282600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610be29092919063ffffffff16565b5050565b8273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015610c6957600080fd5b505af1158015610c7d573d6000803e3d6000fd5b505050506040513d6020811015610c9357600080fd5b8101908080519060200190929190505050610cad57600080fd5b50505056fea265627a7a72305820dfa43c60d95aa4a274a03222b97f4215ab0db5ce1c62fabdfcc11549d1dea2b364736f6c634300050a0032",
  "deployedBytecode": "0x6080604052600436106101095760003560e01c80638da5cb5b11610095578063c0f3622c11610064578063c0f3622c14610393578063ec8ac4d8146103e2578063f2fde38b14610426578063f7fb07b014610477578063fc0c546a146104a257610109565b80638da5cb5b146102b75780638f32d59b1461030e578063b7a8807c1461033d578063b82a0ce81461036857610109565b806347535d7b116100dc57806347535d7b146101c45780634b6753bc146101f3578063521eb2731461021e5780635af123f414610275578063715018a6146102a057610109565b80631515bc2b146101145780632616501d146101435780632c4e722e1461016e5780634042b66f14610199575b610112336104f9565b005b34801561012057600080fd5b506101296105ed565b604051808215151515815260200191505060405180910390f35b34801561014f57600080fd5b506101586105f9565b6040518082815260200191505060405180910390f35b34801561017a57600080fd5b50610183610603565b6040518082815260200191505060405180910390f35b3480156101a557600080fd5b506101ae61060a565b6040518082815260200191505060405180910390f35b3480156101d057600080fd5b506101d9610614565b604051808215151515815260200191505060405180910390f35b3480156101ff57600080fd5b5061020861062f565b6040518082815260200191505060405180910390f35b34801561022a57600080fd5b50610233610639565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561028157600080fd5b5061028a610663565b6040518082815260200191505060405180910390f35b3480156102ac57600080fd5b506102b561066d565b005b3480156102c357600080fd5b506102cc61073f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561031a57600080fd5b50610323610769565b604051808215151515815260200191505060405180910390f35b34801561034957600080fd5b506103526107c1565b6040518082815260200191505060405180910390f35b34801561037457600080fd5b5061037d6107cb565b6040518082815260200191505060405180910390f35b34801561039f57600080fd5b506103e0600480360360608110156103b657600080fd5b810190808035906020019092919080359060200190929190803590602001909291905050506107d5565b005b610424600480360360208110156103f857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506104f9565b005b34801561043257600080fd5b506104756004803603602081101561044957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506108b0565b005b34801561048357600080fd5b5061048c6108cd565b6040518082815260200191505060405180910390f35b3480156104ae57600080fd5b506104b7610900565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60016000808282540192505081905550600080549050600034905061051e838261092a565b600061052982610949565b90506105408260045461097190919063ffffffff16565b6004819055506105508482610990565b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f6faf93231a456e552dbc9961f58d9713ee4f2e69d15f1975b050ef0911053a7b8484604051808381526020018281526020019250505060405180910390a36105c7848361099e565b6105cf6109a2565b6105d98483610a0d565b505060005481146105e957600080fd5b5050565b60006006544211905090565b6000600a54905090565b6000806000fd5b6000600454905090565b6000600554421015801561062a57506006544211155b905090565b6000600654905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600854905090565b610675610769565b61067e57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6000600554905090565b6000600954905090565b6107dd610769565b6107e657600080fd5b6107ee610614565b15801561080057506107fe6105ed565b155b61080957600080fd5b6000831161081657600080fd5b61081e6107c1565b8210158015610833575061083061062f565b82105b61083c57600080fd5b6000811161084957600080fd5b826008819055508160098190555080600a819055507f023010bc68e7f4c0be9887f513c570c7a0f5f511b9716abccd42bf3b8943532b600854600954600a5460405180848152602001838152602001828152602001935050505060405180910390a1505050565b6108b8610769565b6108c157600080fd5b6108ca81610a11565b50565b60006108d7610614565b6108e457600090506108fd565b60095442116108f75760085490506108fd565b600a5490505b90565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610932610614565b61093b57600080fd5b6109458282610b0b565b5050565b6000806109546108cd565b90506109698382610b5790919063ffffffff16565b915050919050565b60008082840190508381101561098657600080fd5b8091505092915050565b61099a8282610b91565b5050565b5050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f19350505050158015610a0a573d6000803e3d6000fd5b50565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610a4b57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610b4557600080fd5b6000811415610b5357600080fd5b5050565b600080831415610b6a5760009050610b8b565b6000828402905082848281610b7b57fe5b0414610b8657600080fd5b809150505b92915050565b610bde8282600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610be29092919063ffffffff16565b5050565b8273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015610c6957600080fd5b505af1158015610c7d573d6000803e3d6000fd5b505050506040513d6020811015610c9357600080fd5b8101908080519060200190929190505050610cad57600080fd5b50505056fea265627a7a72305820dfa43c60d95aa4a274a03222b97f4215ab0db5ce1c62fabdfcc11549d1dea2b364736f6c634300050a0032",
  "sourceMap": "278:447:7:-;;;369:354;8:9:-1;5:2;;;30:1;27;20:12;5:2;369:354:7;;;;;;;;;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;369:354:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;677:9;688;699:11;712:5;627:11;640;592:1;595:6;603:5;576:1:27;560:13;:17;;;;2380:1:13;2373:4;:8;2365:17;;;;;;2418:1;2400:20;;:6;:20;;;;2392:29;;;;;;2465:1;2439:28;;2447:5;2439:28;;;;2431:37;;;;;;2487:4;2479:5;:12;;;;2511:6;2501:7;;:16;;;;;;;;;;;;;;;;;;2536:5;2527:6;;:14;;;;;;;;;;;;;;;;;;2283:265;;;806:15:15;791:11;:30;;783:39;;;;;;854:11;840;:25;832:34;;;;;;892:11;877:12;:26;;;;928:11;913:12;:26;;;;657:289;;524:10:19;515:6;;:19;;;;;;;;;;;;;;;;;;582:6;;;;;;;;;;;549:40;;578:1;549:40;;;;;;;;;;;;1490:46:0;1502:9;1513;1524:11;1490;;;:46;;:::i;:::-;1542:24;1560:5;1542:17;;;:24;;:::i;:::-;1388:183;;;;369:354:7;;;;;;;;278:447;;2655:451:0;863:9:19;:7;;;:9;;:::i;:::-;855:18;;;;;;2776:8:0;:6;;;:8;;:::i;:::-;2775:9;:25;;;;;2789:11;:9;;;:11;;:::i;:::-;2788:12;2775:25;2767:34;;;;;;2830:1;2815:12;:16;2807:25;;;;;;2862:13;:11;;;:13;;:::i;:::-;2846:12;:29;;:61;;;;;2894:13;:11;;;:13;;:::i;:::-;2879:12;:28;2846:61;2838:70;;;;;;2939:1;2922:14;:18;2914:27;;;;;;2961:12;2948:10;:25;;;;2992:12;2979:10;:25;;;;3025:14;3010:12;:29;;;;3051:50;3064:10;;3076;;3088:12;;3051:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2655:451;;;:::o;1655:107:19:-;863:9;:7;;;:9;;:::i;:::-;855:18;;;;;;1727:28;1746:8;1727:18;;;:28;;:::i;:::-;1655:107;:::o;979:90::-;1019:4;1056:6;;;;;;;;;;;1042:20;;:10;:20;;;1035:27;;979:90;:::o;1339:189:15:-;1378:4;1474:12;;1455:15;:31;;:66;;;;;1509:12;;1490:15;:31;;1455:66;1448:73;;1339:189;:::o;1692:156::-;1734:4;1829:12;;1811:15;:30;1804:37;;1692:156;:::o;1011:89::-;1055:7;1081:12;;1074:19;;1011:89;:::o;1165:::-;1209:7;1235:12;;1228:19;;1165:89;:::o;1906:183:19:-;1999:1;1979:22;;:8;:22;;;;1971:31;;;;;;2046:8;2017:38;;2038:6;;;;;;;;;;;2017:38;;;;;;;;;;;;2074:8;2065:6;;:17;;;;;;;;;;;;;;;;;;1906:183;:::o;278:447:7:-;;;;;;;",
  "deployedSourceMap": "278:447:7:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2875:21:13;2885:10;2875:9;:21::i;:::-;278:447:7;1692:156:15;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1692:156:15;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2214:83:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2214:83:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1717:65;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1717:65:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3424:85:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3424:85:13;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1339:189:15;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1339:189:15;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1165:89;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1165:89:15;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3114:87:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3114:87:13;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1881:79:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1881:79:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1347:137:19;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1347:137:19;;;:::i;:::-;;659:77;;8:9:-1;5:2;;;30:1;27;20:12;5:2;659:77:19;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;979:90;;8:9:-1;5:2;;;30:1;27;20:12;5:2;979:90:19;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1011:89:15;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1011:89:15;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2037:79:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2037:79:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2655:451;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2655:451:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2655:451:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3766:603:13;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3766:603:13;;;;;;;;;;;;;;;;;;;:::i;:::-;;1655:107:19;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1655:107:19;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1655:107:19;;;;;;;;;;;;;;;;;;;:::i;:::-;;3337:203:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3337:203:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2962:76:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2962:76:13;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3766:603;1010:1:27;993:13;;:18;;;;;;;;;;;1021:20;1044:13;;1021:36;;3844:17:13;3864:9;3844:29;;3883:44;3904:11;3917:9;3883:20;:44::i;:::-;3986:14;4003:26;4019:9;4003:15;:26::i;:::-;3986:43;;4077:25;4092:9;4077:10;;:14;;:25;;;;:::i;:::-;4064:10;:38;;;;4113:37;4130:11;4143:6;4113:16;:37::i;:::-;4193:11;4165:59;;4181:10;4165:59;;;4206:9;4217:6;4165:59;;;;;;;;;;;;;;;;;;;;;;;;4235:46;4258:11;4271:9;4235:22;:46::i;:::-;4292:15;:13;:15::i;:::-;4317:45;4339:11;4352:9;4317:21;:45::i;:::-;1067:1:27;;1102:13;;1086:12;:29;1078:38;;;;;;3766:603:13;;:::o;1692:156:15:-;1734:4;1829:12;;1811:15;:30;1804:37;;1692:156;:::o;2214:83:0:-;2258:7;2280:12;;2273:19;;2214:83;:::o;1717:65::-;1754:7;1769:8;;;3424:85:13;3466:7;3492:10;;3485:17;;3424:85;:::o;1339:189:15:-;1378:4;1474:12;;1455:15;:31;;:66;;;;;1509:12;;1490:15;:31;;1455:66;1448:73;;1339:189;:::o;1165:89::-;1209:7;1235:12;;1228:19;;1165:89;:::o;3114:87:13:-;3153:15;3187:7;;;;;;;;;;;3180:14;;3114:87;:::o;1881:79:0:-;1923:7;1945:10;;1938:17;;1881:79;:::o;1347:137:19:-;863:9;:7;:9::i;:::-;855:18;;;;;;1445:1;1408:40;;1429:6;;;;;;;;;;;1408:40;;;;;;;;;;;;1475:1;1458:6;;:19;;;;;;;;;;;;;;;;;;1347:137::o;659:77::-;697:7;723:6;;;;;;;;;;;716:13;;659:77;:::o;979:90::-;1019:4;1056:6;;;;;;;;;;;1042:20;;:10;:20;;;1035:27;;979:90;:::o;1011:89:15:-;1055:7;1081:12;;1074:19;;1011:89;:::o;2037:79:0:-;2079:7;2101:10;;2094:17;;2037:79;:::o;2655:451::-;863:9:19;:7;:9::i;:::-;855:18;;;;;;2776:8:0;:6;:8::i;:::-;2775:9;:25;;;;;2789:11;:9;:11::i;:::-;2788:12;2775:25;2767:34;;;;;;2830:1;2815:12;:16;2807:25;;;;;;2862:13;:11;:13::i;:::-;2846:12;:29;;:61;;;;;2894:13;:11;:13::i;:::-;2879:12;:28;2846:61;2838:70;;;;;;2939:1;2922:14;:18;2914:27;;;;;;2961:12;2948:10;:25;;;;2992:12;2979:10;:25;;;;3025:14;3010:12;:29;;;;3051:50;3064:10;;3076;;3088:12;;3051:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2655:451;;;:::o;1655:107:19:-;863:9;:7;:9::i;:::-;855:18;;;;;;1727:28;1746:8;1727:18;:28::i;:::-;1655:107;:::o;3337:203:0:-;3384:7;3404:8;:6;:8::i;:::-;3399:38;;3429:1;3422:8;;;;3399:38;3466:10;;3447:15;:29;3443:67;;3493:10;;3486:17;;;;3443:67;3523:12;;3516:19;;3337:203;;:::o;2962:76:13:-;3000:6;3025;;;;;;;;;;;3018:13;;2962:76;:::o;2040:165:15:-;442:8;:6;:8::i;:::-;434:17;;;;;;2148:50;2175:11;2188:9;2148:26;:50::i;:::-;2040:165;;:::o;3766:164:0:-;3833:7;3848:19;3870:16;:14;:16::i;:::-;3848:38;;3899:26;3915:9;3899:11;:15;;:26;;;;:::i;:::-;3892:33;;;3766:164;;;:::o;1431:145:18:-;1489:7;1508:9;1524:1;1520;:5;1508:17;;1548:1;1543;:6;;1535:15;;;;;;1568:1;1561:8;;;1431:145;;;;:::o;6206:134:13:-;6293:40;6308:11;6321;6293:14;:40::i;:::-;6206:134;;:::o;6610:145::-;;;:::o;7211:78::-;7255:7;;;;;;;;;;;:16;;:27;7272:9;7255:27;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7255:27:13;7211:78::o;5374:149::-;;;:::o;1906:183:19:-;1999:1;1979:22;;:8;:22;;;;1971:31;;;;;;2046:8;2017:38;;2038:6;;;;;;;;;;;2017:38;;;;;;;;;;;;2074:8;2065:6;;:17;;;;;;;;;;;;;;;;;;1906:183;:::o;4911:168:13:-;5036:1;5013:25;;:11;:25;;;;5005:34;;;;;;5070:1;5057:9;:14;;5049:23;;;;;;4911:168;;:::o;229:421:18:-;287:7;532:1;527;:6;523:45;;;556:1;549:8;;;;523:45;578:9;594:1;590;:5;578:17;;622:1;617;613;:5;;;;;;:10;605:19;;;;;;642:1;635:8;;;229:421;;;;;:::o;5803:137:13:-;5888:45;5908:11;5921;5888:6;;;;;;;;;;;:19;;;;:45;;;;;:::i;:::-;5803:137;;:::o;409:123:26:-;499:5;:14;;;514:2;518:5;499:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;499:25:26;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;499:25:26;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;499:25:26;;;;;;;;;;;;;;;;491:34;;;;;;409:123;;;:::o",
  "source": "pragma solidity ^0.5.0;\n\nimport \"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\";\nimport \"openzeppelin-solidity/contracts/crowdsale/Crowdsale.sol\";\nimport \"openzeppelin-solidity/contracts/crowdsale/validation/TimedCrowdsale.sol\";\nimport \"../AsureBonusesCrowdsale.sol\";\n\ncontract TestAsureBonusesCrowdsale is Crowdsale, TimedCrowdsale, AsureBonusesCrowdsale {\n  constructor(\n    uint256 bonusRate,\n    uint256 bonusTime,\n    uint256 defaultRate,\n    address owner,\n    address payable wallet,\n    IERC20 token,\n    uint256 openingTime,\n    uint256 closingTime\n  )\n  public\n  Crowdsale(1, wallet, token)\n  TimedCrowdsale(openingTime, closingTime)\n  AsureBonusesCrowdsale(bonusRate, bonusTime, defaultRate, owner)\n  {}\n}\n",
  "sourcePath": "/home/mischi/p/asurenetwork/crowdsale/packages/crowdsale/contracts/test/TestAsureBonusesCrowdsale.sol",
  "ast": {
    "absolutePath": "/home/mischi/p/asurenetwork/crowdsale/packages/crowdsale/contracts/test/TestAsureBonusesCrowdsale.sol",
    "exportedSymbols": {
      "TestAsureBonusesCrowdsale": [
        1366
      ]
    },
    "id": 1367,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1320,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:7"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "id": 1321,
        "nodeType": "ImportDirective",
        "scope": 1367,
        "sourceUnit": 3556,
        "src": "25:64:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/crowdsale/Crowdsale.sol",
        "file": "openzeppelin-solidity/contracts/crowdsale/Crowdsale.sol",
        "id": 1322,
        "nodeType": "ImportDirective",
        "scope": 1367,
        "sourceUnit": 2060,
        "src": "90:65:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/crowdsale/validation/TimedCrowdsale.sol",
        "file": "openzeppelin-solidity/contracts/crowdsale/validation/TimedCrowdsale.sol",
        "id": 1323,
        "nodeType": "ImportDirective",
        "scope": 1367,
        "sourceUnit": 2244,
        "src": "156:81:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/mischi/p/asurenetwork/crowdsale/packages/crowdsale/contracts/AsureBonusesCrowdsale.sol",
        "file": "../AsureBonusesCrowdsale.sol",
        "id": 1324,
        "nodeType": "ImportDirective",
        "scope": 1367,
        "sourceUnit": 192,
        "src": "238:38:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1325,
              "name": "Crowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2059,
              "src": "316:9:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Crowdsale_$2059",
                "typeString": "contract Crowdsale"
              }
            },
            "id": 1326,
            "nodeType": "InheritanceSpecifier",
            "src": "316:9:7"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1327,
              "name": "TimedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2243,
              "src": "327:14:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TimedCrowdsale_$2243",
                "typeString": "contract TimedCrowdsale"
              }
            },
            "id": 1328,
            "nodeType": "InheritanceSpecifier",
            "src": "327:14:7"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1329,
              "name": "AsureBonusesCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 191,
              "src": "343:21:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AsureBonusesCrowdsale_$191",
                "typeString": "contract AsureBonusesCrowdsale"
              }
            },
            "id": 1330,
            "nodeType": "InheritanceSpecifier",
            "src": "343:21:7"
          }
        ],
        "contractDependencies": [
          191,
          2059,
          2243,
          2880,
          3731
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1366,
        "linearizedBaseContracts": [
          1366,
          191,
          2880,
          2243,
          2059,
          3731
        ],
        "name": "TestAsureBonusesCrowdsale",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1364,
              "nodeType": "Block",
              "src": "721:2:7",
              "statements": []
            },
            "documentation": null,
            "id": 1365,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "31",
                    "id": 1349,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "592:1:7",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  {
                    "argumentTypes": null,
                    "id": 1350,
                    "name": "wallet",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1340,
                    "src": "595:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 1351,
                    "name": "token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1342,
                    "src": "603:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3555",
                      "typeString": "contract IERC20"
                    }
                  }
                ],
                "id": 1352,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1348,
                  "name": "Crowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2059,
                  "src": "582:9:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Crowdsale_$2059_$",
                    "typeString": "type(contract Crowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "582:27:7"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1354,
                    "name": "openingTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1344,
                    "src": "627:11:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 1355,
                    "name": "closingTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1346,
                    "src": "640:11:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1356,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1353,
                  "name": "TimedCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2243,
                  "src": "612:14:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_TimedCrowdsale_$2243_$",
                    "typeString": "type(contract TimedCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "612:40:7"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1358,
                    "name": "bonusRate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1332,
                    "src": "677:9:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 1359,
                    "name": "bonusTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1334,
                    "src": "688:9:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 1360,
                    "name": "defaultRate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1336,
                    "src": "699:11:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 1361,
                    "name": "owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1338,
                    "src": "712:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1362,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1357,
                  "name": "AsureBonusesCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 191,
                  "src": "655:21:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_AsureBonusesCrowdsale_$191_$",
                    "typeString": "type(contract AsureBonusesCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "655:63:7"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1347,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1332,
                  "name": "bonusRate",
                  "nodeType": "VariableDeclaration",
                  "scope": 1365,
                  "src": "386:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1331,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "386:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1334,
                  "name": "bonusTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 1365,
                  "src": "409:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1333,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "409:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1336,
                  "name": "defaultRate",
                  "nodeType": "VariableDeclaration",
                  "scope": 1365,
                  "src": "432:19:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1335,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "432:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1338,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 1365,
                  "src": "457:13:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1337,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "457:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1340,
                  "name": "wallet",
                  "nodeType": "VariableDeclaration",
                  "scope": 1365,
                  "src": "476:22:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 1339,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "476:15:7",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1342,
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 1365,
                  "src": "504:12:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$3555",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1341,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3555,
                    "src": "504:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3555",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1344,
                  "name": "openingTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 1365,
                  "src": "522:19:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1343,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "522:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1346,
                  "name": "closingTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 1365,
                  "src": "547:19:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1345,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "547:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "380:190:7"
            },
            "returnParameters": {
              "id": 1363,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "721:0:7"
            },
            "scope": 1366,
            "src": "369:354:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1367,
        "src": "278:447:7"
      }
    ],
    "src": "0:726:7"
  },
  "legacyAST": {
    "absolutePath": "/home/mischi/p/asurenetwork/crowdsale/packages/crowdsale/contracts/test/TestAsureBonusesCrowdsale.sol",
    "exportedSymbols": {
      "TestAsureBonusesCrowdsale": [
        1366
      ]
    },
    "id": 1367,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1320,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:7"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "id": 1321,
        "nodeType": "ImportDirective",
        "scope": 1367,
        "sourceUnit": 3556,
        "src": "25:64:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/crowdsale/Crowdsale.sol",
        "file": "openzeppelin-solidity/contracts/crowdsale/Crowdsale.sol",
        "id": 1322,
        "nodeType": "ImportDirective",
        "scope": 1367,
        "sourceUnit": 2060,
        "src": "90:65:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/crowdsale/validation/TimedCrowdsale.sol",
        "file": "openzeppelin-solidity/contracts/crowdsale/validation/TimedCrowdsale.sol",
        "id": 1323,
        "nodeType": "ImportDirective",
        "scope": 1367,
        "sourceUnit": 2244,
        "src": "156:81:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/mischi/p/asurenetwork/crowdsale/packages/crowdsale/contracts/AsureBonusesCrowdsale.sol",
        "file": "../AsureBonusesCrowdsale.sol",
        "id": 1324,
        "nodeType": "ImportDirective",
        "scope": 1367,
        "sourceUnit": 192,
        "src": "238:38:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1325,
              "name": "Crowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2059,
              "src": "316:9:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Crowdsale_$2059",
                "typeString": "contract Crowdsale"
              }
            },
            "id": 1326,
            "nodeType": "InheritanceSpecifier",
            "src": "316:9:7"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1327,
              "name": "TimedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2243,
              "src": "327:14:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TimedCrowdsale_$2243",
                "typeString": "contract TimedCrowdsale"
              }
            },
            "id": 1328,
            "nodeType": "InheritanceSpecifier",
            "src": "327:14:7"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1329,
              "name": "AsureBonusesCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 191,
              "src": "343:21:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AsureBonusesCrowdsale_$191",
                "typeString": "contract AsureBonusesCrowdsale"
              }
            },
            "id": 1330,
            "nodeType": "InheritanceSpecifier",
            "src": "343:21:7"
          }
        ],
        "contractDependencies": [
          191,
          2059,
          2243,
          2880,
          3731
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1366,
        "linearizedBaseContracts": [
          1366,
          191,
          2880,
          2243,
          2059,
          3731
        ],
        "name": "TestAsureBonusesCrowdsale",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1364,
              "nodeType": "Block",
              "src": "721:2:7",
              "statements": []
            },
            "documentation": null,
            "id": 1365,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "31",
                    "id": 1349,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "592:1:7",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  {
                    "argumentTypes": null,
                    "id": 1350,
                    "name": "wallet",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1340,
                    "src": "595:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 1351,
                    "name": "token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1342,
                    "src": "603:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3555",
                      "typeString": "contract IERC20"
                    }
                  }
                ],
                "id": 1352,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1348,
                  "name": "Crowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2059,
                  "src": "582:9:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Crowdsale_$2059_$",
                    "typeString": "type(contract Crowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "582:27:7"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1354,
                    "name": "openingTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1344,
                    "src": "627:11:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 1355,
                    "name": "closingTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1346,
                    "src": "640:11:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1356,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1353,
                  "name": "TimedCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2243,
                  "src": "612:14:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_TimedCrowdsale_$2243_$",
                    "typeString": "type(contract TimedCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "612:40:7"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1358,
                    "name": "bonusRate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1332,
                    "src": "677:9:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 1359,
                    "name": "bonusTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1334,
                    "src": "688:9:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 1360,
                    "name": "defaultRate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1336,
                    "src": "699:11:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 1361,
                    "name": "owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1338,
                    "src": "712:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1362,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1357,
                  "name": "AsureBonusesCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 191,
                  "src": "655:21:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_AsureBonusesCrowdsale_$191_$",
                    "typeString": "type(contract AsureBonusesCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "655:63:7"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1347,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1332,
                  "name": "bonusRate",
                  "nodeType": "VariableDeclaration",
                  "scope": 1365,
                  "src": "386:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1331,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "386:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1334,
                  "name": "bonusTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 1365,
                  "src": "409:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1333,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "409:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1336,
                  "name": "defaultRate",
                  "nodeType": "VariableDeclaration",
                  "scope": 1365,
                  "src": "432:19:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1335,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "432:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1338,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 1365,
                  "src": "457:13:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1337,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "457:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1340,
                  "name": "wallet",
                  "nodeType": "VariableDeclaration",
                  "scope": 1365,
                  "src": "476:22:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 1339,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "476:15:7",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1342,
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 1365,
                  "src": "504:12:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$3555",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1341,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3555,
                    "src": "504:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3555",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1344,
                  "name": "openingTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 1365,
                  "src": "522:19:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1343,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "522:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1346,
                  "name": "closingTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 1365,
                  "src": "547:19:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1345,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "547:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "380:190:7"
            },
            "returnParameters": {
              "id": 1363,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "721:0:7"
            },
            "scope": 1366,
            "src": "369:354:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1367,
        "src": "278:447:7"
      }
    ],
    "src": "0:726:7"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.10+commit.5a6ea5b1.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.11",
  "updatedAt": "2019-07-24T10:33:32.488Z",
  "devdoc": {
    "methods": {
      "bonusRate()": {
        "return": "the number of token units a buyer gets per wei before the bonus time."
      },
      "bonusTime()": {
        "return": "the crowdsale bonus time in unix epoch seconds."
      },
      "buyTokens(address)": {
        "details": "low level token purchase ***DO NOT OVERRIDE*** This function has a non-reentrancy guard, so it shouldn't be called by another `nonReentrant` function.",
        "params": {
          "beneficiary": "Recipient of the token purchase"
        }
      },
      "closingTime()": {
        "return": "the crowdsale closing time."
      },
      "defaultRate()": {
        "return": "the number of token units a buyer gets per wei after the bonus time."
      },
      "getCurrentRate()": {
        "details": "Returns the rate of tokens per wei at the present time. Note that, rate can be changed by the owner until the crowdsale is open.",
        "return": "The number of tokens a buyer gets per wei at a given time"
      },
      "hasClosed()": {
        "details": "Checks whether the period in which the crowdsale is open has already elapsed.",
        "return": "Whether crowdsale period has elapsed"
      },
      "isOpen()": {
        "return": "true if the crowdsale is open, false otherwise."
      },
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract."
      },
      "openingTime()": {
        "return": "the crowdsale opening time."
      },
      "owner()": {
        "return": "the address of the owner."
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract."
      },
      "token()": {
        "return": "the token being sold."
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      },
      "updateRates(uint256,uint256,uint256)": {
        "details": "Owner can update bonus rate, bonus time, and default rate before crowdsale opened.",
        "params": {
          "newBonusRate": "Number of token units a buyer gets per wei before bonus time",
          "newBonusTime": "The crowdsale bonus time in unix epoch seconds",
          "newDefaultRate": "Number of token units a buyer gets per wei after the bonus time"
        }
      },
      "wallet()": {
        "return": "the address where funds are collected."
      },
      "weiRaised()": {
        "return": "the amount of wei raised."
      }
    }
  },
  "userdoc": {
    "methods": {
      "rate()": {
        "notice": "The base rate function is overridden to revert, since this crowdsale doesn't use it, and all calls to it are a mistake."
      },
      "renounceOwnership()": {
        "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      }
    }
  }
}