{
  "contractName": "TestAsureBonusesCrowdsale",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "hasClosed",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "defaultRate",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "rate",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "weiRaised",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOpen",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "closingTime",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "wallet",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "bonusRate",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "openingTime",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "bonusTime",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newBonusRate",
          "type": "uint256"
        },
        {
          "name": "newBonusTime",
          "type": "uint256"
        },
        {
          "name": "newDefaultRate",
          "type": "uint256"
        }
      ],
      "name": "updateRates",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "beneficiary",
          "type": "address"
        }
      ],
      "name": "buyTokens",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getCurrentRate",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "bonusRate",
          "type": "uint256"
        },
        {
          "name": "bonusTime",
          "type": "uint256"
        },
        {
          "name": "defaultRate",
          "type": "uint256"
        },
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "wallet",
          "type": "address"
        },
        {
          "name": "token",
          "type": "address"
        },
        {
          "name": "openingTime",
          "type": "uint256"
        },
        {
          "name": "closingTime",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "bonusRate",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "bonusTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "defaultRate",
          "type": "uint256"
        }
      ],
      "name": "RatesUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "purchaser",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokensPurchased",
      "type": "event"
    }
  ],
  "bytecode": "0x60806040523480156200001157600080fd5b50604051610100806200130c83398101806040526101008110156200003557600080fd5b81019080805190602001909291908051906020019092919080519060200190929190805190602001909291908051906020019092919080519060200190929190805190602001909291908051906020019092919050505087878787858560018a8a600160008190555060008311620000ac57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415620000e757600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156200012257600080fd5b8260038190555081600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505042821015620001bc57600080fd5b818111620001c957600080fd5b8160058190555080600681905550505033600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3620002b3848484620002df640100000000026401000000009004565b620002cd8162000416640100000000026401000000009004565b505050505050505050505050620005e5565b620002f862000456640100000000026401000000009004565b6200030257600080fd5b6200031b620004ae640100000000026401000000009004565b1580156200033f57506200033d620004ca640100000000026401000000009004565b155b6200034957600080fd5b600083116200035757600080fd5b62000370620004d6640100000000026401000000009004565b821015801562000397575062000394620004e0640100000000026401000000009004565b82105b620003a157600080fd5b60008111620003af57600080fd5b826008819055508160098190555080600a819055507f023010bc68e7f4c0be9887f513c570c7a0f5f511b9716abccd42bf3b8943532b600854600954600a5460405180848152602001838152602001828152602001935050505060405180910390a1505050565b6200042f62000456640100000000026401000000009004565b6200043957600080fd5b6200045381620004ea640100000000026401000000009004565b50565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b60006005544210158015620004c557506006544211155b905090565b60006006544211905090565b6000600554905090565b6000600654905090565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156200052557600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b610d1780620005f56000396000f3fe608060405260043610610126576000357c0100000000000000000000000000000000000000000000000000000000900480638da5cb5b116100b2578063c0f3622c11610081578063c0f3622c146103b0578063ec8ac4d8146103ff578063f2fde38b14610443578063f7fb07b014610494578063fc0c546a146104bf57610126565b80638da5cb5b146102d45780638f32d59b1461032b578063b7a8807c1461035a578063b82a0ce81461038557610126565b806347535d7b116100f957806347535d7b146101e15780634b6753bc14610210578063521eb2731461023b5780635af123f414610292578063715018a6146102bd57610126565b80631515bc2b146101315780632616501d146101605780632c4e722e1461018b5780634042b66f146101b6575b61012f33610516565b005b34801561013d57600080fd5b5061014661060a565b604051808215151515815260200191505060405180910390f35b34801561016c57600080fd5b50610175610616565b6040518082815260200191505060405180910390f35b34801561019757600080fd5b506101a0610620565b6040518082815260200191505060405180910390f35b3480156101c257600080fd5b506101cb610627565b6040518082815260200191505060405180910390f35b3480156101ed57600080fd5b506101f6610631565b604051808215151515815260200191505060405180910390f35b34801561021c57600080fd5b5061022561064c565b6040518082815260200191505060405180910390f35b34801561024757600080fd5b50610250610656565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561029e57600080fd5b506102a7610680565b6040518082815260200191505060405180910390f35b3480156102c957600080fd5b506102d261068a565b005b3480156102e057600080fd5b506102e961075c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561033757600080fd5b50610340610786565b604051808215151515815260200191505060405180910390f35b34801561036657600080fd5b5061036f6107de565b6040518082815260200191505060405180910390f35b34801561039157600080fd5b5061039a6107e8565b6040518082815260200191505060405180910390f35b3480156103bc57600080fd5b506103fd600480360360608110156103d357600080fd5b810190808035906020019092919080359060200190929190803590602001909291905050506107f2565b005b6104416004803603602081101561041557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610516565b005b34801561044f57600080fd5b506104926004803603602081101561046657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506108cd565b005b3480156104a057600080fd5b506104a96108ea565b6040518082815260200191505060405180910390f35b3480156104cb57600080fd5b506104d461091d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60016000808282540192505081905550600080549050600034905061053b8382610947565b600061054682610966565b905061055d8260045461098e90919063ffffffff16565b60048190555061056d84826109ad565b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f6faf93231a456e552dbc9961f58d9713ee4f2e69d15f1975b050ef0911053a7b8484604051808381526020018281526020019250505060405180910390a36105e484836109bb565b6105ec6109bf565b6105f68483610a2a565b5050600054811461060657600080fd5b5050565b60006006544211905090565b6000600a54905090565b6000806000fd5b6000600454905090565b6000600554421015801561064757506006544211155b905090565b6000600654905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600854905090565b610692610786565b61069b57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6000600554905090565b6000600954905090565b6107fa610786565b61080357600080fd5b61080b610631565b15801561081d575061081b61060a565b155b61082657600080fd5b6000831161083357600080fd5b61083b6107de565b8210158015610850575061084d61064c565b82105b61085957600080fd5b6000811161086657600080fd5b826008819055508160098190555080600a819055507f023010bc68e7f4c0be9887f513c570c7a0f5f511b9716abccd42bf3b8943532b600854600954600a5460405180848152602001838152602001828152602001935050505060405180910390a1505050565b6108d5610786565b6108de57600080fd5b6108e781610a2e565b50565b60006108f4610631565b610901576000905061091a565b600954421161091457600854905061091a565b600a5490505b90565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61094f610631565b61095857600080fd5b6109628282610b28565b5050565b6000806109716108ea565b90506109868382610b7490919063ffffffff16565b915050919050565b6000808284019050838110156109a357600080fd5b8091505092915050565b6109b78282610bae565b5050565b5050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f19350505050158015610a27573d6000803e3d6000fd5b50565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610a6857600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610b6257600080fd5b6000811415610b7057600080fd5b5050565b600080831415610b875760009050610ba8565b6000828402905082848281610b9857fe5b0414610ba357600080fd5b809150505b92915050565b610bfb8282600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610bff9092919063ffffffff16565b5050565b8273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015610ca257600080fd5b505af1158015610cb6573d6000803e3d6000fd5b505050506040513d6020811015610ccc57600080fd5b8101908080519060200190929190505050610ce657600080fd5b50505056fea165627a7a72305820f3fd57cb0d421c46fa6cf7700ea38ff0844b9ec1416566bd2ba022ac5a10cf430029",
  "deployedBytecode": "0x608060405260043610610126576000357c0100000000000000000000000000000000000000000000000000000000900480638da5cb5b116100b2578063c0f3622c11610081578063c0f3622c146103b0578063ec8ac4d8146103ff578063f2fde38b14610443578063f7fb07b014610494578063fc0c546a146104bf57610126565b80638da5cb5b146102d45780638f32d59b1461032b578063b7a8807c1461035a578063b82a0ce81461038557610126565b806347535d7b116100f957806347535d7b146101e15780634b6753bc14610210578063521eb2731461023b5780635af123f414610292578063715018a6146102bd57610126565b80631515bc2b146101315780632616501d146101605780632c4e722e1461018b5780634042b66f146101b6575b61012f33610516565b005b34801561013d57600080fd5b5061014661060a565b604051808215151515815260200191505060405180910390f35b34801561016c57600080fd5b50610175610616565b6040518082815260200191505060405180910390f35b34801561019757600080fd5b506101a0610620565b6040518082815260200191505060405180910390f35b3480156101c257600080fd5b506101cb610627565b6040518082815260200191505060405180910390f35b3480156101ed57600080fd5b506101f6610631565b604051808215151515815260200191505060405180910390f35b34801561021c57600080fd5b5061022561064c565b6040518082815260200191505060405180910390f35b34801561024757600080fd5b50610250610656565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561029e57600080fd5b506102a7610680565b6040518082815260200191505060405180910390f35b3480156102c957600080fd5b506102d261068a565b005b3480156102e057600080fd5b506102e961075c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561033757600080fd5b50610340610786565b604051808215151515815260200191505060405180910390f35b34801561036657600080fd5b5061036f6107de565b6040518082815260200191505060405180910390f35b34801561039157600080fd5b5061039a6107e8565b6040518082815260200191505060405180910390f35b3480156103bc57600080fd5b506103fd600480360360608110156103d357600080fd5b810190808035906020019092919080359060200190929190803590602001909291905050506107f2565b005b6104416004803603602081101561041557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610516565b005b34801561044f57600080fd5b506104926004803603602081101561046657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506108cd565b005b3480156104a057600080fd5b506104a96108ea565b6040518082815260200191505060405180910390f35b3480156104cb57600080fd5b506104d461091d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60016000808282540192505081905550600080549050600034905061053b8382610947565b600061054682610966565b905061055d8260045461098e90919063ffffffff16565b60048190555061056d84826109ad565b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f6faf93231a456e552dbc9961f58d9713ee4f2e69d15f1975b050ef0911053a7b8484604051808381526020018281526020019250505060405180910390a36105e484836109bb565b6105ec6109bf565b6105f68483610a2a565b5050600054811461060657600080fd5b5050565b60006006544211905090565b6000600a54905090565b6000806000fd5b6000600454905090565b6000600554421015801561064757506006544211155b905090565b6000600654905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600854905090565b610692610786565b61069b57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6000600554905090565b6000600954905090565b6107fa610786565b61080357600080fd5b61080b610631565b15801561081d575061081b61060a565b155b61082657600080fd5b6000831161083357600080fd5b61083b6107de565b8210158015610850575061084d61064c565b82105b61085957600080fd5b6000811161086657600080fd5b826008819055508160098190555080600a819055507f023010bc68e7f4c0be9887f513c570c7a0f5f511b9716abccd42bf3b8943532b600854600954600a5460405180848152602001838152602001828152602001935050505060405180910390a1505050565b6108d5610786565b6108de57600080fd5b6108e781610a2e565b50565b60006108f4610631565b610901576000905061091a565b600954421161091457600854905061091a565b600a5490505b90565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61094f610631565b61095857600080fd5b6109628282610b28565b5050565b6000806109716108ea565b90506109868382610b7490919063ffffffff16565b915050919050565b6000808284019050838110156109a357600080fd5b8091505092915050565b6109b78282610bae565b5050565b5050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f19350505050158015610a27573d6000803e3d6000fd5b50565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610a6857600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610b6257600080fd5b6000811415610b7057600080fd5b5050565b600080831415610b875760009050610ba8565b6000828402905082848281610b9857fe5b0414610ba357600080fd5b809150505b92915050565b610bfb8282600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610bff9092919063ffffffff16565b5050565b8273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015610ca257600080fd5b505af1158015610cb6573d6000803e3d6000fd5b505050506040513d6020811015610ccc57600080fd5b8101908080519060200190929190505050610ce657600080fd5b50505056fea165627a7a72305820f3fd57cb0d421c46fa6cf7700ea38ff0844b9ec1416566bd2ba022ac5a10cf430029",
  "sourceMap": "285:463:5:-;;;377:368;8:9:-1;5:2;;;30:1;27;20:12;5:2;377:368:5;;;;;;;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;377:368:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;698:9;709;720:11;733:5;647:11;660;611:1;614:6;622:5;576:1:25;560:13;:17;;;;2380:1:11;2373:4;:8;2365:17;;;;;;2418:1;2400:20;;:6;:20;;;;2392:29;;;;;;2465:1;2439:28;;2447:5;2439:28;;;;2431:37;;;;;;2487:4;2479:5;:12;;;;2511:6;2501:7;;:16;;;;;;;;;;;;;;;;;;2536:5;2527:6;;:14;;;;;;;;;;;;;;;;;;2283:265;;;806:15:13;791:11;:30;;783:39;;;;;;854:11;840;:25;832:34;;;;;;892:11;877:12;:26;;;;928:11;913:12;:26;;;;657:289;;524:10:17;515:6;;:19;;;;;;;;;;;;;;;;;;582:6;;;;;;;;;;;549:40;;578:1;549:40;;;;;;;;;;;;1523:46:0;1535:9;1546;1557:11;1523;;;:46;;;:::i;:::-;1576:24;1594:5;1576:17;;;:24;;;:::i;:::-;1419:187;;;;377:368:5;;;;;;;;285:463;;2727:462:0;863:9:17;:7;;;:9;;;:::i;:::-;855:18;;;;;;2849:8:0;:6;;;:8;;;:::i;:::-;2848:9;:25;;;;;2862:11;:9;;;:11;;;:::i;:::-;2861:12;2848:25;2840:34;;;;;;2904:1;2889:12;:16;2881:25;;;;;;2937:13;:11;;;:13;;;:::i;:::-;2921:12;:29;;:61;;;;;2969:13;:11;;;:13;;;:::i;:::-;2954:12;:28;2921:61;2913:70;;;;;;3015:1;2998:14;:18;2990:27;;;;;;3039:12;3026:10;:25;;;;3071:12;3058:10;:25;;;;3105:14;3090:12;:29;;;;3133:50;3146:10;;3158;;3170:12;;3133:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2727:462;;;:::o;1655:107:17:-;863:9;:7;;;:9;;;:::i;:::-;855:18;;;;;;1727:28;1746:8;1727:18;;;:28;;;:::i;:::-;1655:107;:::o;979:90::-;1019:4;1056:6;;;;;;;;;;;1042:20;;:10;:20;;;1035:27;;979:90;:::o;1339:189:13:-;1378:4;1474:12;;1455:15;:31;;:66;;;;;1509:12;;1490:15;:31;;1455:66;1448:73;;1339:189;:::o;1692:156::-;1734:4;1829:12;;1811:15;:30;1804:37;;1692:156;:::o;1011:89::-;1055:7;1081:12;;1074:19;;1011:89;:::o;1165:::-;1209:7;1235:12;;1228:19;;1165:89;:::o;1906:183:17:-;1999:1;1979:22;;:8;:22;;;;1971:31;;;;;;2046:8;2017:38;;2038:6;;;;;;;;;;;2017:38;;;;;;;;;;;;2074:8;2065:6;;:17;;;;;;;;;;;;;;;;;;1906:183;:::o;285:463:5:-;;;;;;;",
  "deployedSourceMap": "285:463:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2875:21:11;2885:10;2875:9;:21::i;:::-;285:463:5;1692:156:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1692:156:13;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2276:85:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2276:85:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1758:67;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1758:67:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3424:85:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3424:85:11;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1339:189:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1339:189:13;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1165:89;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1165:89:13;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3114:87:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3114:87:11;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1929:81:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1929:81:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1347:137:17;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1347:137:17;;;:::i;:::-;;659:77;;8:9:-1;5:2;;;30:1;27;20:12;5:2;659:77:17;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;979:90;;8:9:-1;5:2;;;30:1;27;20:12;5:2;979:90:17;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1011:89:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1011:89:13;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2092:81:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2092:81:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2727:462;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2727:462:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2727:462:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3766:603:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3766:603:11;;;;;;;;;;;;;;;;;;;:::i;:::-;;1655:107:17;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1655:107:17;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1655:107:17;;;;;;;;;;;;;;;;;;;:::i;:::-;;3427:213:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3427:213:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2962:76:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2962:76:11;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3766:603;1010:1:25;993:13;;:18;;;;;;;;;;;1021:20;1044:13;;1021:36;;3844:17:11;3864:9;3844:29;;3883:44;3904:11;3917:9;3883:20;:44::i;:::-;3986:14;4003:26;4019:9;4003:15;:26::i;:::-;3986:43;;4077:25;4092:9;4077:10;;:14;;:25;;;;:::i;:::-;4064:10;:38;;;;4113:37;4130:11;4143:6;4113:16;:37::i;:::-;4193:11;4165:59;;4181:10;4165:59;;;4206:9;4217:6;4165:59;;;;;;;;;;;;;;;;;;;;;;;;4235:46;4258:11;4271:9;4235:22;:46::i;:::-;4292:15;:13;:15::i;:::-;4317:45;4339:11;4352:9;4317:21;:45::i;:::-;1067:1:25;;1102:13;;1086:12;:29;1078:38;;;;;;3766:603:11;;:::o;1692:156:13:-;1734:4;1829:12;;1811:15;:30;1804:37;;1692:156;:::o;2276:85:0:-;2320:7;2343:12;;2336:19;;2276:85;:::o;1758:67::-;1795:7;1811:8;;;3424:85:11;3466:7;3492:10;;3485:17;;3424:85;:::o;1339:189:13:-;1378:4;1474:12;;1455:15;:31;;:66;;;;;1509:12;;1490:15;:31;;1455:66;1448:73;;1339:189;:::o;1165:89::-;1209:7;1235:12;;1228:19;;1165:89;:::o;3114:87:11:-;3153:15;3187:7;;;;;;;;;;;3180:14;;3114:87;:::o;1929:81:0:-;1971:7;1994:10;;1987:17;;1929:81;:::o;1347:137:17:-;863:9;:7;:9::i;:::-;855:18;;;;;;1445:1;1408:40;;1429:6;;;;;;;;;;;1408:40;;;;;;;;;;;;1475:1;1458:6;;:19;;;;;;;;;;;;;;;;;;1347:137::o;659:77::-;697:7;723:6;;;;;;;;;;;716:13;;659:77;:::o;979:90::-;1019:4;1056:6;;;;;;;;;;;1042:20;;:10;:20;;;1035:27;;979:90;:::o;1011:89:13:-;1055:7;1081:12;;1074:19;;1011:89;:::o;2092:81:0:-;2134:7;2157:10;;2150:17;;2092:81;:::o;2727:462::-;863:9:17;:7;:9::i;:::-;855:18;;;;;;2849:8:0;:6;:8::i;:::-;2848:9;:25;;;;;2862:11;:9;:11::i;:::-;2861:12;2848:25;2840:34;;;;;;2904:1;2889:12;:16;2881:25;;;;;;2937:13;:11;:13::i;:::-;2921:12;:29;;:61;;;;;2969:13;:11;:13::i;:::-;2954:12;:28;2921:61;2913:70;;;;;;3015:1;2998:14;:18;2990:27;;;;;;3039:12;3026:10;:25;;;;3071:12;3058:10;:25;;;;3105:14;3090:12;:29;;;;3133:50;3146:10;;3158;;3170:12;;3133:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2727:462;;;:::o;1655:107:17:-;863:9;:7;:9::i;:::-;855:18;;;;;;1727:28;1746:8;1727:18;:28::i;:::-;1655:107;:::o;3427:213:0:-;3474:7;3495:8;:6;:8::i;:::-;3490:40;;3521:1;3514:8;;;;3490:40;3561:10;;3542:15;:29;3538:69;;3589:10;;3582:17;;;;3538:69;3622:12;;3615:19;;3427:213;;:::o;2962:76:11:-;3000:6;3025;;;;;;;;;;;3018:13;;2962:76;:::o;2040:165:13:-;442:8;:6;:8::i;:::-;434:17;;;;;;2148:50;2175:11;2188:9;2148:26;:50::i;:::-;2040:165;;:::o;3873:167:0:-;3940:7;3956:19;3978:16;:14;:16::i;:::-;3956:38;;4008:26;4024:9;4008:11;:15;;:26;;;;:::i;:::-;4001:33;;;3873:167;;;:::o;1431:145:16:-;1489:7;1508:9;1524:1;1520;:5;1508:17;;1548:1;1543;:6;;1535:15;;;;;;1568:1;1561:8;;;1431:145;;;;:::o;6206:134:11:-;6293:40;6308:11;6321;6293:14;:40::i;:::-;6206:134;;:::o;6610:145::-;;;:::o;7211:78::-;7255:7;;;;;;;;;;;:16;;:27;7272:9;7255:27;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7255:27:11;7211:78::o;5374:149::-;;;:::o;1906:183:17:-;1999:1;1979:22;;:8;:22;;;;1971:31;;;;;;2046:8;2017:38;;2038:6;;;;;;;;;;;2017:38;;;;;;;;;;;;2074:8;2065:6;;:17;;;;;;;;;;;;;;;;;;1906:183;:::o;4911:168:11:-;5036:1;5013:25;;:11;:25;;;;5005:34;;;;;;5070:1;5057:9;:14;;5049:23;;;;;;4911:168;;:::o;229:421:16:-;287:7;532:1;527;:6;523:45;;;556:1;549:8;;;;523:45;578:9;594:1;590;:5;578:17;;622:1;617;613;:5;;;;;;:10;605:19;;;;;;642:1;635:8;;;229:421;;;;;:::o;5803:137:11:-;5888:45;5908:11;5921;5888:6;;;;;;;;;;;:19;;;;:45;;;;;:::i;:::-;5803:137;;:::o;409:123:24:-;499:5;:14;;;514:2;518:5;499:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;499:25:24;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;499:25:24;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;499:25:24;;;;;;;;;;;;;;;;491:34;;;;;;409:123;;;:::o",
  "source": "pragma solidity ^0.5.0;\r\n\r\nimport \"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\";\r\nimport \"openzeppelin-solidity/contracts/crowdsale/Crowdsale.sol\";\r\nimport \"openzeppelin-solidity/contracts/crowdsale/validation/TimedCrowdsale.sol\";\r\nimport \"../AsureBonusesCrowdsale.sol\";\r\n\r\ncontract TestAsureBonusesCrowdsale is Crowdsale, TimedCrowdsale, AsureBonusesCrowdsale {\r\n  constructor(\r\n    uint256 bonusRate,\r\n    uint256 bonusTime,\r\n    uint256 defaultRate,\r\n    address owner,\r\n    address payable wallet,\r\n    IERC20 token,\r\n    uint256 openingTime,\r\n    uint256 closingTime\r\n  )\r\n  public\r\n  Crowdsale(1, wallet, token)\r\n  TimedCrowdsale(openingTime, closingTime)\r\n  AsureBonusesCrowdsale(bonusRate, bonusTime, defaultRate, owner)\r\n  {}\r\n}\r\n",
  "sourcePath": "C:/git/crowdsale/packages/crowdsale/contracts/test/TestAsureBonusesCrowdsale.sol",
  "ast": {
    "absolutePath": "/C/git/crowdsale/packages/crowdsale/contracts/test/TestAsureBonusesCrowdsale.sol",
    "exportedSymbols": {
      "TestAsureBonusesCrowdsale": [
        833
      ]
    },
    "id": 834,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 787,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:5"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "id": 788,
        "nodeType": "ImportDirective",
        "scope": 834,
        "sourceUnit": 3023,
        "src": "27:64:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/crowdsale/Crowdsale.sol",
        "file": "openzeppelin-solidity/contracts/crowdsale/Crowdsale.sol",
        "id": 789,
        "nodeType": "ImportDirective",
        "scope": 834,
        "sourceUnit": 1527,
        "src": "93:65:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/crowdsale/validation/TimedCrowdsale.sol",
        "file": "openzeppelin-solidity/contracts/crowdsale/validation/TimedCrowdsale.sol",
        "id": 790,
        "nodeType": "ImportDirective",
        "scope": 834,
        "sourceUnit": 1711,
        "src": "160:81:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/git/crowdsale/packages/crowdsale/contracts/AsureBonusesCrowdsale.sol",
        "file": "../AsureBonusesCrowdsale.sol",
        "id": 791,
        "nodeType": "ImportDirective",
        "scope": 834,
        "sourceUnit": 192,
        "src": "243:38:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 792,
              "name": "Crowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1526,
              "src": "323:9:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Crowdsale_$1526",
                "typeString": "contract Crowdsale"
              }
            },
            "id": 793,
            "nodeType": "InheritanceSpecifier",
            "src": "323:9:5"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 794,
              "name": "TimedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1710,
              "src": "334:14:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TimedCrowdsale_$1710",
                "typeString": "contract TimedCrowdsale"
              }
            },
            "id": 795,
            "nodeType": "InheritanceSpecifier",
            "src": "334:14:5"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 796,
              "name": "AsureBonusesCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 191,
              "src": "350:21:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AsureBonusesCrowdsale_$191",
                "typeString": "contract AsureBonusesCrowdsale"
              }
            },
            "id": 797,
            "nodeType": "InheritanceSpecifier",
            "src": "350:21:5"
          }
        ],
        "contractDependencies": [
          191,
          1526,
          1710,
          2347,
          3197
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 833,
        "linearizedBaseContracts": [
          833,
          191,
          2347,
          1710,
          1526,
          3197
        ],
        "name": "TestAsureBonusesCrowdsale",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 831,
              "nodeType": "Block",
              "src": "743:2:5",
              "statements": []
            },
            "documentation": null,
            "id": 832,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "31",
                    "id": 816,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "611:1:5",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  {
                    "argumentTypes": null,
                    "id": 817,
                    "name": "wallet",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 807,
                    "src": "614:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 818,
                    "name": "token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 809,
                    "src": "622:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3022",
                      "typeString": "contract IERC20"
                    }
                  }
                ],
                "id": 819,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 815,
                  "name": "Crowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1526,
                  "src": "601:9:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Crowdsale_$1526_$",
                    "typeString": "type(contract Crowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "601:27:5"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 821,
                    "name": "openingTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 811,
                    "src": "647:11:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 822,
                    "name": "closingTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 813,
                    "src": "660:11:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 823,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 820,
                  "name": "TimedCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1710,
                  "src": "632:14:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_TimedCrowdsale_$1710_$",
                    "typeString": "type(contract TimedCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "632:40:5"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 825,
                    "name": "bonusRate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 799,
                    "src": "698:9:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 826,
                    "name": "bonusTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 801,
                    "src": "709:9:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 827,
                    "name": "defaultRate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 803,
                    "src": "720:11:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 828,
                    "name": "owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 805,
                    "src": "733:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 829,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 824,
                  "name": "AsureBonusesCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 191,
                  "src": "676:21:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_AsureBonusesCrowdsale_$191_$",
                    "typeString": "type(contract AsureBonusesCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "676:63:5"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 814,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 799,
                  "name": "bonusRate",
                  "nodeType": "VariableDeclaration",
                  "scope": 832,
                  "src": "395:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 798,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "395:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 801,
                  "name": "bonusTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 832,
                  "src": "419:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 800,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "419:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 803,
                  "name": "defaultRate",
                  "nodeType": "VariableDeclaration",
                  "scope": 832,
                  "src": "443:19:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 802,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "443:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 805,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 832,
                  "src": "469:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 804,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "469:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 807,
                  "name": "wallet",
                  "nodeType": "VariableDeclaration",
                  "scope": 832,
                  "src": "489:22:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 806,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "489:15:5",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 809,
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 832,
                  "src": "518:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$3022",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 808,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3022,
                    "src": "518:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3022",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 811,
                  "name": "openingTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 832,
                  "src": "537:19:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 810,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "537:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 813,
                  "name": "closingTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 832,
                  "src": "563:19:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 812,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "563:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "388:199:5"
            },
            "returnParameters": {
              "id": 830,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "743:0:5"
            },
            "scope": 833,
            "src": "377:368:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 834,
        "src": "285:463:5"
      }
    ],
    "src": "0:750:5"
  },
  "legacyAST": {
    "absolutePath": "/C/git/crowdsale/packages/crowdsale/contracts/test/TestAsureBonusesCrowdsale.sol",
    "exportedSymbols": {
      "TestAsureBonusesCrowdsale": [
        833
      ]
    },
    "id": 834,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 787,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:5"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "id": 788,
        "nodeType": "ImportDirective",
        "scope": 834,
        "sourceUnit": 3023,
        "src": "27:64:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/crowdsale/Crowdsale.sol",
        "file": "openzeppelin-solidity/contracts/crowdsale/Crowdsale.sol",
        "id": 789,
        "nodeType": "ImportDirective",
        "scope": 834,
        "sourceUnit": 1527,
        "src": "93:65:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/crowdsale/validation/TimedCrowdsale.sol",
        "file": "openzeppelin-solidity/contracts/crowdsale/validation/TimedCrowdsale.sol",
        "id": 790,
        "nodeType": "ImportDirective",
        "scope": 834,
        "sourceUnit": 1711,
        "src": "160:81:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/git/crowdsale/packages/crowdsale/contracts/AsureBonusesCrowdsale.sol",
        "file": "../AsureBonusesCrowdsale.sol",
        "id": 791,
        "nodeType": "ImportDirective",
        "scope": 834,
        "sourceUnit": 192,
        "src": "243:38:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 792,
              "name": "Crowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1526,
              "src": "323:9:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Crowdsale_$1526",
                "typeString": "contract Crowdsale"
              }
            },
            "id": 793,
            "nodeType": "InheritanceSpecifier",
            "src": "323:9:5"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 794,
              "name": "TimedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1710,
              "src": "334:14:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TimedCrowdsale_$1710",
                "typeString": "contract TimedCrowdsale"
              }
            },
            "id": 795,
            "nodeType": "InheritanceSpecifier",
            "src": "334:14:5"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 796,
              "name": "AsureBonusesCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 191,
              "src": "350:21:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AsureBonusesCrowdsale_$191",
                "typeString": "contract AsureBonusesCrowdsale"
              }
            },
            "id": 797,
            "nodeType": "InheritanceSpecifier",
            "src": "350:21:5"
          }
        ],
        "contractDependencies": [
          191,
          1526,
          1710,
          2347,
          3197
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 833,
        "linearizedBaseContracts": [
          833,
          191,
          2347,
          1710,
          1526,
          3197
        ],
        "name": "TestAsureBonusesCrowdsale",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 831,
              "nodeType": "Block",
              "src": "743:2:5",
              "statements": []
            },
            "documentation": null,
            "id": 832,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "31",
                    "id": 816,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "611:1:5",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  {
                    "argumentTypes": null,
                    "id": 817,
                    "name": "wallet",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 807,
                    "src": "614:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 818,
                    "name": "token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 809,
                    "src": "622:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3022",
                      "typeString": "contract IERC20"
                    }
                  }
                ],
                "id": 819,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 815,
                  "name": "Crowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1526,
                  "src": "601:9:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Crowdsale_$1526_$",
                    "typeString": "type(contract Crowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "601:27:5"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 821,
                    "name": "openingTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 811,
                    "src": "647:11:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 822,
                    "name": "closingTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 813,
                    "src": "660:11:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 823,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 820,
                  "name": "TimedCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1710,
                  "src": "632:14:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_TimedCrowdsale_$1710_$",
                    "typeString": "type(contract TimedCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "632:40:5"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 825,
                    "name": "bonusRate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 799,
                    "src": "698:9:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 826,
                    "name": "bonusTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 801,
                    "src": "709:9:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 827,
                    "name": "defaultRate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 803,
                    "src": "720:11:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 828,
                    "name": "owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 805,
                    "src": "733:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 829,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 824,
                  "name": "AsureBonusesCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 191,
                  "src": "676:21:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_AsureBonusesCrowdsale_$191_$",
                    "typeString": "type(contract AsureBonusesCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "676:63:5"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 814,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 799,
                  "name": "bonusRate",
                  "nodeType": "VariableDeclaration",
                  "scope": 832,
                  "src": "395:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 798,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "395:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 801,
                  "name": "bonusTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 832,
                  "src": "419:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 800,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "419:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 803,
                  "name": "defaultRate",
                  "nodeType": "VariableDeclaration",
                  "scope": 832,
                  "src": "443:19:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 802,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "443:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 805,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 832,
                  "src": "469:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 804,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "469:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 807,
                  "name": "wallet",
                  "nodeType": "VariableDeclaration",
                  "scope": 832,
                  "src": "489:22:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 806,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "489:15:5",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 809,
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 832,
                  "src": "518:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$3022",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 808,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3022,
                    "src": "518:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3022",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 811,
                  "name": "openingTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 832,
                  "src": "537:19:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 810,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "537:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 813,
                  "name": "closingTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 832,
                  "src": "563:19:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 812,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "563:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "388:199:5"
            },
            "returnParameters": {
              "id": 830,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "743:0:5"
            },
            "scope": 833,
            "src": "377:368:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 834,
        "src": "285:463:5"
      }
    ],
    "src": "0:750:5"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.6+commit.b259423e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.3",
  "updatedAt": "2019-03-22T13:44:59.290Z",
  "devdoc": {
    "methods": {
      "bonusRate()": {
        "return": "the number of token units a buyer gets per wei before the bonus time.\r"
      },
      "bonusTime()": {
        "return": "the crowdsale bonus time in unix epoch seconds.\r"
      },
      "buyTokens(address)": {
        "details": "low level token purchase ***DO NOT OVERRIDE*** This function has a non-reentrancy guard, so it shouldn't be called by another `nonReentrant` function.",
        "params": {
          "beneficiary": "Recipient of the token purchase"
        }
      },
      "closingTime()": {
        "return": "the crowdsale closing time."
      },
      "defaultRate()": {
        "return": "the number of token units a buyer gets per wei after the bonus time.\r"
      },
      "getCurrentRate()": {
        "details": "Returns the rate of tokens per wei at the present time.\r Note that, rate can be changed by the owner until the crowdsale is open.\r",
        "return": "The number of tokens a buyer gets per wei at a given time\r"
      },
      "hasClosed()": {
        "details": "Checks whether the period in which the crowdsale is open has already elapsed.",
        "return": "Whether crowdsale period has elapsed"
      },
      "isOpen()": {
        "return": "true if the crowdsale is open, false otherwise."
      },
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract."
      },
      "openingTime()": {
        "return": "the crowdsale opening time."
      },
      "owner()": {
        "return": "the address of the owner."
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract."
      },
      "token()": {
        "return": "the token being sold."
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      },
      "updateRates(uint256,uint256,uint256)": {
        "details": "Owner can update bonus rate, bonus time, and default rate before crowdsale opened.\r",
        "params": {
          "newBonusRate": "Number of token units a buyer gets per wei before bonus time\r",
          "newBonusTime": "The crowdsale bonus time in unix epoch seconds\r",
          "newDefaultRate": "Number of token units a buyer gets per wei after the bonus time\r"
        }
      },
      "wallet()": {
        "return": "the address where funds are collected."
      },
      "weiRaised()": {
        "return": "the amount of wei raised."
      }
    }
  },
  "userdoc": {
    "methods": {
      "rate()": {
        "notice": "The base rate function is overridden to revert, since this crowdsale doesn't use it, and\r all calls to it are a mistake.\r"
      },
      "renounceOwnership()": {
        "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      }
    }
  }
}