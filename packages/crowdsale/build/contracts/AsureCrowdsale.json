{
  "contractName": "AsureCrowdsale",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addWhitelisted",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "hasClosed",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "removeWhitelisted",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "bonusTimeslot",
          "type": "uint256"
        },
        {
          "name": "bonusRate",
          "type": "uint256"
        }
      ],
      "name": "updateBonusTimeslotRate",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "rate",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "cap",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isWhitelisted",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "weiRaised",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOpen",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "closingTime",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceWhitelistAdmin",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "capReached",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "wallet",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addWhitelistAdmin",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "initialRate",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "nextBonusTimeslot",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "openingTime",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isWhitelistAdmin",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "nextBonusRate",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newInitialRate",
          "type": "uint256"
        }
      ],
      "name": "updateInitialRate",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceWhitelisted",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "beneficiary",
          "type": "address"
        }
      ],
      "name": "buyTokens",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getCurrentRate",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "rate",
          "type": "uint256"
        },
        {
          "name": "wallet",
          "type": "address"
        },
        {
          "name": "token",
          "type": "address"
        },
        {
          "name": "cap",
          "type": "uint256"
        },
        {
          "name": "openingTime",
          "type": "uint256"
        },
        {
          "name": "closingTime",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "nextBonusTimeslot",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "nextBonusRate",
          "type": "uint256"
        }
      ],
      "name": "BonusTimeslotRateUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "initialRate",
          "type": "uint256"
        }
      ],
      "name": "InitialRateUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "purchaser",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokensPurchased",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "WhitelistedAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "WhitelistedRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "WhitelistAdminAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "WhitelistAdminRemoved",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "accounts",
          "type": "address[]"
        }
      ],
      "name": "addWhitelistedAccounts",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x60806040523480156200001157600080fd5b5060405160c08062001cc6833981018060405260c08110156200003357600080fd5b8101908080519060200190929190805190602001909291908051906020019092919080519060200190929190805190602001909291908051906020019092919050505085858383868a8a8a620000983362000334640100000000026401000000009004565b600160028190555060008311620000ae57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415620000e957600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156200012457600080fd5b8260058190555081600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505060008111620001be57600080fd5b806007819055505042821015620001d457600080fd5b818111620001e157600080fd5b8160088190555080600981905550505033600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008211620002bd57600080fd5b81600b81905550620002de816200039e640100000000026401000000009004565b5050620002fa85620003de640100000000026401000000009004565b6200032873cbbc3d3d381f3a9a48cbae9ca701ac3c92e0aea5620003de640100000000026401000000009004565b505050505050620006f1565b620003588160006200041f64010000000002620012d4179091906401000000009004565b8073ffffffffffffffffffffffffffffffffffffffff167f22380c05984257a1cb900161c713dd71d39e74820f1aea43bd3f1bdd2096129960405160405180910390a250565b620003b7620004de640100000000026401000000009004565b620003c157600080fd5b620003db8162000536640100000000026401000000009004565b50565b620003f83362000631640100000000026401000000009004565b6200040257600080fd5b6200041c8162000334640100000000026401000000009004565b50565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156200045a57600080fd5b6200047582826200065e640100000000026401000000009004565b156200048057600080fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6000600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156200057157600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000620006578260006200065e6401000000000262000fa9179091906401000000009004565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156200069a57600080fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6115c580620007016000396000f3fe6080604052600436106101df576000357c010000000000000000000000000000000000000000000000000000000090048063715018a611610114578063bb5f747b116100b2578063ec8ac4d811610081578063ec8ac4d8146107fb578063f2fde38b1461083f578063f7fb07b014610890578063fc0c546a146108bb576101df565b8063bb5f747b14610715578063c404c7211461077e578063d1c6f448146107a9578063d6cd9473146107e4576101df565b80638f32d59b116100ee5780638f32d59b146106655780639e51051f14610694578063a02d8563146106bf578063b7a8807c146106ea576101df565b8063715018a6146105a65780637362d9c8146105bd5780638da5cb5b1461060e576101df565b80633af32abf116101815780634b6753bc1161015b5780634b6753bc146104de5780634c5a628c146105095780634f93594514610520578063521eb2731461054f576101df565b80633af32abf1461041b5780634042b66f1461048457806347535d7b146104af576101df565b80632a4bc321116101bd5780632a4bc321146102bb5780632aa3ae9c146103805780632c4e722e146103c5578063355274ea146103f0576101df565b806310154bad146101ea5780631515bc2b1461023b578063291d95491461026a575b6101e833610912565b005b3480156101f657600080fd5b506102396004803603602081101561020d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a08565b005b34801561024757600080fd5b50610250610a26565b604051808215151515815260200191505060405180910390f35b34801561027657600080fd5b506102b96004803603602081101561028d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a32565b005b3480156102c757600080fd5b5061037e600480360360208110156102de57600080fd5b81019080803590602001906401000000008111156102fb57600080fd5b82018360208201111561030d57600080fd5b8035906020019184602083028401116401000000008311171561032f57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050509192919290505050610a50565b005b34801561038c57600080fd5b506103c3600480360360408110156103a357600080fd5b810190808035906020019092919080359060200190929190505050610a9e565b005b3480156103d157600080fd5b506103da610abd565b6040518082815260200191505060405180910390f35b3480156103fc57600080fd5b50610405610ac4565b6040518082815260200191505060405180910390f35b34801561042757600080fd5b5061046a6004803603602081101561043e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ace565b604051808215151515815260200191505060405180910390f35b34801561049057600080fd5b50610499610aeb565b6040518082815260200191505060405180910390f35b3480156104bb57600080fd5b506104c4610af5565b604051808215151515815260200191505060405180910390f35b3480156104ea57600080fd5b506104f3610b10565b6040518082815260200191505060405180910390f35b34801561051557600080fd5b5061051e610b1a565b005b34801561052c57600080fd5b50610535610b25565b604051808215151515815260200191505060405180910390f35b34801561055b57600080fd5b50610564610b39565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156105b257600080fd5b506105bb610b63565b005b3480156105c957600080fd5b5061060c600480360360208110156105e057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c35565b005b34801561061a57600080fd5b50610623610c53565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561067157600080fd5b5061067a610c7d565b604051808215151515815260200191505060405180910390f35b3480156106a057600080fd5b506106a9610cd5565b6040518082815260200191505060405180910390f35b3480156106cb57600080fd5b506106d4610cdf565b6040518082815260200191505060405180910390f35b3480156106f657600080fd5b506106ff610ce9565b6040518082815260200191505060405180910390f35b34801561072157600080fd5b506107646004803603602081101561073857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610cf3565b604051808215151515815260200191505060405180910390f35b34801561078a57600080fd5b50610793610d10565b6040518082815260200191505060405180910390f35b3480156107b557600080fd5b506107e2600480360360208110156107cc57600080fd5b8101908080359060200190929190505050610d1a565b005b3480156107f057600080fd5b506107f9610d37565b005b61083d6004803603602081101561081157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610912565b005b34801561084b57600080fd5b5061088e6004803603602081101561086257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d42565b005b34801561089c57600080fd5b506108a5610d5f565b6040518082815260200191505060405180910390f35b3480156108c757600080fd5b506108d0610d92565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60016002600082825401925050819055506000600254905060003490506109398382610dbc565b600061094482610ddc565b905061095b82600654610e0490919063ffffffff16565b60068190555061096b8482610e23565b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f6faf93231a456e552dbc9961f58d9713ee4f2e69d15f1975b050ef0911053a7b8484604051808381526020018281526020019250505060405180910390a36109e28483610e31565b6109ea610e35565b6109f48483610ea0565b50506002548114610a0457600080fd5b5050565b610a1133610cf3565b610a1a57600080fd5b610a2381610ea4565b50565b60006009544211905090565b610a3b33610cf3565b610a4457600080fd5b610a4d81610efe565b50565b610a5933610cf3565b610a6257600080fd5b60008090505b8151811015610a9a57610a8d828281518110610a8057fe5b6020026020010151610ea4565b8080600101915050610a68565b5050565b610aa6610c7d565b610aaf57600080fd5b610ab98282610f58565b5050565b6000806000fd5b6000600754905090565b6000610ae4826001610fa990919063ffffffff16565b9050919050565b6000600654905090565b60006008544210158015610b0b57506009544211155b905090565b6000600954905090565b610b233361103b565b565b6000600754610b32610aeb565b1015905090565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610b6b610c7d565b610b7457600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b610c3e33610cf3565b610c4757600080fd5b610c5081611095565b50565b6000600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6000600b54905090565b6000600c54905090565b6000600854905090565b6000610d09826000610fa990919063ffffffff16565b9050919050565b6000600d54905090565b610d22610c7d565b610d2b57600080fd5b610d34816110ef565b50565b610d4033610efe565b565b610d4a610c7d565b610d5357600080fd5b610d5c81611130565b50565b6000610d69610af5565b610d765760009050610d8f565b600c544210610d8957600d549050610d8f565b600b5490505b90565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610dc582610ace565b610dce57600080fd5b610dd8828261122a565b5050565b600080610de7610d5f565b9050610dfc838261124990919063ffffffff16565b915050919050565b600080828401905083811015610e1957600080fd5b8091505092915050565b610e2d8282611283565b5050565b5050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f19350505050158015610e9d573d6000803e3d6000fd5b50565b5050565b610eb88160016112d490919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fee1504a83b6d4a361f4c1dc78ab59bfa30d6a3b6612c403e86bb01ef2984295f60405160405180910390a250565b610f1281600161138090919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f270d9b30cf5b0793bbfd54c9d5b94aeb49462b8148399000265144a8722da6b660405160405180910390a250565b81600c8190555080600d819055507f4e7e6d92843fbe2fd0f27456b98f02069ee4d44de6a198b7db55f5bfd76fe9248282604051808381526020018281526020019250505060405180910390a15050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610fe457600080fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b61104f81600061138090919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f0a8eb35e5ca14b3d6f28e4abf2f128dbab231a58b56e89beb5d636115001e16560405160405180910390a250565b6110a98160006112d490919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f22380c05984257a1cb900161c713dd71d39e74820f1aea43bd3f1bdd2096129960405160405180910390a250565b80600b819055507f2d5f5ea15ed32044e5f601470ede06bf73cf3c8983ebcfd001fc563fcec0fc9d816040518082815260200191505060405180910390a150565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561116a57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b611232610af5565b61123b57600080fd5b611245828261142b565b5050565b60008083141561125c576000905061127d565b600082840290508284828161126d57fe5b041461127857600080fd5b809150505b92915050565b6112d08282600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166114619092919063ffffffff16565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561130e57600080fd5b6113188282610fa9565b1561132257600080fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156113ba57600080fd5b6113c48282610fa9565b6113cd57600080fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b611435828261154d565b60075461145282611444610aeb565b610e0490919063ffffffff16565b111561145d57600080fd5b5050565b8273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561150457600080fd5b505af1158015611518573d6000803e3d6000fd5b505050506040513d602081101561152e57600080fd5b810190808051906020019092919050505061154857600080fd5b505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561158757600080fd5b600081141561159557600080fd5b505056fea165627a7a72305820be084431e5d9c4a88cbaaef6c5f7a5d1d881a9a11c72eff2259bf22eed36a4f50029",
  "deployedBytecode": "0x6080604052600436106101df576000357c010000000000000000000000000000000000000000000000000000000090048063715018a611610114578063bb5f747b116100b2578063ec8ac4d811610081578063ec8ac4d8146107fb578063f2fde38b1461083f578063f7fb07b014610890578063fc0c546a146108bb576101df565b8063bb5f747b14610715578063c404c7211461077e578063d1c6f448146107a9578063d6cd9473146107e4576101df565b80638f32d59b116100ee5780638f32d59b146106655780639e51051f14610694578063a02d8563146106bf578063b7a8807c146106ea576101df565b8063715018a6146105a65780637362d9c8146105bd5780638da5cb5b1461060e576101df565b80633af32abf116101815780634b6753bc1161015b5780634b6753bc146104de5780634c5a628c146105095780634f93594514610520578063521eb2731461054f576101df565b80633af32abf1461041b5780634042b66f1461048457806347535d7b146104af576101df565b80632a4bc321116101bd5780632a4bc321146102bb5780632aa3ae9c146103805780632c4e722e146103c5578063355274ea146103f0576101df565b806310154bad146101ea5780631515bc2b1461023b578063291d95491461026a575b6101e833610912565b005b3480156101f657600080fd5b506102396004803603602081101561020d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a08565b005b34801561024757600080fd5b50610250610a26565b604051808215151515815260200191505060405180910390f35b34801561027657600080fd5b506102b96004803603602081101561028d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a32565b005b3480156102c757600080fd5b5061037e600480360360208110156102de57600080fd5b81019080803590602001906401000000008111156102fb57600080fd5b82018360208201111561030d57600080fd5b8035906020019184602083028401116401000000008311171561032f57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050509192919290505050610a50565b005b34801561038c57600080fd5b506103c3600480360360408110156103a357600080fd5b810190808035906020019092919080359060200190929190505050610a9e565b005b3480156103d157600080fd5b506103da610abd565b6040518082815260200191505060405180910390f35b3480156103fc57600080fd5b50610405610ac4565b6040518082815260200191505060405180910390f35b34801561042757600080fd5b5061046a6004803603602081101561043e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ace565b604051808215151515815260200191505060405180910390f35b34801561049057600080fd5b50610499610aeb565b6040518082815260200191505060405180910390f35b3480156104bb57600080fd5b506104c4610af5565b604051808215151515815260200191505060405180910390f35b3480156104ea57600080fd5b506104f3610b10565b6040518082815260200191505060405180910390f35b34801561051557600080fd5b5061051e610b1a565b005b34801561052c57600080fd5b50610535610b25565b604051808215151515815260200191505060405180910390f35b34801561055b57600080fd5b50610564610b39565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156105b257600080fd5b506105bb610b63565b005b3480156105c957600080fd5b5061060c600480360360208110156105e057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c35565b005b34801561061a57600080fd5b50610623610c53565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561067157600080fd5b5061067a610c7d565b604051808215151515815260200191505060405180910390f35b3480156106a057600080fd5b506106a9610cd5565b6040518082815260200191505060405180910390f35b3480156106cb57600080fd5b506106d4610cdf565b6040518082815260200191505060405180910390f35b3480156106f657600080fd5b506106ff610ce9565b6040518082815260200191505060405180910390f35b34801561072157600080fd5b506107646004803603602081101561073857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610cf3565b604051808215151515815260200191505060405180910390f35b34801561078a57600080fd5b50610793610d10565b6040518082815260200191505060405180910390f35b3480156107b557600080fd5b506107e2600480360360208110156107cc57600080fd5b8101908080359060200190929190505050610d1a565b005b3480156107f057600080fd5b506107f9610d37565b005b61083d6004803603602081101561081157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610912565b005b34801561084b57600080fd5b5061088e6004803603602081101561086257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d42565b005b34801561089c57600080fd5b506108a5610d5f565b6040518082815260200191505060405180910390f35b3480156108c757600080fd5b506108d0610d92565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60016002600082825401925050819055506000600254905060003490506109398382610dbc565b600061094482610ddc565b905061095b82600654610e0490919063ffffffff16565b60068190555061096b8482610e23565b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f6faf93231a456e552dbc9961f58d9713ee4f2e69d15f1975b050ef0911053a7b8484604051808381526020018281526020019250505060405180910390a36109e28483610e31565b6109ea610e35565b6109f48483610ea0565b50506002548114610a0457600080fd5b5050565b610a1133610cf3565b610a1a57600080fd5b610a2381610ea4565b50565b60006009544211905090565b610a3b33610cf3565b610a4457600080fd5b610a4d81610efe565b50565b610a5933610cf3565b610a6257600080fd5b60008090505b8151811015610a9a57610a8d828281518110610a8057fe5b6020026020010151610ea4565b8080600101915050610a68565b5050565b610aa6610c7d565b610aaf57600080fd5b610ab98282610f58565b5050565b6000806000fd5b6000600754905090565b6000610ae4826001610fa990919063ffffffff16565b9050919050565b6000600654905090565b60006008544210158015610b0b57506009544211155b905090565b6000600954905090565b610b233361103b565b565b6000600754610b32610aeb565b1015905090565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610b6b610c7d565b610b7457600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b610c3e33610cf3565b610c4757600080fd5b610c5081611095565b50565b6000600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6000600b54905090565b6000600c54905090565b6000600854905090565b6000610d09826000610fa990919063ffffffff16565b9050919050565b6000600d54905090565b610d22610c7d565b610d2b57600080fd5b610d34816110ef565b50565b610d4033610efe565b565b610d4a610c7d565b610d5357600080fd5b610d5c81611130565b50565b6000610d69610af5565b610d765760009050610d8f565b600c544210610d8957600d549050610d8f565b600b5490505b90565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610dc582610ace565b610dce57600080fd5b610dd8828261122a565b5050565b600080610de7610d5f565b9050610dfc838261124990919063ffffffff16565b915050919050565b600080828401905083811015610e1957600080fd5b8091505092915050565b610e2d8282611283565b5050565b5050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f19350505050158015610e9d573d6000803e3d6000fd5b50565b5050565b610eb88160016112d490919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fee1504a83b6d4a361f4c1dc78ab59bfa30d6a3b6612c403e86bb01ef2984295f60405160405180910390a250565b610f1281600161138090919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f270d9b30cf5b0793bbfd54c9d5b94aeb49462b8148399000265144a8722da6b660405160405180910390a250565b81600c8190555080600d819055507f4e7e6d92843fbe2fd0f27456b98f02069ee4d44de6a198b7db55f5bfd76fe9248282604051808381526020018281526020019250505060405180910390a15050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610fe457600080fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b61104f81600061138090919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f0a8eb35e5ca14b3d6f28e4abf2f128dbab231a58b56e89beb5d636115001e16560405160405180910390a250565b6110a98160006112d490919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f22380c05984257a1cb900161c713dd71d39e74820f1aea43bd3f1bdd2096129960405160405180910390a250565b80600b819055507f2d5f5ea15ed32044e5f601470ede06bf73cf3c8983ebcfd001fc563fcec0fc9d816040518082815260200191505060405180910390a150565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561116a57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b611232610af5565b61123b57600080fd5b611245828261142b565b5050565b60008083141561125c576000905061127d565b600082840290508284828161126d57fe5b041461127857600080fd5b809150505b92915050565b6112d08282600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166114619092919063ffffffff16565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561130e57600080fd5b6113188282610fa9565b1561132257600080fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156113ba57600080fd5b6113c48282610fa9565b6113cd57600080fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b611435828261154d565b60075461145282611444610aeb565b610e0490919063ffffffff16565b111561145d57600080fd5b5050565b8273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561150457600080fd5b505af1158015611518573d6000803e3d6000fd5b505050506040513d602081101561152e57600080fd5b810190808051906020019092919050505061154857600080fd5b505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561158757600080fd5b600081141561159557600080fd5b505056fea165627a7a72305820be084431e5d9c4a88cbaaef6c5f7a5d1d881a9a11c72eff2259bf22eed36a4f50029",
  "sourceMap": "510:1027:1:-;;;632:717;8:9:-1;5:2;;;30:1;27;20:12;5:2;632:717:1;;;;;;;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;632:717:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1073:4;1079:6;1023:11;1036;1001:3;962:4;968:6;976:5;433:30:7;452:10;433:18;;;:30;;;:::i;:::-;576:1:22;560:13;:17;;;;2380:1:9;2373:4;:8;2365:17;;;;;;2418:1;2400:20;;:6;:20;;;;2392:29;;;;;;2465:1;2439:28;;2447:5;2439:28;;;;2431:37;;;;;;2487:4;2479:5;:12;;;;2511:6;2501:7;;:16;;;;;;;;;;;;;;;;;;2536:5;2527:6;;:14;;;;;;;;;;;;;;;;;;2283:265;;;488:1:10;482:3;:7;474:16;;;;;;507:3;500:4;:10;;;;431:86;806:15:11;791:11;:30;;783:39;;;;;;854:11;840;:25;832:34;;;;;;892:11;877:12;:26;;;;928:11;913:12;:26;;;;657:289;;524:10:15;515:6;;:19;;;;;;;;;;;;;;;;;;582:6;;;;;;;;;;;549:40;;578:1;549:40;;;;;;;;;;;;1327:1:0;1313:11;:15;1305:24;;;;;;1350:11;1335:12;:26;;;;1367:24;1385:5;1367:17;;;:24;;;:::i;:::-;1224:172;;1252:25:1;1270:6;1252:17;;;:25;;;:::i;:::-;1283:61;1301:42;1283:17;;;:61;;;:::i;:::-;632:717;;;;;;510:1027;;923:143:7;987:29;1008:7;987:16;:20;;;;;;:29;;;;;:::i;:::-;1051:7;1031:28;;;;;;;;;;;;923:143;:::o;1655:107:15:-;863:9;:7;;;:9;;;:::i;:::-;855:18;;;;;;1727:28;1746:8;1727:18;;;:28;;;:::i;:::-;1655:107;:::o;706:114:7:-;524:28;541:10;524:16;;;:28;;;:::i;:::-;516:37;;;;;;786:27;805:7;786:18;;;:27;;;:::i;:::-;706:114;:::o;259:181:5:-;354:1;335:21;;:7;:21;;;;327:30;;;;;;376:18;380:4;386:7;376:3;;;:18;;;:::i;:::-;375:19;367:28;;;;;;429:4;406;:11;;:20;418:7;406:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;259:181;;:::o;979:90:15:-;1019:4;1056:6;;;;;;;;;;;1042:20;;:10;:20;;;1035:27;;979:90;:::o;1906:183::-;1999:1;1979:22;;:8;:22;;;;1971:31;;;;;;2046:8;2017:38;;2038:6;;;;;;;;;;;2017:38;;;;;;;;;;;;2074:8;2065:6;;:17;;;;;;;;;;;;;;;;;;1906:183;:::o;577:123:7:-;641:4;664:29;685:7;664:16;:20;;;;;;:29;;;;;:::i;:::-;657:36;;577:123;;;:::o;786:162:5:-;858:4;901:1;882:21;;:7;:21;;;;874:30;;;;;;921:4;:11;;:20;933:7;921:20;;;;;;;;;;;;;;;;;;;;;;;;;914:27;;786:162;;;;:::o;510:1027:1:-;;;;;;;",
  "deployedSourceMap": "510:1027:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2875:21:9;2885:10;2875:9;:21::i;:::-;510:1027:1;848:108:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;848:108:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;848:108:8;;;;;;;;;;;;;;;;;;;:::i;:::-;;1692:156:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1692:156:11;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;962:114:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;962:114:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;962:114:8;;;;;;;;;;;;;;;;;;;:::i;:::-;;1353:181:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1353:181:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1353:181:1;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1353:181:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1353:181:1;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;1353:181:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1353:181:1;;;;;;;;;;;;;;;:::i;:::-;;2564:153:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2564:153:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2564:153:0;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1542:65;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1542:65:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;580:73:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;580:73:10;;;:::i;:::-;;;;;;;;;;;;;;;;;;;725:117:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;725:117:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;725:117:8;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3424:85:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3424:85:9;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1339:189:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1339:189:11;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1165:89;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1165:89:11;;;:::i;:::-;;;;;;;;;;;;;;;;;;;826:91:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;826:91:7;;;:::i;:::-;;771:92:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;771:92:10;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3114:87:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3114:87:9;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1347:137:15;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1347:137:15;;;:::i;:::-;;706:114:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;706:114:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;706:114:7;;;;;;;;;;;;;;;;;;;:::i;:::-;;659:77:15;;8:9:-1;5:2;;;30:1;27;20:12;5:2;659:77:15;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;979:90;;8:9:-1;5:2;;;30:1;27;20:12;5:2;979:90:15;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1671:83:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1671:83:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1815:95;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1815:95:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1011:89:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1011:89:11;;;:::i;:::-;;;;;;;;;;;;;;;;;;;577:123:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;577:123:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;577:123:7;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1969:87:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1969:87:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2147:113;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2147:113:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2147:113:0;;;;;;;;;;;;;;;;;:::i;:::-;;1082:85:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1082:85:8;;;:::i;:::-;;3766:603:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3766:603:9;;;;;;;;;;;;;;;;;;;:::i;:::-;;1655:107:15;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1655:107:15;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1655:107:15;;;;;;;;;;;;;;;;;;;:::i;:::-;;3146:213:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3146:213:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2962:76:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2962:76:9;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3766:603;1010:1:22;993:13;;:18;;;;;;;;;;;1021:20;1044:13;;1021:36;;3844:17:9;3864:9;3844:29;;3883:44;3904:11;3917:9;3883:20;:44::i;:::-;3986:14;4003:26;4019:9;4003:15;:26::i;:::-;3986:43;;4077:25;4092:9;4077:10;;:14;;:25;;;;:::i;:::-;4064:10;:38;;;;4113:37;4130:11;4143:6;4113:16;:37::i;:::-;4193:11;4165:59;;4181:10;4165:59;;;4206:9;4217:6;4165:59;;;;;;;;;;;;;;;;;;;;;;;;4235:46;4258:11;4271:9;4235:22;:46::i;:::-;4292:15;:13;:15::i;:::-;4317:45;4339:11;4352:9;4317:21;:45::i;:::-;1067:1:22;;1102:13;;1086:12;:29;1078:38;;;;;;3766:603:9;;:::o;848:108:8:-;524:28:7;541:10;524:16;:28::i;:::-;516:37;;;;;;925:24:8;941:7;925:15;:24::i;:::-;848:108;:::o;1692:156:11:-;1734:4;1829:12;;1811:15;:30;1804:37;;1692:156;:::o;962:114:8:-;524:28:7;541:10;524:16;:28::i;:::-;516:37;;;;;;1042:27:8;1061:7;1042:18;:27::i;:::-;962:114;:::o;1353:181:1:-;524:28:7;541:10;524:16;:28::i;:::-;516:37;;;;;;1449:6:1;1458:1;1449:10;;1444:86;1465:8;:15;1461:1;:19;1444:86;;;1495:28;1511:8;1520:1;1511:11;;;;;;;;;;;;;;1495:15;:28::i;:::-;1482:3;;;;;;;1444:86;;;;1353:181;:::o;2564:153:0:-;863:9:15;:7;:9::i;:::-;855:18;;;;;;2662:50:0;2687:13;2702:9;2662:24;:50::i;:::-;2564:153;;:::o;1542:65::-;1579:7;1594:8;;;580:73:10;616:7;642:4;;635:11;;580:73;:::o;725:117:8:-;786:4;809:26;827:7;809:13;:17;;:26;;;;:::i;:::-;802:33;;725:117;;;:::o;3424:85:9:-;3466:7;3492:10;;3485:17;;3424:85;:::o;1339:189:11:-;1378:4;1474:12;;1455:15;:31;;:66;;;;;1509:12;;1490:15;:31;;1455:66;1448:73;;1339:189;:::o;1165:89::-;1209:7;1235:12;;1228:19;;1165:89;:::o;826:91:7:-;877:33;899:10;877:21;:33::i;:::-;826:91::o;771:92:10:-;814:4;852;;837:11;:9;:11::i;:::-;:19;;830:26;;771:92;:::o;3114:87:9:-;3153:15;3187:7;;;;;;;;;;;3180:14;;3114:87;:::o;1347:137:15:-;863:9;:7;:9::i;:::-;855:18;;;;;;1445:1;1408:40;;1429:6;;;;;;;;;;;1408:40;;;;;;;;;;;;1475:1;1458:6;;:19;;;;;;;;;;;;;;;;;;1347:137::o;706:114:7:-;524:28;541:10;524:16;:28::i;:::-;516:37;;;;;;786:27;805:7;786:18;:27::i;:::-;706:114;:::o;659:77:15:-;697:7;723:6;;;;;;;;;;;716:13;;659:77;:::o;979:90::-;1019:4;1056:6;;;;;;;;;;;1042:20;;:10;:20;;;1035:27;;979:90;:::o;1671:83:0:-;1715:7;1737:12;;1730:19;;1671:83;:::o;1815:95::-;1865:7;1887:18;;1880:25;;1815:95;:::o;1011:89:11:-;1055:7;1081:12;;1074:19;;1011:89;:::o;577:123:7:-;641:4;664:29;685:7;664:16;:20;;:29;;;;:::i;:::-;657:36;;577:123;;;:::o;1969:87:0:-;2015:7;2037:14;;2030:21;;1969:87;:::o;2147:113::-;863:9:15;:7;:9::i;:::-;855:18;;;;;;2221:34:0;2240:14;2221:18;:34::i;:::-;2147:113;:::o;1082:85:8:-;1130:30;1149:10;1130:18;:30::i;:::-;1082:85::o;1655:107:15:-;863:9;:7;:9::i;:::-;855:18;;;;;;1727:28;1746:8;1727:18;:28::i;:::-;1655:107;:::o;3146:213:0:-;3193:7;3213:8;:6;:8::i;:::-;3208:38;;3238:1;3231:8;;;;3208:38;3274:18;;3255:15;:37;3251:79;;3309:14;;3302:21;;;;3251:79;3342:12;;3335:19;;3146:213;;:::o;2962:76:9:-;3000:6;3025;;;;;;;;;;;3018:13;;2962:76;:::o;535:201:12:-;639:27;653:12;639:13;:27::i;:::-;631:36;;;;;;677:52;704:12;718:10;677:26;:52::i;:::-;535:201;;:::o;3585:164:0:-;3652:7;3667:19;3689:16;:14;:16::i;:::-;3667:38;;3718:26;3734:9;3718:11;:15;;:26;;;;:::i;:::-;3711:33;;;3585:164;;;:::o;1431:145:14:-;1489:7;1508:9;1524:1;1520;:5;1508:17;;1548:1;1543;:6;;1535:15;;;;;;1568:1;1561:8;;;1431:145;;;;:::o;6206:134:9:-;6293:40;6308:11;6321;6293:14;:40::i;:::-;6206:134;;:::o;6610:145::-;;;:::o;7211:78::-;7255:7;;;;;;;;;;;:16;;:27;7272:9;7255:27;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7255:27:9;7211:78::o;5374:149::-;;;:::o;1173:134:8:-;1234:26;1252:7;1234:13;:17;;:26;;;;:::i;:::-;1292:7;1275:25;;;;;;;;;;;;1173:134;:::o;1313:142::-;1377:29;1398:7;1377:13;:20;;:29;;;;:::i;:::-;1440:7;1421:27;;;;;;;;;;;;1313:142;:::o;2721:223:0:-;2833:13;2812:18;:34;;;;2869:9;2852:14;:26;;;;2889:50;2914:13;2929:9;2889:50;;;;;;;;;;;;;;;;;;;;;;;;2721:223;;:::o;786:162:5:-;858:4;901:1;882:21;;:7;:21;;;;874:30;;;;;;921:4;:11;;:20;933:7;921:20;;;;;;;;;;;;;;;;;;;;;;;;;914:27;;786:162;;;;:::o;1072:151:7:-;1139:32;1163:7;1139:16;:23;;:32;;;;:::i;:::-;1208:7;1186:30;;;;;;;;;;;;1072:151;:::o;923:143::-;987:29;1008:7;987:16;:20;;:29;;;;:::i;:::-;1051:7;1031:28;;;;;;;;;;;;923:143;:::o;2264:146:0:-;2346:14;2331:12;:29;;;;2371:34;2390:14;2371:34;;;;;;;;;;;;;;;;;;2264:146;:::o;1906:183:15:-;1999:1;1979:22;;:8;:22;;;;1971:31;;;;;;2046:8;2017:38;;2038:6;;;;;;;;;;;2017:38;;;;;;;;;;;;2074:8;2065:6;;:17;;;;;;;;;;;;;;;;;;1906:183;:::o;2040:165:11:-;442:8;:6;:8::i;:::-;434:17;;;;;;2148:50;2175:11;2188:9;2148:26;:50::i;:::-;2040:165;;:::o;229:421:14:-;287:7;532:1;527;:6;523:45;;;556:1;549:8;;;;523:45;578:9;594:1;590;:5;578:17;;622:1;617;613;:5;;;;;;:10;605:19;;;;;;642:1;635:8;;;229:421;;;;;:::o;5803:137:9:-;5888:45;5908:11;5921;5888:6;;;;;;;;;;;:19;;;;:45;;;;;:::i;:::-;5803:137;;:::o;259:181:5:-;354:1;335:21;;:7;:21;;;;327:30;;;;;;376:18;380:4;386:7;376:3;:18::i;:::-;375:19;367:28;;;;;;429:4;406;:11;;:20;418:7;406:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;259:181;;:::o;514:184::-;612:1;593:21;;:7;:21;;;;585:30;;;;;;633:18;637:4;643:7;633:3;:18::i;:::-;625:27;;;;;;686:5;663:4;:11;;:20;675:7;663:20;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;514:184;;:::o;1059:204:10:-;1153:50;1180:11;1193:9;1153:26;:50::i;:::-;1251:4;;1221:26;1237:9;1221:11;:9;:11::i;:::-;:15;;:26;;;;:::i;:::-;:34;;1213:43;;;;;;1059:204;;:::o;409:123:21:-;499:5;:14;;;514:2;518:5;499:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;499:25:21;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;499:25:21;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;499:25:21;;;;;;;;;;;;;;;;491:34;;;;;;409:123;;;:::o;4911:168:9:-;5036:1;5013:25;;:11;:25;;;;5005:34;;;;;;5070:1;5057:9;:14;;5049:23;;;;;;4911:168;;:::o",
  "source": "pragma solidity ^0.5.0;\n\nimport \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\";\nimport \"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\";\nimport \"openzeppelin-solidity/contracts/crowdsale/validation/CappedCrowdsale.sol\";\nimport \"openzeppelin-solidity/contracts/crowdsale/validation/TimedCrowdsale.sol\";\nimport \"openzeppelin-solidity/contracts/crowdsale/validation/WhitelistCrowdsale.sol\";\nimport \"openzeppelin-solidity/contracts/crowdsale/Crowdsale.sol\";\nimport \"./AsureBonusesCrowdsale.sol\";\n\ncontract AsureCrowdsale is Crowdsale, CappedCrowdsale, TimedCrowdsale, WhitelistCrowdsale, AsureBonusesCrowdsale {\n  //\n  constructor(\n    uint256 rate, // rate, in Asure Tokens\n    address payable wallet, // wallet to send Ether\n    IERC20 token, // the token\n    uint256 cap, // total cap, in wei\n    uint256 openingTime, // opening time in unix epoch seconds\n    uint256 closingTime    // closing time in unix epoch seconds\n  )\n  public\n  Crowdsale(rate, wallet, token)\n  CappedCrowdsale(cap)\n  TimedCrowdsale(openingTime, closingTime)\n  AsureBonusesCrowdsale(rate, wallet)\n  {\n    // nice, we just created a crowdsale that's only open\n    // for a certain amount of time\n    // and stops accepting contributions once it reaches `cap`\n    addWhitelistAdmin(wallet);\n    addWhitelistAdmin(0xcbBc3D3d381f3A9a48CbAE9Ca701aC3c92e0aEA5);\n  }\n\n  function addWhitelistedAccounts(address[] memory accounts) public onlyWhitelistAdmin {\n    for (uint i = 0; i < accounts.length; i++) {\n      _addWhitelisted(accounts[i]);\n    }\n  }\n\n}\n",
  "sourcePath": "/home/mischi/p/asurenetwork/crowdsale/packages/crowdsale/contracts/AsureCrowdsale.sol",
  "ast": {
    "absolutePath": "/home/mischi/p/asurenetwork/crowdsale/packages/crowdsale/contracts/AsureCrowdsale.sol",
    "exportedSymbols": {
      "AsureCrowdsale": [
        279
      ]
    },
    "id": 280,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 193,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "id": 194,
        "nodeType": "ImportDirective",
        "scope": 280,
        "sourceUnit": 2504,
        "src": "25:63:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "id": 195,
        "nodeType": "ImportDirective",
        "scope": 280,
        "sourceUnit": 2690,
        "src": "89:64:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/crowdsale/validation/CappedCrowdsale.sol",
        "file": "openzeppelin-solidity/contracts/crowdsale/validation/CappedCrowdsale.sol",
        "id": 196,
        "nodeType": "ImportDirective",
        "scope": 280,
        "sourceUnit": 1323,
        "src": "154:82:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/crowdsale/validation/TimedCrowdsale.sol",
        "file": "openzeppelin-solidity/contracts/crowdsale/validation/TimedCrowdsale.sol",
        "id": 197,
        "nodeType": "ImportDirective",
        "scope": 280,
        "sourceUnit": 1435,
        "src": "237:81:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/crowdsale/validation/WhitelistCrowdsale.sol",
        "file": "openzeppelin-solidity/contracts/crowdsale/validation/WhitelistCrowdsale.sol",
        "id": 198,
        "nodeType": "ImportDirective",
        "scope": 280,
        "sourceUnit": 1465,
        "src": "319:85:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/crowdsale/Crowdsale.sol",
        "file": "openzeppelin-solidity/contracts/crowdsale/Crowdsale.sol",
        "id": 199,
        "nodeType": "ImportDirective",
        "scope": 280,
        "sourceUnit": 1251,
        "src": "405:65:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/mischi/p/asurenetwork/crowdsale/packages/crowdsale/contracts/AsureBonusesCrowdsale.sol",
        "file": "./AsureBonusesCrowdsale.sol",
        "id": 200,
        "nodeType": "ImportDirective",
        "scope": 280,
        "sourceUnit": 192,
        "src": "471:37:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 201,
              "name": "Crowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1250,
              "src": "537:9:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Crowdsale_$1250",
                "typeString": "contract Crowdsale"
              }
            },
            "id": 202,
            "nodeType": "InheritanceSpecifier",
            "src": "537:9:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 203,
              "name": "CappedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1322,
              "src": "548:15:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CappedCrowdsale_$1322",
                "typeString": "contract CappedCrowdsale"
              }
            },
            "id": 204,
            "nodeType": "InheritanceSpecifier",
            "src": "548:15:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 205,
              "name": "TimedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1434,
              "src": "565:14:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TimedCrowdsale_$1434",
                "typeString": "contract TimedCrowdsale"
              }
            },
            "id": 206,
            "nodeType": "InheritanceSpecifier",
            "src": "565:14:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 207,
              "name": "WhitelistCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1464,
              "src": "581:18:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_WhitelistCrowdsale_$1464",
                "typeString": "contract WhitelistCrowdsale"
              }
            },
            "id": 208,
            "nodeType": "InheritanceSpecifier",
            "src": "581:18:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 209,
              "name": "AsureBonusesCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 191,
              "src": "601:21:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AsureBonusesCrowdsale_$191",
                "typeString": "contract AsureBonusesCrowdsale"
              }
            },
            "id": 210,
            "nodeType": "InheritanceSpecifier",
            "src": "601:21:1"
          }
        ],
        "contractDependencies": [
          191,
          874,
          983,
          1250,
          1322,
          1434,
          1464,
          2071,
          2864
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 279,
        "linearizedBaseContracts": [
          279,
          191,
          2071,
          1464,
          1434,
          1322,
          1250,
          2864,
          983,
          874
        ],
        "name": "AsureCrowdsale",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 249,
              "nodeType": "Block",
              "src": "1089:260:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 242,
                        "name": "wallet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 214,
                        "src": "1270:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 241,
                      "name": "addWhitelistAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 832,
                      "src": "1252:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1252:25:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 244,
                  "nodeType": "ExpressionStatement",
                  "src": "1252:25:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "307863624263334433643338316633413961343843624145394361373031614333633932653061454135",
                        "id": 246,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1301:42:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "value": "0xcbBc3D3d381f3A9a48CbAE9Ca701aC3c92e0aEA5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 245,
                      "name": "addWhitelistAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 832,
                      "src": "1283:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1283:61:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 248,
                  "nodeType": "ExpressionStatement",
                  "src": "1283:61:1"
                }
              ]
            },
            "documentation": null,
            "id": 250,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 225,
                    "name": "rate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 212,
                    "src": "962:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 226,
                    "name": "wallet",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 214,
                    "src": "968:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 227,
                    "name": "token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 216,
                    "src": "976:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$2689",
                      "typeString": "contract IERC20"
                    }
                  }
                ],
                "id": 228,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 224,
                  "name": "Crowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1250,
                  "src": "952:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Crowdsale_$1250_$",
                    "typeString": "type(contract Crowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "952:30:1"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 230,
                    "name": "cap",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 218,
                    "src": "1001:3:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 231,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 229,
                  "name": "CappedCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1322,
                  "src": "985:15:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_CappedCrowdsale_$1322_$",
                    "typeString": "type(contract CappedCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "985:20:1"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 233,
                    "name": "openingTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 220,
                    "src": "1023:11:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 234,
                    "name": "closingTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 222,
                    "src": "1036:11:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 235,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 232,
                  "name": "TimedCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1434,
                  "src": "1008:14:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_TimedCrowdsale_$1434_$",
                    "typeString": "type(contract TimedCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1008:40:1"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 237,
                    "name": "rate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 212,
                    "src": "1073:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 238,
                    "name": "wallet",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 214,
                    "src": "1079:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  }
                ],
                "id": 239,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 236,
                  "name": "AsureBonusesCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 191,
                  "src": "1051:21:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_AsureBonusesCrowdsale_$191_$",
                    "typeString": "type(contract AsureBonusesCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1051:35:1"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 223,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 212,
                  "name": "rate",
                  "nodeType": "VariableDeclaration",
                  "scope": 250,
                  "src": "649:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 211,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "649:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 214,
                  "name": "wallet",
                  "nodeType": "VariableDeclaration",
                  "scope": 250,
                  "src": "692:22:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 213,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "692:15:1",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 216,
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 250,
                  "src": "744:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$2689",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 215,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2689,
                    "src": "744:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$2689",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 218,
                  "name": "cap",
                  "nodeType": "VariableDeclaration",
                  "scope": 250,
                  "src": "775:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 217,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "775:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 220,
                  "name": "openingTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 250,
                  "src": "813:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 219,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "813:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 222,
                  "name": "closingTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 250,
                  "src": "876:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 221,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "876:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "643:297:1"
            },
            "returnParameters": {
              "id": 240,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1089:0:1"
            },
            "scope": 279,
            "src": "632:717:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 277,
              "nodeType": "Block",
              "src": "1438:96:1",
              "statements": [
                {
                  "body": {
                    "id": 275,
                    "nodeType": "Block",
                    "src": "1487:43:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 270,
                                "name": "accounts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 253,
                                "src": "1511:8:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 272,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 271,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 259,
                                "src": "1520:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1511:11:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 269,
                            "name": "_addWhitelisted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 966,
                            "src": "1495:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 273,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1495:28:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 274,
                        "nodeType": "ExpressionStatement",
                        "src": "1495:28:1"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 265,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 262,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 259,
                      "src": "1461:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 263,
                        "name": "accounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 253,
                        "src": "1465:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 264,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1465:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1461:19:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 276,
                  "initializationExpression": {
                    "assignments": [
                      259
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 259,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 276,
                        "src": "1449:6:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 258,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1449:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 261,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 260,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1458:1:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1449:10:1"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 267,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1482:3:1",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 266,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 259,
                        "src": "1482:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 268,
                    "nodeType": "ExpressionStatement",
                    "src": "1482:3:1"
                  },
                  "nodeType": "ForStatement",
                  "src": "1444:86:1"
                }
              ]
            },
            "documentation": null,
            "id": 278,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 256,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 255,
                  "name": "onlyWhitelistAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 807,
                  "src": "1419:18:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1419:18:1"
              }
            ],
            "name": "addWhitelistedAccounts",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 254,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 253,
                  "name": "accounts",
                  "nodeType": "VariableDeclaration",
                  "scope": 278,
                  "src": "1385:25:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 251,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1385:7:1",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 252,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1385:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1384:27:1"
            },
            "returnParameters": {
              "id": 257,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1438:0:1"
            },
            "scope": 279,
            "src": "1353:181:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 280,
        "src": "510:1027:1"
      }
    ],
    "src": "0:1538:1"
  },
  "legacyAST": {
    "absolutePath": "/home/mischi/p/asurenetwork/crowdsale/packages/crowdsale/contracts/AsureCrowdsale.sol",
    "exportedSymbols": {
      "AsureCrowdsale": [
        279
      ]
    },
    "id": 280,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 193,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "id": 194,
        "nodeType": "ImportDirective",
        "scope": 280,
        "sourceUnit": 2504,
        "src": "25:63:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "id": 195,
        "nodeType": "ImportDirective",
        "scope": 280,
        "sourceUnit": 2690,
        "src": "89:64:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/crowdsale/validation/CappedCrowdsale.sol",
        "file": "openzeppelin-solidity/contracts/crowdsale/validation/CappedCrowdsale.sol",
        "id": 196,
        "nodeType": "ImportDirective",
        "scope": 280,
        "sourceUnit": 1323,
        "src": "154:82:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/crowdsale/validation/TimedCrowdsale.sol",
        "file": "openzeppelin-solidity/contracts/crowdsale/validation/TimedCrowdsale.sol",
        "id": 197,
        "nodeType": "ImportDirective",
        "scope": 280,
        "sourceUnit": 1435,
        "src": "237:81:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/crowdsale/validation/WhitelistCrowdsale.sol",
        "file": "openzeppelin-solidity/contracts/crowdsale/validation/WhitelistCrowdsale.sol",
        "id": 198,
        "nodeType": "ImportDirective",
        "scope": 280,
        "sourceUnit": 1465,
        "src": "319:85:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/crowdsale/Crowdsale.sol",
        "file": "openzeppelin-solidity/contracts/crowdsale/Crowdsale.sol",
        "id": 199,
        "nodeType": "ImportDirective",
        "scope": 280,
        "sourceUnit": 1251,
        "src": "405:65:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/mischi/p/asurenetwork/crowdsale/packages/crowdsale/contracts/AsureBonusesCrowdsale.sol",
        "file": "./AsureBonusesCrowdsale.sol",
        "id": 200,
        "nodeType": "ImportDirective",
        "scope": 280,
        "sourceUnit": 192,
        "src": "471:37:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 201,
              "name": "Crowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1250,
              "src": "537:9:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Crowdsale_$1250",
                "typeString": "contract Crowdsale"
              }
            },
            "id": 202,
            "nodeType": "InheritanceSpecifier",
            "src": "537:9:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 203,
              "name": "CappedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1322,
              "src": "548:15:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CappedCrowdsale_$1322",
                "typeString": "contract CappedCrowdsale"
              }
            },
            "id": 204,
            "nodeType": "InheritanceSpecifier",
            "src": "548:15:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 205,
              "name": "TimedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1434,
              "src": "565:14:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TimedCrowdsale_$1434",
                "typeString": "contract TimedCrowdsale"
              }
            },
            "id": 206,
            "nodeType": "InheritanceSpecifier",
            "src": "565:14:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 207,
              "name": "WhitelistCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1464,
              "src": "581:18:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_WhitelistCrowdsale_$1464",
                "typeString": "contract WhitelistCrowdsale"
              }
            },
            "id": 208,
            "nodeType": "InheritanceSpecifier",
            "src": "581:18:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 209,
              "name": "AsureBonusesCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 191,
              "src": "601:21:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AsureBonusesCrowdsale_$191",
                "typeString": "contract AsureBonusesCrowdsale"
              }
            },
            "id": 210,
            "nodeType": "InheritanceSpecifier",
            "src": "601:21:1"
          }
        ],
        "contractDependencies": [
          191,
          874,
          983,
          1250,
          1322,
          1434,
          1464,
          2071,
          2864
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 279,
        "linearizedBaseContracts": [
          279,
          191,
          2071,
          1464,
          1434,
          1322,
          1250,
          2864,
          983,
          874
        ],
        "name": "AsureCrowdsale",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 249,
              "nodeType": "Block",
              "src": "1089:260:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 242,
                        "name": "wallet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 214,
                        "src": "1270:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 241,
                      "name": "addWhitelistAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 832,
                      "src": "1252:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1252:25:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 244,
                  "nodeType": "ExpressionStatement",
                  "src": "1252:25:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "307863624263334433643338316633413961343843624145394361373031614333633932653061454135",
                        "id": 246,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1301:42:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "value": "0xcbBc3D3d381f3A9a48CbAE9Ca701aC3c92e0aEA5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 245,
                      "name": "addWhitelistAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 832,
                      "src": "1283:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1283:61:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 248,
                  "nodeType": "ExpressionStatement",
                  "src": "1283:61:1"
                }
              ]
            },
            "documentation": null,
            "id": 250,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 225,
                    "name": "rate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 212,
                    "src": "962:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 226,
                    "name": "wallet",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 214,
                    "src": "968:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 227,
                    "name": "token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 216,
                    "src": "976:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$2689",
                      "typeString": "contract IERC20"
                    }
                  }
                ],
                "id": 228,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 224,
                  "name": "Crowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1250,
                  "src": "952:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Crowdsale_$1250_$",
                    "typeString": "type(contract Crowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "952:30:1"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 230,
                    "name": "cap",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 218,
                    "src": "1001:3:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 231,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 229,
                  "name": "CappedCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1322,
                  "src": "985:15:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_CappedCrowdsale_$1322_$",
                    "typeString": "type(contract CappedCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "985:20:1"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 233,
                    "name": "openingTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 220,
                    "src": "1023:11:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 234,
                    "name": "closingTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 222,
                    "src": "1036:11:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 235,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 232,
                  "name": "TimedCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1434,
                  "src": "1008:14:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_TimedCrowdsale_$1434_$",
                    "typeString": "type(contract TimedCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1008:40:1"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 237,
                    "name": "rate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 212,
                    "src": "1073:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 238,
                    "name": "wallet",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 214,
                    "src": "1079:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  }
                ],
                "id": 239,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 236,
                  "name": "AsureBonusesCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 191,
                  "src": "1051:21:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_AsureBonusesCrowdsale_$191_$",
                    "typeString": "type(contract AsureBonusesCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1051:35:1"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 223,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 212,
                  "name": "rate",
                  "nodeType": "VariableDeclaration",
                  "scope": 250,
                  "src": "649:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 211,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "649:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 214,
                  "name": "wallet",
                  "nodeType": "VariableDeclaration",
                  "scope": 250,
                  "src": "692:22:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 213,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "692:15:1",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 216,
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 250,
                  "src": "744:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$2689",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 215,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2689,
                    "src": "744:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$2689",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 218,
                  "name": "cap",
                  "nodeType": "VariableDeclaration",
                  "scope": 250,
                  "src": "775:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 217,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "775:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 220,
                  "name": "openingTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 250,
                  "src": "813:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 219,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "813:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 222,
                  "name": "closingTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 250,
                  "src": "876:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 221,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "876:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "643:297:1"
            },
            "returnParameters": {
              "id": 240,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1089:0:1"
            },
            "scope": 279,
            "src": "632:717:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 277,
              "nodeType": "Block",
              "src": "1438:96:1",
              "statements": [
                {
                  "body": {
                    "id": 275,
                    "nodeType": "Block",
                    "src": "1487:43:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 270,
                                "name": "accounts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 253,
                                "src": "1511:8:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 272,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 271,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 259,
                                "src": "1520:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1511:11:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 269,
                            "name": "_addWhitelisted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 966,
                            "src": "1495:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 273,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1495:28:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 274,
                        "nodeType": "ExpressionStatement",
                        "src": "1495:28:1"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 265,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 262,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 259,
                      "src": "1461:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 263,
                        "name": "accounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 253,
                        "src": "1465:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 264,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1465:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1461:19:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 276,
                  "initializationExpression": {
                    "assignments": [
                      259
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 259,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 276,
                        "src": "1449:6:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 258,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1449:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 261,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 260,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1458:1:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1449:10:1"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 267,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1482:3:1",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 266,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 259,
                        "src": "1482:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 268,
                    "nodeType": "ExpressionStatement",
                    "src": "1482:3:1"
                  },
                  "nodeType": "ForStatement",
                  "src": "1444:86:1"
                }
              ]
            },
            "documentation": null,
            "id": 278,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 256,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 255,
                  "name": "onlyWhitelistAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 807,
                  "src": "1419:18:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1419:18:1"
              }
            ],
            "name": "addWhitelistedAccounts",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 254,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 253,
                  "name": "accounts",
                  "nodeType": "VariableDeclaration",
                  "scope": 278,
                  "src": "1385:25:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 251,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1385:7:1",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 252,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1385:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1384:27:1"
            },
            "returnParameters": {
              "id": 257,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1438:0:1"
            },
            "scope": 279,
            "src": "1353:181:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 280,
        "src": "510:1027:1"
      }
    ],
    "src": "0:1538:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.6+commit.b259423e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.3",
  "updatedAt": "2019-03-16T14:34:16.670Z",
  "devdoc": {
    "methods": {
      "buyTokens(address)": {
        "details": "low level token purchase ***DO NOT OVERRIDE*** This function has a non-reentrancy guard, so it shouldn't be called by another `nonReentrant` function.",
        "params": {
          "beneficiary": "Recipient of the token purchase"
        }
      },
      "cap()": {
        "return": "the cap of the crowdsale."
      },
      "capReached()": {
        "details": "Checks whether the cap has been reached.",
        "return": "Whether the cap was reached"
      },
      "closingTime()": {
        "return": "the crowdsale closing time."
      },
      "getCurrentRate()": {
        "details": "Returns the rate of tokens per wei at the present time. Note that, rate can be changed by the owner",
        "return": "The number of tokens a buyer gets per wei at a given time"
      },
      "hasClosed()": {
        "details": "Checks whether the period in which the crowdsale is open has already elapsed.",
        "return": "Whether crowdsale period has elapsed"
      },
      "initialRate()": {
        "return": "the initial rate of the crowdsale."
      },
      "isOpen()": {
        "return": "true if the crowdsale is open, false otherwise."
      },
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract."
      },
      "nextBonusRate()": {
        "return": "the next Rate of the crowdsale."
      },
      "nextBonusTimeslot()": {
        "return": "the next Timeslot of the crowdsale."
      },
      "openingTime()": {
        "return": "the crowdsale opening time."
      },
      "owner()": {
        "return": "the address of the owner."
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract."
      },
      "token()": {
        "return": "the token being sold."
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      },
      "updateBonusTimeslotRate(uint256,uint256)": {
        "details": "Update timeslot and rate for the next Timeslot",
        "params": {
          "bonusRate": "rate for the timeslot",
          "bonusTimeslot": "next time slot"
        }
      },
      "updateInitialRate(uint256)": {
        "details": "Update initial Rate",
        "params": {
          "newInitialRate": "set new initial Rate"
        }
      },
      "wallet()": {
        "return": "the address where funds are collected."
      },
      "weiRaised()": {
        "return": "the amount of wei raised."
      }
    }
  },
  "userdoc": {
    "methods": {
      "rate()": {
        "notice": "The base rate function is overridden to revert, since this crowdsale doens't use it, and all calls to it are a mistake."
      },
      "renounceOwnership()": {
        "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      }
    }
  }
}