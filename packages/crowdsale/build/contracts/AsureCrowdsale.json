{
  "contractName": "AsureCrowdsale",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addWhitelisted",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "hasClosed",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "defaultRate",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "removeWhitelisted",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "rate",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isWhitelisted",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "weiRaised",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOpen",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "closingTime",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceWhitelistAdmin",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "wallet",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "bonusRate",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addWhitelistAdmin",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "openingTime",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "bonusTime",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isWhitelistAdmin",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newBonusRate",
          "type": "uint256"
        },
        {
          "name": "newBonusTime",
          "type": "uint256"
        },
        {
          "name": "newDefaultRate",
          "type": "uint256"
        }
      ],
      "name": "updateRates",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceWhitelisted",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "beneficiary",
          "type": "address"
        }
      ],
      "name": "buyTokens",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getCurrentRate",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "bonusRate",
          "type": "uint256"
        },
        {
          "name": "bonusTime",
          "type": "uint256"
        },
        {
          "name": "defaultRate",
          "type": "uint256"
        },
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "wallet",
          "type": "address"
        },
        {
          "name": "token",
          "type": "address"
        },
        {
          "name": "openingTime",
          "type": "uint256"
        },
        {
          "name": "closingTime",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "bonusRate",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "bonusTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "defaultRate",
          "type": "uint256"
        }
      ],
      "name": "RatesUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "purchaser",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokensPurchased",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "WhitelistedAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "WhitelistedRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "WhitelistAdminAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "WhitelistAdminRemoved",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "accounts",
          "type": "address[]"
        }
      ],
      "name": "addWhitelistedAccounts",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "burn",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferToIEO",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.10+commit.5a6ea5b1\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addWhitelisted\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"hasClosed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"defaultRate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removeWhitelisted\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"accounts\",\"type\":\"address[]\"}],\"name\":\"addWhitelistedAccounts\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isWhitelisted\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"weiRaised\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOpen\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"closingTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceWhitelistAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"wallet\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"bonusRate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addWhitelistAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"openingTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"bonusTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferToIEO\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isWhitelistAdmin\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newBonusRate\",\"type\":\"uint256\"},{\"name\":\"newBonusTime\",\"type\":\"uint256\"},{\"name\":\"newDefaultRate\",\"type\":\"uint256\"}],\"name\":\"updateRates\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceWhitelisted\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"buyTokens\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getCurrentRate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"bonusRate\",\"type\":\"uint256\"},{\"name\":\"bonusTime\",\"type\":\"uint256\"},{\"name\":\"defaultRate\",\"type\":\"uint256\"},{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"wallet\",\"type\":\"address\"},{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"openingTime\",\"type\":\"uint256\"},{\"name\":\"closingTime\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"bonusRate\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"bonusTime\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"defaultRate\",\"type\":\"uint256\"}],\"name\":\"RatesUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"purchaser\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensPurchased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"WhitelistedAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"WhitelistedRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"WhitelistAdminAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"WhitelistAdminRemoved\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"bonusRate()\":{\"return\":\"the number of token units a buyer gets per wei before the bonus time.\"},\"bonusTime()\":{\"return\":\"the crowdsale bonus time in unix epoch seconds.\"},\"buyTokens(address)\":{\"details\":\"low level token purchase ***DO NOT OVERRIDE*** This function has a non-reentrancy guard, so it shouldn't be called by another `nonReentrant` function.\",\"params\":{\"beneficiary\":\"Recipient of the token purchase\"}},\"closingTime()\":{\"return\":\"the crowdsale closing time.\"},\"defaultRate()\":{\"return\":\"the number of token units a buyer gets per wei after the bonus time.\"},\"getCurrentRate()\":{\"details\":\"Returns the rate of tokens per wei at the present time. Note that, rate can be changed by the owner until the crowdsale is open.\",\"return\":\"The number of tokens a buyer gets per wei at a given time\"},\"hasClosed()\":{\"details\":\"Checks whether the period in which the crowdsale is open has already elapsed.\",\"return\":\"Whether crowdsale period has elapsed\"},\"isOpen()\":{\"return\":\"true if the crowdsale is open, false otherwise.\"},\"isOwner()\":{\"return\":\"true if `msg.sender` is the owner of the contract.\"},\"openingTime()\":{\"return\":\"the crowdsale opening time.\"},\"owner()\":{\"return\":\"the address of the owner.\"},\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract.\"},\"token()\":{\"return\":\"the token being sold.\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}},\"transferToIEO(address,uint256)\":{\"details\":\"Transfer tokens originally intended to be sold as part of this crowdsale to an IEO.\",\"params\":{\"to\":\"Token beneficiary\",\"value\":\"Amount of wei to transfer\"}},\"updateRates(uint256,uint256,uint256)\":{\"details\":\"Owner can update bonus rate, bonus time, and default rate before crowdsale opened.\",\"params\":{\"newBonusRate\":\"Number of token units a buyer gets per wei before bonus time\",\"newBonusTime\":\"The crowdsale bonus time in unix epoch seconds\",\"newDefaultRate\":\"Number of token units a buyer gets per wei after the bonus time\"}},\"wallet()\":{\"return\":\"the address where funds are collected.\"},\"weiRaised()\":{\"return\":\"the amount of wei raised.\"}}},\"userdoc\":{\"methods\":{\"rate()\":{\"notice\":\"The base rate function is overridden to revert, since this crowdsale doesn't use it, and all calls to it are a mistake.\"},\"renounceOwnership()\":{\"notice\":\"Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore.\"}}}},\"settings\":{\"compilationTarget\":{\"/home/mischi/p/asurenetwork/crowdsale/packages/crowdsale/contracts/AsureCrowdsale.sol\":\"AsureCrowdsale\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/mischi/p/asurenetwork/crowdsale/packages/crowdsale/contracts/AsureBonusesCrowdsale.sol\":{\"keccak256\":\"0x511cd8a6044c6fbc7cfe0d49266de9cd8c9fccf69f460c4d55149bfa68344e7e\",\"urls\":[\"bzzr://5bd57838dd937a58464bca782b05837e0803dc0107e10f62a60014f98cdf20f7\",\"dweb:/ipfs/QmUZmgNM35GUq1dzYHq2UT2xTh78YmwMNgSdkZekosoCqE\"]},\"/home/mischi/p/asurenetwork/crowdsale/packages/crowdsale/contracts/AsureCrowdsale.sol\":{\"keccak256\":\"0xa27255d0c3dae7193911b5c6c2e241da30db6faab449397b4f1352ddd81df028\",\"urls\":[\"bzzr://1c07f9f3c0570d267759ef472cd725a7f6a804ce869af11e7d94e14e1ae57e94\",\"dweb:/ipfs/QmeCXgXrNDLAAZvKTqY2s12YE4d5P3MqmfGjDBkEF1F8yX\"]},\"openzeppelin-solidity/contracts/access/Roles.sol\":{\"keccak256\":\"0x659ba0f9a3392cd50a8a5fafaf5dfd8c6a0878f6a4613bceff4e90dceddcd865\",\"urls\":[\"bzzr://f704341d520fbc98716541f1b3f67737f0ee6e94adf072a66acb2bd25d593c2b\",\"dweb:/ipfs/QmcmyB4cNazZ1sw963Afaijt67M9bDgwmGXCgQajGTD4tm\"]},\"openzeppelin-solidity/contracts/access/roles/WhitelistAdminRole.sol\":{\"keccak256\":\"0x296248d0db94ffd742e1918944172d8c6f0eda2395330f7e33c058884620efdc\",\"urls\":[\"bzzr://45789874754eddf27772eba7db7c32d825d35f2207a151a8147538fcd587370a\",\"dweb:/ipfs/QmcmHNuJBMbmFZSLfcX8g3rwUsntpPkJgihuGFrjBuapQN\"]},\"openzeppelin-solidity/contracts/access/roles/WhitelistedRole.sol\":{\"keccak256\":\"0xfd5715327c3f75b7056fdf2e9dbb9b22559549af0381cc85859c9dcd8f101000\",\"urls\":[\"bzzr://482e11fb5259da689a571d828c509b9b3e00265c5a07337c5c4c3db444690ca1\",\"dweb:/ipfs/QmXLXQtAtYAiKihMngJPN7TFHJJDhiBL9AHuoUuVdtrgNF\"]},\"openzeppelin-solidity/contracts/crowdsale/Crowdsale.sol\":{\"keccak256\":\"0x8347d09dc704fcd85e048f30bb17d8ec8c0f2bcea7287651fd9f8d1a3d3be24f\",\"urls\":[\"bzzr://0dc01d15c736b7e7a1a01d508b958fa18d30db5690af6dffd6f367a6f7408ad4\",\"dweb:/ipfs/QmUBG9RDuRL4Bg7Uz4CFxa1wjMsR9fJaFjAiGeJntat174\"]},\"openzeppelin-solidity/contracts/crowdsale/validation/CappedCrowdsale.sol\":{\"keccak256\":\"0x9afa9516c50f544efe548f3ce4e74e0984cf20991bb98efe57104f659d3fde8b\",\"urls\":[\"bzzr://80ec9b3dfecf25ba1bd350abbbb95127069caa23743d19a6e64295279e85f587\",\"dweb:/ipfs/QmevLTu6u6bTN3MFa8Wp6kCdFJ8GKr7ErCEB4Kmd8FaDjz\"]},\"openzeppelin-solidity/contracts/crowdsale/validation/TimedCrowdsale.sol\":{\"keccak256\":\"0x6413acc30449378ef618490709536506415a92727012f619c65a8ad0bbc4ab61\",\"urls\":[\"bzzr://890222baa3cf84d93ecc24f59f30a528b29b5134d0885f4dd5383823fa2db8c2\",\"dweb:/ipfs/Qme3HzaouQuDZKKA6dedfL2EmdyKxZ3VmvriKFzwxPWocT\"]},\"openzeppelin-solidity/contracts/crowdsale/validation/WhitelistCrowdsale.sol\":{\"keccak256\":\"0x9353bb9d6dc0ecfe57d0ae3584504cc6b2dc277b18ef4e9d70e1f524d4b62ff1\",\"urls\":[\"bzzr://05a5001c670f395d1d214a5f2ef75ca4f9cde6737d1174e0976a66f9839b260e\",\"dweb:/ipfs/Qmc3M69nCg7jcnjDhwkET37W5qdtrYbT5FHoMwFMbWjsZD\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x965012d27b4262d7a41f5028cbb30c51ebd9ecd4be8fb30380aaa7a3c64fbc8b\",\"urls\":[\"bzzr://41ca38f6b0fa4b77b0feec43e422cfbec48b7eb38a41edf0b85c77e8d9a296b1\",\"dweb:/ipfs/QmbMdvSXcqGKxeeYvzF3VrWpoHQyVzMXBhzhAokF2Gdymv\"]},\"openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0x980de387a1a020a498f53d00f89fecebb12c949a17e8f160093c0303ede2b786\",\"urls\":[\"bzzr://08894efa2a557982070beda6a81a032407e70532d24bdafe80d39660c74904d9\",\"dweb:/ipfs/QmeN3ZiYGSjCnQFeYaJNgoXjF9eDue1g3e9pqManRkeBtV\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xba431353cb4fe70777ac026231eb5468e41aa1e81240a2b8136917acc5fff4dc\",\"urls\":[\"bzzr://80cd02a56e6e33504318124d0d645c82e615cc8a4b5829cc9d82d17635c644c8\",\"dweb:/ipfs/QmT8y2VVjGaFdGphpcXrgvdPi2EgF9LuCDgJiJ89LvpFRV\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20Burnable.sol\":{\"keccak256\":\"0xa3e68fd7f987c8fbdaf4867d428a69a15f3cf2f69709a5b0a0fbef750b0e6fbc\",\"urls\":[\"bzzr://f4ebb7c5b9e429b98b07e2caca6156c13c3724e9b1191cca8423ab8427bc6265\",\"dweb:/ipfs/QmSQBYPeY9tbR3ciGRNQqvcWKnNiuxtVMq2MsPWpLwuGGm\"]},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x079c4e23ee448f529e43bfa3c4e8fb4be52cd0318ee923a276835bedf45b93d8\",\"urls\":[\"bzzr://48248e86f64407a95f241d6c5c8cfea6b4d4ebf4ebb467e5c98c8af3868fafe4\",\"dweb:/ipfs/QmdxqtgEFZjHCoiYyz6pUAQ5iBm7As25jcyEbZoTaAgyDa\"]},\"openzeppelin-solidity/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0x05fcee7431cd35cd312e14e7f316a44ca3ccc5fb3b859aefc15c1a5db94add7e\",\"urls\":[\"bzzr://5ba67fb83aa7806883a335d53a27dcf1f53b75fa38dedd57893cc84633aa4d4c\",\"dweb:/ipfs/QmZBWbRwAD7ChE8Dsqo4rm7ubtGtDL1bjkAVVq6dVPmVwk\"]},\"openzeppelin-solidity/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x58e8ca389c46941a0bfc26b91025d3427864bd9070a7762f90d29677cd3f3dd8\",\"urls\":[\"bzzr://5c079549429384de9624a5686a33649e7e637bf0b715773182e77dffc9ea4c38\",\"dweb:/ipfs/Qmd4uMLdQm1XBTgsYSttVCnMwPRMT47WvqABENyXFyVMYm\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x6080604052600436106101b75760003560e01c8063715018a6116100ec578063bb5f747b1161008a578063ec8ac4d811610064578063ec8ac4d8146107ba578063f2fde38b146107fe578063f7fb07b01461084f578063fc0c546a1461087a576101b7565b8063bb5f747b146106eb578063c0f3622c14610754578063d6cd9473146107a3576101b7565b80638f32d59b116100c65780638f32d59b1461060b578063b7a8807c1461063a578063b82a0ce814610665578063b8d9141614610690576101b7565b8063715018a61461054c5780637362d9c8146105635780638da5cb5b146105b4576101b7565b80634042b66f116101595780634b6753bc116101335780634b6753bc146104885780634c5a628c146104b3578063521eb273146104ca5780635af123f414610521576101b7565b80634042b66f1461041757806344df8e701461044257806347535d7b14610459576101b7565b8063291d954911610195578063291d95491461026d5780632a4bc321146102be5780632c4e722e146103835780633af32abf146103ae576101b7565b806310154bad146101c25780631515bc2b146102135780632616501d14610242575b6101c0336108d1565b005b3480156101ce57600080fd5b50610211600480360360208110156101e557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506109c7565b005b34801561021f57600080fd5b506102286109e5565b604051808215151515815260200191505060405180910390f35b34801561024e57600080fd5b506102576109f1565b6040518082815260200191505060405180910390f35b34801561027957600080fd5b506102bc6004803603602081101561029057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506109fb565b005b3480156102ca57600080fd5b50610381600480360360208110156102e157600080fd5b81019080803590602001906401000000008111156102fe57600080fd5b82018360208201111561031057600080fd5b8035906020019184602083028401116401000000008311171561033257600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050509192919290505050610a19565b005b34801561038f57600080fd5b50610398610a67565b6040518082815260200191505060405180910390f35b3480156103ba57600080fd5b506103fd600480360360208110156103d157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a6e565b604051808215151515815260200191505060405180910390f35b34801561042357600080fd5b5061042c610a8b565b6040518082815260200191505060405180910390f35b34801561044e57600080fd5b50610457610a95565b005b34801561046557600080fd5b5061046e610bd7565b604051808215151515815260200191505060405180910390f35b34801561049457600080fd5b5061049d610bf2565b6040518082815260200191505060405180910390f35b3480156104bf57600080fd5b506104c8610bfc565b005b3480156104d657600080fd5b506104df610c07565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561052d57600080fd5b50610536610c31565b6040518082815260200191505060405180910390f35b34801561055857600080fd5b50610561610c3b565b005b34801561056f57600080fd5b506105b26004803603602081101561058657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d0d565b005b3480156105c057600080fd5b506105c9610d2b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561061757600080fd5b50610620610d55565b604051808215151515815260200191505060405180910390f35b34801561064657600080fd5b5061064f610dad565b6040518082815260200191505060405180910390f35b34801561067157600080fd5b5061067a610db7565b6040518082815260200191505060405180910390f35b34801561069c57600080fd5b506106e9600480360360408110156106b357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610dc1565b005b3480156106f757600080fd5b5061073a6004803603602081101561070e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610e1a565b604051808215151515815260200191505060405180910390f35b34801561076057600080fd5b506107a16004803603606081101561077757600080fd5b81019080803590602001909291908035906020019092919080359060200190929190505050610e37565b005b3480156107af57600080fd5b506107b8610f12565b005b6107fc600480360360208110156107d057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506108d1565b005b34801561080a57600080fd5b5061084d6004803603602081101561082157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610f1d565b005b34801561085b57600080fd5b50610864610f3a565b6040518082815260200191505060405180910390f35b34801561088657600080fd5b5061088f610f6d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60016002600082825401925050819055506000600254905060003490506108f88382610f97565b600061090382610fba565b905061091a82600654610fe290919063ffffffff16565b60068190555061092a8482611001565b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f6faf93231a456e552dbc9961f58d9713ee4f2e69d15f1975b050ef0911053a7b8484604051808381526020018281526020019250505060405180910390a36109a1848361100f565b6109a9611013565b6109b3848361107e565b505060025481146109c357600080fd5b5050565b6109d033610e1a565b6109d957600080fd5b6109e281611082565b50565b60006008544211905090565b6000600c54905090565b610a0433610e1a565b610a0d57600080fd5b610a16816110dc565b50565b610a2233610e1a565b610a2b57600080fd5b60008090505b8151811015610a6357610a56828281518110610a4957fe5b6020026020010151611082565b8080600101915050610a31565b5050565b6000806000fd5b6000610a8482600161113690919063ffffffff16565b9050919050565b6000600654905090565b610a9d6109e5565b610aa657600080fd5b6000610ab0610f6d565b90508073ffffffffffffffffffffffffffffffffffffffff166342966c688273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015610b4b57600080fd5b505afa158015610b5f573d6000803e3d6000fd5b505050506040513d6020811015610b7557600080fd5b81019080805190602001909291905050506040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b158015610bbc57600080fd5b505af1158015610bd0573d6000803e3d6000fd5b5050505050565b60006007544210158015610bed57506008544211155b905090565b6000600854905090565b610c05336111c8565b565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600a54905090565b610c43610d55565b610c4c57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b610d1633610e1a565b610d1f57600080fd5b610d2881611222565b50565b6000600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6000600754905090565b6000600b54905090565b610dc9610d55565b610dd257600080fd5b610dda6109e5565b15610de457600080fd5b610e168282610df1610f6d565b73ffffffffffffffffffffffffffffffffffffffff1661127c9092919063ffffffff16565b5050565b6000610e3082600061113690919063ffffffff16565b9050919050565b610e3f610d55565b610e4857600080fd5b610e50610bd7565b158015610e625750610e606109e5565b155b610e6b57600080fd5b60008311610e7857600080fd5b610e80610dad565b8210158015610e955750610e92610bf2565b82105b610e9e57600080fd5b60008111610eab57600080fd5b82600a8190555081600b8190555080600c819055507f023010bc68e7f4c0be9887f513c570c7a0f5f511b9716abccd42bf3b8943532b600a54600b54600c5460405180848152602001838152602001828152602001935050505060405180910390a1505050565b610f1b336110dc565b565b610f25610d55565b610f2e57600080fd5b610f378161134c565b50565b6000610f44610bd7565b610f515760009050610f6a565b600b544211610f6457600a549050610f6a565b600c5490505b90565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6706f05b59d3b20000811015610fac57600080fd5b610fb68282611446565b5050565b600080610fc5610f3a565b9050610fda838261146690919063ffffffff16565b915050919050565b600080828401905083811015610ff757600080fd5b8091505092915050565b61100b82826114a0565b5050565b5050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f1935050505015801561107b573d6000803e3d6000fd5b50565b5050565b6110968160016114f190919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fee1504a83b6d4a361f4c1dc78ab59bfa30d6a3b6612c403e86bb01ef2984295f60405160405180910390a250565b6110f081600161159d90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f270d9b30cf5b0793bbfd54c9d5b94aeb49462b8148399000265144a8722da6b660405160405180910390a250565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561117157600080fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6111dc81600061159d90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f0a8eb35e5ca14b3d6f28e4abf2f128dbab231a58b56e89beb5d636115001e16560405160405180910390a250565b6112368160006114f190919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f22380c05984257a1cb900161c713dd71d39e74820f1aea43bd3f1bdd2096129960405160405180910390a250565b8273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561130357600080fd5b505af1158015611317573d6000803e3d6000fd5b505050506040513d602081101561132d57600080fd5b810190808051906020019092919050505061134757600080fd5b505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561138657600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b61144f82610a6e565b61145857600080fd5b6114628282611648565b5050565b600080831415611479576000905061149a565b600082840290508284828161148a57fe5b041461149557600080fd5b809150505b92915050565b6114ed8282600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661127c9092919063ffffffff16565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561152b57600080fd5b6115358282611136565b1561153f57600080fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156115d757600080fd5b6115e18282611136565b6115ea57600080fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b611650610bd7565b61165957600080fd5b6116638282611667565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156116a157600080fd5b60008114156116af57600080fd5b505056fea265627a7a72305820e145afcd98bdc57d77227fd4188facc5bb6fe87280b4fb59a566178262e85fbf64736f6c634300050a0032",
  "sourceMap": "567:1743:2:-;;;781:431;8:9:-1;5:2;;;30:1;27;20:12;5:2;781:431:2;;;;;;;;;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;781:431:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1089:9;1100;1111:11;1124:5;1039:11;1052;1004:1;1007:6;1015:5;433:30:11;452:10;433:18;;;:30;;:::i;:::-;576:1:27;560:13;:17;;;;2380:1:13;2373:4;:8;2365:17;;;;;;2418:1;2400:20;;:6;:20;;;;2392:29;;;;;;2465:1;2439:28;;2447:5;2439:28;;;;2431:37;;;;;;2487:4;2479:5;:12;;;;2511:6;2501:7;;:16;;;;;;;;;;;;;;;;;;2536:5;2527:6;;:14;;;;;;;;;;;;;;;;;;2283:265;;;806:15:15;791:11;:30;;783:39;;;;;;854:11;840;:25;832:34;;;;;;892:11;877:12;:26;;;;928:11;913:12;:26;;;;657:289;;524:10:19;515:6;;:19;;;;;;;;;;;;;;;;;;582:6;;;;;;;;;;;549:40;;578:1;549:40;;;;;;;;;;;;1490:46:0;1502:9;1513;1524:11;1490;;;:46;;:::i;:::-;1542:24;1560:5;1542:17;;;:24;;:::i;:::-;1388:183;;;;1144:23:2;1161:5;1144:16;;;:23;;:::i;:::-;1139:69;;1177:24;1195:5;1177:17;;;:24;;:::i;:::-;1139:69;781:431;;;;;;;;567:1743;;923:143:11;987:29;1008:7;987:16;:20;;;;;;:29;;;;:::i;:::-;1051:7;1031:28;;;;;;;;;;;;923:143;:::o;2655:451:0:-;863:9:19;:7;;;:9;;:::i;:::-;855:18;;;;;;2776:8:0;:6;;;:8;;:::i;:::-;2775:9;:25;;;;;2789:11;:9;;;:11;;:::i;:::-;2788:12;2775:25;2767:34;;;;;;2830:1;2815:12;:16;2807:25;;;;;;2862:13;:11;;;:13;;:::i;:::-;2846:12;:29;;:61;;;;;2894:13;:11;;;:13;;:::i;:::-;2879:12;:28;2846:61;2838:70;;;;;;2939:1;2922:14;:18;2914:27;;;;;;2961:12;2948:10;:25;;;;2992:12;2979:10;:25;;;;3025:14;3010:12;:29;;;;3051:50;3064:10;;3076;;3088:12;;3051:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2655:451;;;:::o;1655:107:19:-;863:9;:7;;;:9;;:::i;:::-;855:18;;;;;;1727:28;1746:8;1727:18;;;:28;;:::i;:::-;1655:107;:::o;577:123:11:-;641:4;664:29;685:7;664:16;:20;;;;;;:29;;;;:::i;:::-;657:36;;577:123;;;:::o;706:114::-;524:28;541:10;524:16;;;:28;;:::i;:::-;516:37;;;;;;786:27;805:7;786:18;;;:27;;:::i;:::-;706:114;:::o;259:181:9:-;354:1;335:21;;:7;:21;;;;327:30;;;;;;376:18;380:4;386:7;376:3;;;:18;;:::i;:::-;375:19;367:28;;;;;;429:4;406;:11;;:20;418:7;406:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;259:181;;:::o;979:90:19:-;1019:4;1056:6;;;;;;;;;;;1042:20;;:10;:20;;;1035:27;;979:90;:::o;1339:189:15:-;1378:4;1474:12;;1455:15;:31;;:66;;;;;1509:12;;1490:15;:31;;1455:66;1448:73;;1339:189;:::o;1692:156::-;1734:4;1829:12;;1811:15;:30;1804:37;;1692:156;:::o;1011:89::-;1055:7;1081:12;;1074:19;;1011:89;:::o;1165:::-;1209:7;1235:12;;1228:19;;1165:89;:::o;1906:183:19:-;1999:1;1979:22;;:8;:22;;;;1971:31;;;;;;2046:8;2017:38;;2038:6;;;;;;;;;;;2017:38;;;;;;;;;;;;2074:8;2065:6;;:17;;;;;;;;;;;;;;;;;;1906:183;:::o;786:162:9:-;858:4;901:1;882:21;;:7;:21;;;;874:30;;;;;;921:4;:11;;:20;933:7;921:20;;;;;;;;;;;;;;;;;;;;;;;;;914:27;;786:162;;;;:::o;567:1743:2:-;;;;;;;",
  "deployedSourceMap": "567:1743:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2875:21:13;2885:10;2875:9;:21::i;:::-;567:1743:2;848:108:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;848:108:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;848:108:12;;;;;;;;;;;;;;;;;;;:::i;:::-;;1692:156:15;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1692:156:15;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2214:83:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2214:83:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;962:114:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;962:114:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;962:114:12;;;;;;;;;;;;;;;;;;;:::i;:::-;;1216:181:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1216:181:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1216:181:2;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1216:181:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1216:181:2;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;1216:181:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1216:181:2;;;;;;;;;;;;;;;:::i;:::-;;1717:65:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1717:65:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;725:117:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;725:117:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;725:117:12;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3424:85:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3424:85:13;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1401:185:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1401:185:2;;;:::i;:::-;;1339:189:15;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1339:189:15;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1165:89;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1165:89:15;;;:::i;:::-;;;;;;;;;;;;;;;;;;;826:91:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;826:91:11;;;:::i;:::-;;3114:87:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3114:87:13;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1881:79:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1881:79:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1347:137:19;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1347:137:19;;;:::i;:::-;;706:114:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;706:114:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;706:114:11;;;;;;;;;;;;;;;;;;;:::i;:::-;;659:77:19;;8:9:-1;5:2;;;30:1;27;20:12;5:2;659:77:19;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;979:90;;8:9:-1;5:2;;;30:1;27;20:12;5:2;979:90:19;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1011:89:15;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1011:89:15;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2037:79:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2037:79:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1777:136:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1777:136:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1777:136:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;577:123:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;577:123:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;577:123:11;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2655:451:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2655:451:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2655:451:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1082:85:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1082:85:12;;;:::i;:::-;;3766:603:13;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3766:603:13;;;;;;;;;;;;;;;;;;;:::i;:::-;;1655:107:19;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1655:107:19;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1655:107:19;;;;;;;;;;;;;;;;;;;:::i;:::-;;3337:203:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3337:203:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2962:76:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2962:76:13;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3766:603;1010:1:27;993:13;;:18;;;;;;;;;;;1021:20;1044:13;;1021:36;;3844:17:13;3864:9;3844:29;;3883:44;3904:11;3917:9;3883:20;:44::i;:::-;3986:14;4003:26;4019:9;4003:15;:26::i;:::-;3986:43;;4077:25;4092:9;4077:10;;:14;;:25;;;;:::i;:::-;4064:10;:38;;;;4113:37;4130:11;4143:6;4113:16;:37::i;:::-;4193:11;4165:59;;4181:10;4165:59;;;4206:9;4217:6;4165:59;;;;;;;;;;;;;;;;;;;;;;;;4235:46;4258:11;4271:9;4235:22;:46::i;:::-;4292:15;:13;:15::i;:::-;4317:45;4339:11;4352:9;4317:21;:45::i;:::-;1067:1:27;;1102:13;;1086:12;:29;1078:38;;;;;;3766:603:13;;:::o;848:108:12:-;524:28:11;541:10;524:16;:28::i;:::-;516:37;;;;;;925:24:12;941:7;925:15;:24::i;:::-;848:108;:::o;1692:156:15:-;1734:4;1829:12;;1811:15;:30;1804:37;;1692:156;:::o;2214:83:0:-;2258:7;2280:12;;2273:19;;2214:83;:::o;962:114:12:-;524:28:11;541:10;524:16;:28::i;:::-;516:37;;;;;;1042:27:12;1061:7;1042:18;:27::i;:::-;962:114;:::o;1216:181:2:-;524:28:11;541:10;524:16;:28::i;:::-;516:37;;;;;;1312:6:2;1321:1;1312:10;;1307:86;1328:8;:15;1324:1;:19;1307:86;;;1358:28;1374:8;1383:1;1374:11;;;;;;;;;;;;;;1358:15;:28::i;:::-;1345:3;;;;;;;1307:86;;;;1216:181;:::o;1717:65:0:-;1754:7;1769:8;;;725:117:12;786:4;809:26;827:7;809:13;:17;;:26;;;;:::i;:::-;802:33;;725:117;;;:::o;3424:85:13:-;3466:7;3492:10;;3485:17;;3424:85;:::o;1401:185:2:-;1438:11;:9;:11::i;:::-;1430:20;;;;;;1456:27;1508:7;:5;:7::i;:::-;1456:61;;1523:13;:18;;;1542:13;:23;;;1574:4;1542:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1542:38:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1542:38:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1542:38:2;;;;;;;;;;;;;;;;1523:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1523:58:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1523:58:2;;;;1401:185;:::o;1339:189:15:-;1378:4;1474:12;;1455:15;:31;;:66;;;;;1509:12;;1490:15;:31;;1455:66;1448:73;;1339:189;:::o;1165:89::-;1209:7;1235:12;;1228:19;;1165:89;:::o;826:91:11:-;877:33;899:10;877:21;:33::i;:::-;826:91::o;3114:87:13:-;3153:15;3187:7;;;;;;;;;;;3180:14;;3114:87;:::o;1881:79:0:-;1923:7;1945:10;;1938:17;;1881:79;:::o;1347:137:19:-;863:9;:7;:9::i;:::-;855:18;;;;;;1445:1;1408:40;;1429:6;;;;;;;;;;;1408:40;;;;;;;;;;;;1475:1;1458:6;;:19;;;;;;;;;;;;;;;;;;1347:137::o;706:114:11:-;524:28;541:10;524:16;:28::i;:::-;516:37;;;;;;786:27;805:7;786:18;:27::i;:::-;706:114;:::o;659:77:19:-;697:7;723:6;;;;;;;;;;;716:13;;659:77;:::o;979:90::-;1019:4;1056:6;;;;;;;;;;;1042:20;;:10;:20;;;1035:27;;979:90;:::o;1011:89:15:-;1055:7;1081:12;;1074:19;;1011:89;:::o;2037:79:0:-;2079:7;2101:10;;2094:17;;2037:79;:::o;1777:136:2:-;863:9:19;:7;:9::i;:::-;855:18;;;;;;1859:11:2;:9;:11::i;:::-;1858:12;1850:21;;;;;;1877:31;1898:2;1902:5;1877:7;:5;:7::i;:::-;:20;;;;:31;;;;;:::i;:::-;1777:136;;:::o;577:123:11:-;641:4;664:29;685:7;664:16;:20;;:29;;;;:::i;:::-;657:36;;577:123;;;:::o;2655:451:0:-;863:9:19;:7;:9::i;:::-;855:18;;;;;;2776:8:0;:6;:8::i;:::-;2775:9;:25;;;;;2789:11;:9;:11::i;:::-;2788:12;2775:25;2767:34;;;;;;2830:1;2815:12;:16;2807:25;;;;;;2862:13;:11;:13::i;:::-;2846:12;:29;;:61;;;;;2894:13;:11;:13::i;:::-;2879:12;:28;2846:61;2838:70;;;;;;2939:1;2922:14;:18;2914:27;;;;;;2961:12;2948:10;:25;;;;2992:12;2979:10;:25;;;;3025:14;3010:12;:29;;;;3051:50;3064:10;;3076;;3088:12;;3051:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2655:451;;;:::o;1082:85:12:-;1130:30;1149:10;1130:18;:30::i;:::-;1082:85::o;1655:107:19:-;863:9;:7;:9::i;:::-;855:18;;;;;;1727:28;1746:8;1727:18;:28::i;:::-;1655:107;:::o;3337:203:0:-;3384:7;3404:8;:6;:8::i;:::-;3399:38;;3429:1;3422:8;;;;3399:38;3466:10;;3447:15;:29;3443:67;;3493:10;;3486:17;;;;3443:67;3523:12;;3516:19;;3337:203;;:::o;2962:76:13:-;3000:6;3025;;;;;;;;;;;3018:13;;2962:76;:::o;2103:205:2:-;752:12;2203:10;:41;;2195:50;;;;;;2251:52;2278:12;2292:10;2251:26;:52::i;:::-;2103:205;;:::o;3766:164:0:-;3833:7;3848:19;3870:16;:14;:16::i;:::-;3848:38;;3899:26;3915:9;3899:11;:15;;:26;;;;:::i;:::-;3892:33;;;3766:164;;;:::o;1431:145:18:-;1489:7;1508:9;1524:1;1520;:5;1508:17;;1548:1;1543;:6;;1535:15;;;;;;1568:1;1561:8;;;1431:145;;;;:::o;6206:134:13:-;6293:40;6308:11;6321;6293:14;:40::i;:::-;6206:134;;:::o;6610:145::-;;;:::o;7211:78::-;7255:7;;;;;;;;;;;:16;;:27;7272:9;7255:27;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7255:27:13;7211:78::o;5374:149::-;;;:::o;1173:134:12:-;1234:26;1252:7;1234:13;:17;;:26;;;;:::i;:::-;1292:7;1275:25;;;;;;;;;;;;1173:134;:::o;1313:142::-;1377:29;1398:7;1377:13;:20;;:29;;;;:::i;:::-;1440:7;1421:27;;;;;;;;;;;;1313:142;:::o;786:162:9:-;858:4;901:1;882:21;;:7;:21;;;;874:30;;;;;;921:4;:11;;:20;933:7;921:20;;;;;;;;;;;;;;;;;;;;;;;;;914:27;;786:162;;;;:::o;1072:151:11:-;1139:32;1163:7;1139:16;:23;;:32;;;;:::i;:::-;1208:7;1186:30;;;;;;;;;;;;1072:151;:::o;923:143::-;987:29;1008:7;987:16;:20;;:29;;;;:::i;:::-;1051:7;1031:28;;;;;;;;;;;;923:143;:::o;409:123:26:-;499:5;:14;;;514:2;518:5;499:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;499:25:26;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;499:25:26;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;499:25:26;;;;;;;;;;;;;;;;491:34;;;;;;409:123;;;:::o;1906:183:19:-;1999:1;1979:22;;:8;:22;;;;1971:31;;;;;;2046:8;2017:38;;2038:6;;;;;;;;;;;2017:38;;;;;;;;;;;;2074:8;2065:6;;:17;;;;;;;;;;;;;;;;;;1906:183;:::o;535:201:16:-;639:27;653:12;639:13;:27::i;:::-;631:36;;;;;;677:52;704:12;718:10;677:26;:52::i;:::-;535:201;;:::o;229:421:18:-;287:7;532:1;527;:6;523:45;;;556:1;549:8;;;;523:45;578:9;594:1;590;:5;578:17;;622:1;617;613;:5;;;;;;:10;605:19;;;;;;642:1;635:8;;;229:421;;;;;:::o;5803:137:13:-;5888:45;5908:11;5921;5888:6;;;;;;;;;;;:19;;;;:45;;;;;:::i;:::-;5803:137;;:::o;259:181:9:-;354:1;335:21;;:7;:21;;;;327:30;;;;;;376:18;380:4;386:7;376:3;:18::i;:::-;375:19;367:28;;;;;;429:4;406;:11;;:20;418:7;406:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;259:181;;:::o;514:184::-;612:1;593:21;;:7;:21;;;;585:30;;;;;;633:18;637:4;643:7;633:3;:18::i;:::-;625:27;;;;;;686:5;663:4;:11;;:20;675:7;663:20;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;514:184;;:::o;2040:165:15:-;442:8;:6;:8::i;:::-;434:17;;;;;;2148:50;2175:11;2188:9;2148:26;:50::i;:::-;2040:165;;:::o;4911:168:13:-;5036:1;5013:25;;:11;:25;;;;5005:34;;;;;;5070:1;5057:9;:14;;5049:23;;;;;;4911:168;;:::o",
  "source": "pragma solidity ^0.5.0;\n\nimport \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\";\nimport \"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\";\nimport \"openzeppelin-solidity/contracts/token/ERC20/ERC20Burnable.sol\";\nimport \"openzeppelin-solidity/contracts/token/ERC20/SafeERC20.sol\";\nimport \"openzeppelin-solidity/contracts/crowdsale/validation/TimedCrowdsale.sol\";\nimport \"openzeppelin-solidity/contracts/crowdsale/validation/WhitelistCrowdsale.sol\";\nimport \"openzeppelin-solidity/contracts/crowdsale/Crowdsale.sol\";\nimport \"./AsureBonusesCrowdsale.sol\";\n\ncontract AsureCrowdsale is Crowdsale, TimedCrowdsale, WhitelistCrowdsale, AsureBonusesCrowdsale {\n  using SafeERC20 for ERC20;\n\n  uint256 private constant PURCHASE_MINIMUM_AMOUNT_WEI = 5 * 10 ** 17;  // 0.5 ETH\n\n  constructor(\n    uint256 bonusRate,\n    uint256 bonusTime,\n    uint256 defaultRate,\n    address owner,\n    address payable wallet,\n    IERC20 token,\n    uint256 openingTime,\n    uint256 closingTime\n  )\n  public\n  Crowdsale(1, wallet, token)\n  TimedCrowdsale(openingTime, closingTime)\n  AsureBonusesCrowdsale(bonusRate, bonusTime, defaultRate, owner)\n  {\n    if (!isWhitelistAdmin(owner)) {\n      addWhitelistAdmin(owner);\n    }\n  }\n\n  function addWhitelistedAccounts(address[] memory accounts) public onlyWhitelistAdmin {\n    for (uint i = 0; i < accounts.length; i++) {\n      _addWhitelisted(accounts[i]);\n    }\n  }\n\n  function burn() public {\n    require(hasClosed());\n    ERC20Burnable burnableToken = ERC20Burnable(address(token()));\n    burnableToken.burn(burnableToken.balanceOf(address(this)));\n  }\n\n  /**\n    * @dev Transfer tokens originally intended to be sold as part of this crowdsale to an IEO.\n    * @param to Token beneficiary\n    * @param value Amount of wei to transfer\n    */\n  function transferToIEO(address to, uint256 value) onlyOwner public {\n    require(!hasClosed());\n    token().safeTransfer(to, value);\n  }\n\n  /**\n    * @dev Extend parent behavior requiring a minimum contribution of 0.5 ETH.\n    * @param _beneficiary Token beneficiary\n    * @param _weiAmount Amount of wei contributed\n    */\n  function _preValidatePurchase(address _beneficiary, uint256 _weiAmount) internal view {\n    require(_weiAmount >= PURCHASE_MINIMUM_AMOUNT_WEI);\n    super._preValidatePurchase(_beneficiary, _weiAmount);\n  }\n}\n",
  "sourcePath": "/home/mischi/p/asurenetwork/crowdsale/packages/crowdsale/contracts/AsureCrowdsale.sol",
  "ast": {
    "absolutePath": "/home/mischi/p/asurenetwork/crowdsale/packages/crowdsale/contracts/AsureCrowdsale.sol",
    "exportedSymbols": {
      "AsureCrowdsale": [
        487
      ]
    },
    "id": 488,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 314,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "id": 315,
        "nodeType": "ImportDirective",
        "scope": 488,
        "sourceUnit": 3313,
        "src": "25:63:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "id": 316,
        "nodeType": "ImportDirective",
        "scope": 488,
        "sourceUnit": 3556,
        "src": "89:64:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20Burnable.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20Burnable.sol",
        "id": 317,
        "nodeType": "ImportDirective",
        "scope": 488,
        "sourceUnit": 3344,
        "src": "154:71:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/SafeERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/SafeERC20.sol",
        "id": 318,
        "nodeType": "ImportDirective",
        "scope": 488,
        "sourceUnit": 3701,
        "src": "226:67:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/crowdsale/validation/TimedCrowdsale.sol",
        "file": "openzeppelin-solidity/contracts/crowdsale/validation/TimedCrowdsale.sol",
        "id": 319,
        "nodeType": "ImportDirective",
        "scope": 488,
        "sourceUnit": 2244,
        "src": "294:81:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/crowdsale/validation/WhitelistCrowdsale.sol",
        "file": "openzeppelin-solidity/contracts/crowdsale/validation/WhitelistCrowdsale.sol",
        "id": 320,
        "nodeType": "ImportDirective",
        "scope": 488,
        "sourceUnit": 2274,
        "src": "376:85:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/crowdsale/Crowdsale.sol",
        "file": "openzeppelin-solidity/contracts/crowdsale/Crowdsale.sol",
        "id": 321,
        "nodeType": "ImportDirective",
        "scope": 488,
        "sourceUnit": 2060,
        "src": "462:65:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/mischi/p/asurenetwork/crowdsale/packages/crowdsale/contracts/AsureBonusesCrowdsale.sol",
        "file": "./AsureBonusesCrowdsale.sol",
        "id": 322,
        "nodeType": "ImportDirective",
        "scope": 488,
        "sourceUnit": 192,
        "src": "528:37:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 323,
              "name": "Crowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2059,
              "src": "594:9:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Crowdsale_$2059",
                "typeString": "contract Crowdsale"
              }
            },
            "id": 324,
            "nodeType": "InheritanceSpecifier",
            "src": "594:9:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 325,
              "name": "TimedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2243,
              "src": "605:14:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TimedCrowdsale_$2243",
                "typeString": "contract TimedCrowdsale"
              }
            },
            "id": 326,
            "nodeType": "InheritanceSpecifier",
            "src": "605:14:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 327,
              "name": "WhitelistCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2273,
              "src": "621:18:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_WhitelistCrowdsale_$2273",
                "typeString": "contract WhitelistCrowdsale"
              }
            },
            "id": 328,
            "nodeType": "InheritanceSpecifier",
            "src": "621:18:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 329,
              "name": "AsureBonusesCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 191,
              "src": "641:21:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AsureBonusesCrowdsale_$191",
                "typeString": "contract AsureBonusesCrowdsale"
              }
            },
            "id": 330,
            "nodeType": "InheritanceSpecifier",
            "src": "641:21:2"
          }
        ],
        "contractDependencies": [
          191,
          1683,
          1792,
          2059,
          2243,
          2273,
          2880,
          3731
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 487,
        "linearizedBaseContracts": [
          487,
          191,
          2880,
          2273,
          2243,
          2059,
          3731,
          1792,
          1683
        ],
        "name": "AsureCrowdsale",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 333,
            "libraryName": {
              "contractScope": null,
              "id": 331,
              "name": "SafeERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3700,
              "src": "673:9:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeERC20_$3700",
                "typeString": "library SafeERC20"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "667:26:2",
            "typeName": {
              "contractScope": null,
              "id": 332,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3312,
              "src": "687:5:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$3312",
                "typeString": "contract ERC20"
              }
            }
          },
          {
            "constant": true,
            "id": 340,
            "name": "PURCHASE_MINIMUM_AMOUNT_WEI",
            "nodeType": "VariableDeclaration",
            "scope": 487,
            "src": "697:67:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 334,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "697:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "commonType": {
                "typeIdentifier": "t_rational_500000000000000000_by_1",
                "typeString": "int_const 500000000000000000"
              },
              "id": 339,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "argumentTypes": null,
                "hexValue": "35",
                "id": 335,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "752:1:2",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_5_by_1",
                  "typeString": "int_const 5"
                },
                "value": "5"
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "argumentTypes": null,
                "commonType": {
                  "typeIdentifier": "t_rational_100000000000000000_by_1",
                  "typeString": "int_const 100000000000000000"
                },
                "id": 338,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "leftExpression": {
                  "argumentTypes": null,
                  "hexValue": "3130",
                  "id": 336,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "756:2:2",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_10_by_1",
                    "typeString": "int_const 10"
                  },
                  "value": "10"
                },
                "nodeType": "BinaryOperation",
                "operator": "**",
                "rightExpression": {
                  "argumentTypes": null,
                  "hexValue": "3137",
                  "id": 337,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "762:2:2",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_17_by_1",
                    "typeString": "int_const 17"
                  },
                  "value": "17"
                },
                "src": "756:8:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_100000000000000000_by_1",
                  "typeString": "int_const 100000000000000000"
                }
              },
              "src": "752:12:2",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_500000000000000000_by_1",
                "typeString": "int_const 500000000000000000"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 384,
              "nodeType": "Block",
              "src": "1133:79:2",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 377,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "1143:24:2",
                    "subExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 375,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 348,
                          "src": "1161:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 374,
                        "name": "isWhitelistAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1629,
                        "src": "1144:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                          "typeString": "function (address) view returns (bool)"
                        }
                      },
                      "id": 376,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1144:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 383,
                  "nodeType": "IfStatement",
                  "src": "1139:69:2",
                  "trueBody": {
                    "id": 382,
                    "nodeType": "Block",
                    "src": "1169:39:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 379,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 348,
                              "src": "1195:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 378,
                            "name": "addWhitelistAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1641,
                            "src": "1177:17:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 380,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1177:24:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 381,
                        "nodeType": "ExpressionStatement",
                        "src": "1177:24:2"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 385,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "31",
                    "id": 359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1004:1:2",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  {
                    "argumentTypes": null,
                    "id": 360,
                    "name": "wallet",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 350,
                    "src": "1007:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 361,
                    "name": "token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 352,
                    "src": "1015:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3555",
                      "typeString": "contract IERC20"
                    }
                  }
                ],
                "id": 362,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 358,
                  "name": "Crowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2059,
                  "src": "994:9:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Crowdsale_$2059_$",
                    "typeString": "type(contract Crowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "994:27:2"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 364,
                    "name": "openingTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 354,
                    "src": "1039:11:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 365,
                    "name": "closingTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 356,
                    "src": "1052:11:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 366,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 363,
                  "name": "TimedCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2243,
                  "src": "1024:14:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_TimedCrowdsale_$2243_$",
                    "typeString": "type(contract TimedCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1024:40:2"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 368,
                    "name": "bonusRate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 342,
                    "src": "1089:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 369,
                    "name": "bonusTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 344,
                    "src": "1100:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 370,
                    "name": "defaultRate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 346,
                    "src": "1111:11:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 371,
                    "name": "owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 348,
                    "src": "1124:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 372,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 367,
                  "name": "AsureBonusesCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 191,
                  "src": "1067:21:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_AsureBonusesCrowdsale_$191_$",
                    "typeString": "type(contract AsureBonusesCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1067:63:2"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 357,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 342,
                  "name": "bonusRate",
                  "nodeType": "VariableDeclaration",
                  "scope": 385,
                  "src": "798:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 341,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "798:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 344,
                  "name": "bonusTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 385,
                  "src": "821:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 343,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "821:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 346,
                  "name": "defaultRate",
                  "nodeType": "VariableDeclaration",
                  "scope": 385,
                  "src": "844:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 345,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "844:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 348,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 385,
                  "src": "869:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 347,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "869:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 350,
                  "name": "wallet",
                  "nodeType": "VariableDeclaration",
                  "scope": 385,
                  "src": "888:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 349,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "888:15:2",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 352,
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 385,
                  "src": "916:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$3555",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 351,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3555,
                    "src": "916:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3555",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 354,
                  "name": "openingTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 385,
                  "src": "934:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 353,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "934:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 356,
                  "name": "closingTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 385,
                  "src": "959:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 355,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "959:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "792:190:2"
            },
            "returnParameters": {
              "id": 373,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1133:0:2"
            },
            "scope": 487,
            "src": "781:431:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 412,
              "nodeType": "Block",
              "src": "1301:96:2",
              "statements": [
                {
                  "body": {
                    "id": 410,
                    "nodeType": "Block",
                    "src": "1350:43:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 405,
                                "name": "accounts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 388,
                                "src": "1374:8:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 407,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 406,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 394,
                                "src": "1383:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1374:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 404,
                            "name": "_addWhitelisted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1775,
                            "src": "1358:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 408,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1358:28:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 409,
                        "nodeType": "ExpressionStatement",
                        "src": "1358:28:2"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 400,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 397,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 394,
                      "src": "1324:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 398,
                        "name": "accounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 388,
                        "src": "1328:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 399,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1328:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1324:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 411,
                  "initializationExpression": {
                    "assignments": [
                      394
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 394,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 411,
                        "src": "1312:6:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 393,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1312:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 396,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 395,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1321:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1312:10:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 402,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1345:3:2",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 401,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 394,
                        "src": "1345:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 403,
                    "nodeType": "ExpressionStatement",
                    "src": "1345:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "1307:86:2"
                }
              ]
            },
            "documentation": null,
            "id": 413,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 391,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 390,
                  "name": "onlyWhitelistAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1616,
                  "src": "1282:18:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1282:18:2"
              }
            ],
            "name": "addWhitelistedAccounts",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 389,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 388,
                  "name": "accounts",
                  "nodeType": "VariableDeclaration",
                  "scope": 413,
                  "src": "1248:25:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 386,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1248:7:2",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 387,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1248:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1247:27:2"
            },
            "returnParameters": {
              "id": 392,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1301:0:2"
            },
            "scope": 487,
            "src": "1216:181:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 441,
              "nodeType": "Block",
              "src": "1424:162:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 417,
                          "name": "hasClosed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2225,
                          "src": "1438:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                            "typeString": "function () view returns (bool)"
                          }
                        },
                        "id": 418,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1438:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 416,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3749,
                        3750
                      ],
                      "referencedDeclaration": 3749,
                      "src": "1430:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 419,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1430:20:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 420,
                  "nodeType": "ExpressionStatement",
                  "src": "1430:20:2"
                },
                {
                  "assignments": [
                    422
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 422,
                      "name": "burnableToken",
                      "nodeType": "VariableDeclaration",
                      "scope": 441,
                      "src": "1456:27:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Burnable_$3343",
                        "typeString": "contract ERC20Burnable"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 421,
                        "name": "ERC20Burnable",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 3343,
                        "src": "1456:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Burnable_$3343",
                          "typeString": "contract ERC20Burnable"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 429,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 425,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1887,
                              "src": "1508:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IERC20_$3555_$",
                                "typeString": "function () view returns (contract IERC20)"
                              }
                            },
                            "id": 426,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1508:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$3555",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$3555",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 424,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1500:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 427,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1500:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 423,
                      "name": "ERC20Burnable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3343,
                      "src": "1486:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC20Burnable_$3343_$",
                        "typeString": "type(contract ERC20Burnable)"
                      }
                    },
                    "id": 428,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1486:31:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Burnable_$3343",
                      "typeString": "contract ERC20Burnable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1456:61:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 436,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3792,
                                "src": "1574:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AsureCrowdsale_$487",
                                  "typeString": "contract AsureCrowdsale"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_AsureCrowdsale_$487",
                                  "typeString": "contract AsureCrowdsale"
                                }
                              ],
                              "id": 435,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1566:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 437,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1566:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 433,
                            "name": "burnableToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 422,
                            "src": "1542:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Burnable_$3343",
                              "typeString": "contract ERC20Burnable"
                            }
                          },
                          "id": 434,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2921,
                          "src": "1542:23:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 438,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1542:38:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 430,
                        "name": "burnableToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 422,
                        "src": "1523:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Burnable_$3343",
                          "typeString": "contract ERC20Burnable"
                        }
                      },
                      "id": 432,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3329,
                      "src": "1523:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 439,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1523:58:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 440,
                  "nodeType": "ExpressionStatement",
                  "src": "1523:58:2"
                }
              ]
            },
            "documentation": null,
            "id": 442,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 414,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1414:2:2"
            },
            "returnParameters": {
              "id": 415,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1424:0:2"
            },
            "scope": 487,
            "src": "1401:185:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 464,
              "nodeType": "Block",
              "src": "1844:69:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 454,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1858:12:2",
                        "subExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 452,
                            "name": "hasClosed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2225,
                            "src": "1859:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                              "typeString": "function () view returns (bool)"
                            }
                          },
                          "id": 453,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1859:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 451,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3749,
                        3750
                      ],
                      "referencedDeclaration": 3749,
                      "src": "1850:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 455,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1850:21:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 456,
                  "nodeType": "ExpressionStatement",
                  "src": "1850:21:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 460,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 444,
                        "src": "1898:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 461,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 446,
                        "src": "1902:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 457,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1887,
                          "src": "1877:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IERC20_$3555_$",
                            "typeString": "function () view returns (contract IERC20)"
                          }
                        },
                        "id": 458,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1877:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3555",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 459,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3580,
                      "src": "1877:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$3555_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$3555_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 462,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1877:31:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 463,
                  "nodeType": "ExpressionStatement",
                  "src": "1877:31:2"
                }
              ]
            },
            "documentation": "@dev Transfer tokens originally intended to be sold as part of this crowdsale to an IEO.\n@param to Token beneficiary\n@param value Amount of wei to transfer",
            "id": 465,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 449,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 448,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2814,
                  "src": "1827:9:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1827:9:2"
              }
            ],
            "name": "transferToIEO",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 447,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 444,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 465,
                  "src": "1800:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 443,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1800:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 446,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 465,
                  "src": "1812:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 445,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1812:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1799:27:2"
            },
            "returnParameters": {
              "id": 450,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1844:0:2"
            },
            "scope": 487,
            "src": "1777:136:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 485,
              "nodeType": "Block",
              "src": "2189:119:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 475,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 473,
                          "name": "_weiAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 469,
                          "src": "2203:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 474,
                          "name": "PURCHASE_MINIMUM_AMOUNT_WEI",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 340,
                          "src": "2217:27:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2203:41:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 472,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3749,
                        3750
                      ],
                      "referencedDeclaration": 3749,
                      "src": "2195:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 476,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2195:50:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 477,
                  "nodeType": "ExpressionStatement",
                  "src": "2195:50:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 481,
                        "name": "_beneficiary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 467,
                        "src": "2278:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 482,
                        "name": "_weiAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 469,
                        "src": "2292:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 478,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3793,
                        "src": "2251:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_AsureCrowdsale_$487",
                          "typeString": "contract super AsureCrowdsale"
                        }
                      },
                      "id": 480,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_preValidatePurchase",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2272,
                      "src": "2251:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) view"
                      }
                    },
                    "id": 483,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2251:52:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 484,
                  "nodeType": "ExpressionStatement",
                  "src": "2251:52:2"
                }
              ]
            },
            "documentation": "@dev Extend parent behavior requiring a minimum contribution of 0.5 ETH.\n@param _beneficiary Token beneficiary\n@param _weiAmount Amount of wei contributed",
            "id": 486,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_preValidatePurchase",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 470,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 467,
                  "name": "_beneficiary",
                  "nodeType": "VariableDeclaration",
                  "scope": 486,
                  "src": "2133:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 466,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2133:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 469,
                  "name": "_weiAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 486,
                  "src": "2155:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 468,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2155:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2132:42:2"
            },
            "returnParameters": {
              "id": 471,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2189:0:2"
            },
            "scope": 487,
            "src": "2103:205:2",
            "stateMutability": "view",
            "superFunction": 2272,
            "visibility": "internal"
          }
        ],
        "scope": 488,
        "src": "567:1743:2"
      }
    ],
    "src": "0:2311:2"
  },
  "legacyAST": {
    "absolutePath": "/home/mischi/p/asurenetwork/crowdsale/packages/crowdsale/contracts/AsureCrowdsale.sol",
    "exportedSymbols": {
      "AsureCrowdsale": [
        487
      ]
    },
    "id": 488,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 314,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "id": 315,
        "nodeType": "ImportDirective",
        "scope": 488,
        "sourceUnit": 3313,
        "src": "25:63:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "id": 316,
        "nodeType": "ImportDirective",
        "scope": 488,
        "sourceUnit": 3556,
        "src": "89:64:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20Burnable.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20Burnable.sol",
        "id": 317,
        "nodeType": "ImportDirective",
        "scope": 488,
        "sourceUnit": 3344,
        "src": "154:71:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/SafeERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/SafeERC20.sol",
        "id": 318,
        "nodeType": "ImportDirective",
        "scope": 488,
        "sourceUnit": 3701,
        "src": "226:67:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/crowdsale/validation/TimedCrowdsale.sol",
        "file": "openzeppelin-solidity/contracts/crowdsale/validation/TimedCrowdsale.sol",
        "id": 319,
        "nodeType": "ImportDirective",
        "scope": 488,
        "sourceUnit": 2244,
        "src": "294:81:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/crowdsale/validation/WhitelistCrowdsale.sol",
        "file": "openzeppelin-solidity/contracts/crowdsale/validation/WhitelistCrowdsale.sol",
        "id": 320,
        "nodeType": "ImportDirective",
        "scope": 488,
        "sourceUnit": 2274,
        "src": "376:85:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/crowdsale/Crowdsale.sol",
        "file": "openzeppelin-solidity/contracts/crowdsale/Crowdsale.sol",
        "id": 321,
        "nodeType": "ImportDirective",
        "scope": 488,
        "sourceUnit": 2060,
        "src": "462:65:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/mischi/p/asurenetwork/crowdsale/packages/crowdsale/contracts/AsureBonusesCrowdsale.sol",
        "file": "./AsureBonusesCrowdsale.sol",
        "id": 322,
        "nodeType": "ImportDirective",
        "scope": 488,
        "sourceUnit": 192,
        "src": "528:37:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 323,
              "name": "Crowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2059,
              "src": "594:9:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Crowdsale_$2059",
                "typeString": "contract Crowdsale"
              }
            },
            "id": 324,
            "nodeType": "InheritanceSpecifier",
            "src": "594:9:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 325,
              "name": "TimedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2243,
              "src": "605:14:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TimedCrowdsale_$2243",
                "typeString": "contract TimedCrowdsale"
              }
            },
            "id": 326,
            "nodeType": "InheritanceSpecifier",
            "src": "605:14:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 327,
              "name": "WhitelistCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2273,
              "src": "621:18:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_WhitelistCrowdsale_$2273",
                "typeString": "contract WhitelistCrowdsale"
              }
            },
            "id": 328,
            "nodeType": "InheritanceSpecifier",
            "src": "621:18:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 329,
              "name": "AsureBonusesCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 191,
              "src": "641:21:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AsureBonusesCrowdsale_$191",
                "typeString": "contract AsureBonusesCrowdsale"
              }
            },
            "id": 330,
            "nodeType": "InheritanceSpecifier",
            "src": "641:21:2"
          }
        ],
        "contractDependencies": [
          191,
          1683,
          1792,
          2059,
          2243,
          2273,
          2880,
          3731
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 487,
        "linearizedBaseContracts": [
          487,
          191,
          2880,
          2273,
          2243,
          2059,
          3731,
          1792,
          1683
        ],
        "name": "AsureCrowdsale",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 333,
            "libraryName": {
              "contractScope": null,
              "id": 331,
              "name": "SafeERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3700,
              "src": "673:9:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeERC20_$3700",
                "typeString": "library SafeERC20"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "667:26:2",
            "typeName": {
              "contractScope": null,
              "id": 332,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3312,
              "src": "687:5:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$3312",
                "typeString": "contract ERC20"
              }
            }
          },
          {
            "constant": true,
            "id": 340,
            "name": "PURCHASE_MINIMUM_AMOUNT_WEI",
            "nodeType": "VariableDeclaration",
            "scope": 487,
            "src": "697:67:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 334,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "697:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "commonType": {
                "typeIdentifier": "t_rational_500000000000000000_by_1",
                "typeString": "int_const 500000000000000000"
              },
              "id": 339,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "argumentTypes": null,
                "hexValue": "35",
                "id": 335,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "752:1:2",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_5_by_1",
                  "typeString": "int_const 5"
                },
                "value": "5"
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "argumentTypes": null,
                "commonType": {
                  "typeIdentifier": "t_rational_100000000000000000_by_1",
                  "typeString": "int_const 100000000000000000"
                },
                "id": 338,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "leftExpression": {
                  "argumentTypes": null,
                  "hexValue": "3130",
                  "id": 336,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "756:2:2",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_10_by_1",
                    "typeString": "int_const 10"
                  },
                  "value": "10"
                },
                "nodeType": "BinaryOperation",
                "operator": "**",
                "rightExpression": {
                  "argumentTypes": null,
                  "hexValue": "3137",
                  "id": 337,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "762:2:2",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_17_by_1",
                    "typeString": "int_const 17"
                  },
                  "value": "17"
                },
                "src": "756:8:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_100000000000000000_by_1",
                  "typeString": "int_const 100000000000000000"
                }
              },
              "src": "752:12:2",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_500000000000000000_by_1",
                "typeString": "int_const 500000000000000000"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 384,
              "nodeType": "Block",
              "src": "1133:79:2",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 377,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "1143:24:2",
                    "subExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 375,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 348,
                          "src": "1161:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 374,
                        "name": "isWhitelistAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1629,
                        "src": "1144:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                          "typeString": "function (address) view returns (bool)"
                        }
                      },
                      "id": 376,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1144:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 383,
                  "nodeType": "IfStatement",
                  "src": "1139:69:2",
                  "trueBody": {
                    "id": 382,
                    "nodeType": "Block",
                    "src": "1169:39:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 379,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 348,
                              "src": "1195:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 378,
                            "name": "addWhitelistAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1641,
                            "src": "1177:17:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 380,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1177:24:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 381,
                        "nodeType": "ExpressionStatement",
                        "src": "1177:24:2"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 385,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "31",
                    "id": 359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1004:1:2",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  {
                    "argumentTypes": null,
                    "id": 360,
                    "name": "wallet",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 350,
                    "src": "1007:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 361,
                    "name": "token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 352,
                    "src": "1015:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3555",
                      "typeString": "contract IERC20"
                    }
                  }
                ],
                "id": 362,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 358,
                  "name": "Crowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2059,
                  "src": "994:9:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Crowdsale_$2059_$",
                    "typeString": "type(contract Crowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "994:27:2"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 364,
                    "name": "openingTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 354,
                    "src": "1039:11:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 365,
                    "name": "closingTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 356,
                    "src": "1052:11:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 366,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 363,
                  "name": "TimedCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2243,
                  "src": "1024:14:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_TimedCrowdsale_$2243_$",
                    "typeString": "type(contract TimedCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1024:40:2"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 368,
                    "name": "bonusRate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 342,
                    "src": "1089:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 369,
                    "name": "bonusTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 344,
                    "src": "1100:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 370,
                    "name": "defaultRate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 346,
                    "src": "1111:11:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 371,
                    "name": "owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 348,
                    "src": "1124:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 372,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 367,
                  "name": "AsureBonusesCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 191,
                  "src": "1067:21:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_AsureBonusesCrowdsale_$191_$",
                    "typeString": "type(contract AsureBonusesCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1067:63:2"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 357,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 342,
                  "name": "bonusRate",
                  "nodeType": "VariableDeclaration",
                  "scope": 385,
                  "src": "798:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 341,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "798:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 344,
                  "name": "bonusTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 385,
                  "src": "821:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 343,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "821:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 346,
                  "name": "defaultRate",
                  "nodeType": "VariableDeclaration",
                  "scope": 385,
                  "src": "844:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 345,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "844:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 348,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 385,
                  "src": "869:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 347,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "869:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 350,
                  "name": "wallet",
                  "nodeType": "VariableDeclaration",
                  "scope": 385,
                  "src": "888:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 349,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "888:15:2",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 352,
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 385,
                  "src": "916:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$3555",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 351,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3555,
                    "src": "916:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3555",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 354,
                  "name": "openingTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 385,
                  "src": "934:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 353,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "934:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 356,
                  "name": "closingTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 385,
                  "src": "959:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 355,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "959:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "792:190:2"
            },
            "returnParameters": {
              "id": 373,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1133:0:2"
            },
            "scope": 487,
            "src": "781:431:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 412,
              "nodeType": "Block",
              "src": "1301:96:2",
              "statements": [
                {
                  "body": {
                    "id": 410,
                    "nodeType": "Block",
                    "src": "1350:43:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 405,
                                "name": "accounts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 388,
                                "src": "1374:8:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 407,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 406,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 394,
                                "src": "1383:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1374:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 404,
                            "name": "_addWhitelisted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1775,
                            "src": "1358:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 408,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1358:28:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 409,
                        "nodeType": "ExpressionStatement",
                        "src": "1358:28:2"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 400,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 397,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 394,
                      "src": "1324:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 398,
                        "name": "accounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 388,
                        "src": "1328:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 399,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1328:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1324:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 411,
                  "initializationExpression": {
                    "assignments": [
                      394
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 394,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 411,
                        "src": "1312:6:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 393,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1312:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 396,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 395,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1321:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1312:10:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 402,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1345:3:2",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 401,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 394,
                        "src": "1345:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 403,
                    "nodeType": "ExpressionStatement",
                    "src": "1345:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "1307:86:2"
                }
              ]
            },
            "documentation": null,
            "id": 413,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 391,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 390,
                  "name": "onlyWhitelistAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1616,
                  "src": "1282:18:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1282:18:2"
              }
            ],
            "name": "addWhitelistedAccounts",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 389,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 388,
                  "name": "accounts",
                  "nodeType": "VariableDeclaration",
                  "scope": 413,
                  "src": "1248:25:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 386,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1248:7:2",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 387,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1248:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1247:27:2"
            },
            "returnParameters": {
              "id": 392,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1301:0:2"
            },
            "scope": 487,
            "src": "1216:181:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 441,
              "nodeType": "Block",
              "src": "1424:162:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 417,
                          "name": "hasClosed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2225,
                          "src": "1438:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                            "typeString": "function () view returns (bool)"
                          }
                        },
                        "id": 418,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1438:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 416,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3749,
                        3750
                      ],
                      "referencedDeclaration": 3749,
                      "src": "1430:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 419,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1430:20:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 420,
                  "nodeType": "ExpressionStatement",
                  "src": "1430:20:2"
                },
                {
                  "assignments": [
                    422
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 422,
                      "name": "burnableToken",
                      "nodeType": "VariableDeclaration",
                      "scope": 441,
                      "src": "1456:27:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Burnable_$3343",
                        "typeString": "contract ERC20Burnable"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 421,
                        "name": "ERC20Burnable",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 3343,
                        "src": "1456:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Burnable_$3343",
                          "typeString": "contract ERC20Burnable"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 429,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 425,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1887,
                              "src": "1508:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IERC20_$3555_$",
                                "typeString": "function () view returns (contract IERC20)"
                              }
                            },
                            "id": 426,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1508:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$3555",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$3555",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 424,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1500:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 427,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1500:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 423,
                      "name": "ERC20Burnable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3343,
                      "src": "1486:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC20Burnable_$3343_$",
                        "typeString": "type(contract ERC20Burnable)"
                      }
                    },
                    "id": 428,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1486:31:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Burnable_$3343",
                      "typeString": "contract ERC20Burnable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1456:61:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 436,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3792,
                                "src": "1574:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AsureCrowdsale_$487",
                                  "typeString": "contract AsureCrowdsale"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_AsureCrowdsale_$487",
                                  "typeString": "contract AsureCrowdsale"
                                }
                              ],
                              "id": 435,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1566:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 437,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1566:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 433,
                            "name": "burnableToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 422,
                            "src": "1542:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Burnable_$3343",
                              "typeString": "contract ERC20Burnable"
                            }
                          },
                          "id": 434,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2921,
                          "src": "1542:23:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 438,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1542:38:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 430,
                        "name": "burnableToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 422,
                        "src": "1523:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Burnable_$3343",
                          "typeString": "contract ERC20Burnable"
                        }
                      },
                      "id": 432,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3329,
                      "src": "1523:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 439,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1523:58:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 440,
                  "nodeType": "ExpressionStatement",
                  "src": "1523:58:2"
                }
              ]
            },
            "documentation": null,
            "id": 442,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 414,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1414:2:2"
            },
            "returnParameters": {
              "id": 415,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1424:0:2"
            },
            "scope": 487,
            "src": "1401:185:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 464,
              "nodeType": "Block",
              "src": "1844:69:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 454,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1858:12:2",
                        "subExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 452,
                            "name": "hasClosed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2225,
                            "src": "1859:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                              "typeString": "function () view returns (bool)"
                            }
                          },
                          "id": 453,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1859:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 451,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3749,
                        3750
                      ],
                      "referencedDeclaration": 3749,
                      "src": "1850:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 455,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1850:21:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 456,
                  "nodeType": "ExpressionStatement",
                  "src": "1850:21:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 460,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 444,
                        "src": "1898:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 461,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 446,
                        "src": "1902:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 457,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1887,
                          "src": "1877:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IERC20_$3555_$",
                            "typeString": "function () view returns (contract IERC20)"
                          }
                        },
                        "id": 458,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1877:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3555",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 459,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3580,
                      "src": "1877:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$3555_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$3555_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 462,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1877:31:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 463,
                  "nodeType": "ExpressionStatement",
                  "src": "1877:31:2"
                }
              ]
            },
            "documentation": "@dev Transfer tokens originally intended to be sold as part of this crowdsale to an IEO.\n@param to Token beneficiary\n@param value Amount of wei to transfer",
            "id": 465,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 449,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 448,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2814,
                  "src": "1827:9:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1827:9:2"
              }
            ],
            "name": "transferToIEO",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 447,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 444,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 465,
                  "src": "1800:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 443,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1800:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 446,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 465,
                  "src": "1812:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 445,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1812:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1799:27:2"
            },
            "returnParameters": {
              "id": 450,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1844:0:2"
            },
            "scope": 487,
            "src": "1777:136:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 485,
              "nodeType": "Block",
              "src": "2189:119:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 475,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 473,
                          "name": "_weiAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 469,
                          "src": "2203:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 474,
                          "name": "PURCHASE_MINIMUM_AMOUNT_WEI",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 340,
                          "src": "2217:27:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2203:41:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 472,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3749,
                        3750
                      ],
                      "referencedDeclaration": 3749,
                      "src": "2195:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 476,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2195:50:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 477,
                  "nodeType": "ExpressionStatement",
                  "src": "2195:50:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 481,
                        "name": "_beneficiary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 467,
                        "src": "2278:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 482,
                        "name": "_weiAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 469,
                        "src": "2292:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 478,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3793,
                        "src": "2251:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_AsureCrowdsale_$487",
                          "typeString": "contract super AsureCrowdsale"
                        }
                      },
                      "id": 480,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_preValidatePurchase",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2272,
                      "src": "2251:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) view"
                      }
                    },
                    "id": 483,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2251:52:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 484,
                  "nodeType": "ExpressionStatement",
                  "src": "2251:52:2"
                }
              ]
            },
            "documentation": "@dev Extend parent behavior requiring a minimum contribution of 0.5 ETH.\n@param _beneficiary Token beneficiary\n@param _weiAmount Amount of wei contributed",
            "id": 486,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_preValidatePurchase",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 470,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 467,
                  "name": "_beneficiary",
                  "nodeType": "VariableDeclaration",
                  "scope": 486,
                  "src": "2133:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 466,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2133:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 469,
                  "name": "_weiAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 486,
                  "src": "2155:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 468,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2155:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2132:42:2"
            },
            "returnParameters": {
              "id": 471,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2189:0:2"
            },
            "scope": 487,
            "src": "2103:205:2",
            "stateMutability": "view",
            "superFunction": 2272,
            "visibility": "internal"
          }
        ],
        "scope": 488,
        "src": "567:1743:2"
      }
    ],
    "src": "0:2311:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.10+commit.5a6ea5b1.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.11",
  "updatedAt": "2019-07-24T14:19:10.897Z",
  "devdoc": {
    "methods": {
      "bonusRate()": {
        "return": "the number of token units a buyer gets per wei before the bonus time."
      },
      "bonusTime()": {
        "return": "the crowdsale bonus time in unix epoch seconds."
      },
      "buyTokens(address)": {
        "details": "low level token purchase ***DO NOT OVERRIDE*** This function has a non-reentrancy guard, so it shouldn't be called by another `nonReentrant` function.",
        "params": {
          "beneficiary": "Recipient of the token purchase"
        }
      },
      "closingTime()": {
        "return": "the crowdsale closing time."
      },
      "defaultRate()": {
        "return": "the number of token units a buyer gets per wei after the bonus time."
      },
      "getCurrentRate()": {
        "details": "Returns the rate of tokens per wei at the present time. Note that, rate can be changed by the owner until the crowdsale is open.",
        "return": "The number of tokens a buyer gets per wei at a given time"
      },
      "hasClosed()": {
        "details": "Checks whether the period in which the crowdsale is open has already elapsed.",
        "return": "Whether crowdsale period has elapsed"
      },
      "isOpen()": {
        "return": "true if the crowdsale is open, false otherwise."
      },
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract."
      },
      "openingTime()": {
        "return": "the crowdsale opening time."
      },
      "owner()": {
        "return": "the address of the owner."
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract."
      },
      "token()": {
        "return": "the token being sold."
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      },
      "transferToIEO(address,uint256)": {
        "details": "Transfer tokens originally intended to be sold as part of this crowdsale to an IEO.",
        "params": {
          "to": "Token beneficiary",
          "value": "Amount of wei to transfer"
        }
      },
      "updateRates(uint256,uint256,uint256)": {
        "details": "Owner can update bonus rate, bonus time, and default rate before crowdsale opened.",
        "params": {
          "newBonusRate": "Number of token units a buyer gets per wei before bonus time",
          "newBonusTime": "The crowdsale bonus time in unix epoch seconds",
          "newDefaultRate": "Number of token units a buyer gets per wei after the bonus time"
        }
      },
      "wallet()": {
        "return": "the address where funds are collected."
      },
      "weiRaised()": {
        "return": "the amount of wei raised."
      }
    }
  },
  "userdoc": {
    "methods": {
      "rate()": {
        "notice": "The base rate function is overridden to revert, since this crowdsale doesn't use it, and all calls to it are a mistake."
      },
      "renounceOwnership()": {
        "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      }
    }
  }
}