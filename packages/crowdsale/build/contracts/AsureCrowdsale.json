{
  "contractName": "AsureCrowdsale",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addWhitelisted",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "hasClosed",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "removeWhitelisted",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "bonusTimeslot",
          "type": "uint256"
        },
        {
          "name": "bonusRate",
          "type": "uint256"
        }
      ],
      "name": "updateBonusTimeslotRate",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "rate",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isWhitelisted",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "weiRaised",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOpen",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "closingTime",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceWhitelistAdmin",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "wallet",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addWhitelistAdmin",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "initialRate",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "nextBonusTimeslot",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "openingTime",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isWhitelistAdmin",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "nextBonusRate",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newInitialRate",
          "type": "uint256"
        }
      ],
      "name": "updateInitialRate",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceWhitelisted",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "beneficiary",
          "type": "address"
        }
      ],
      "name": "buyTokens",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getCurrentRate",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "rate",
          "type": "uint256"
        },
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "crowdsaleWallet",
          "type": "address"
        },
        {
          "name": "token",
          "type": "address"
        },
        {
          "name": "openingTime",
          "type": "uint256"
        },
        {
          "name": "closingTime",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "nextBonusTimeslot",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "nextBonusRate",
          "type": "uint256"
        }
      ],
      "name": "BonusTimeslotRateUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "initialRate",
          "type": "uint256"
        }
      ],
      "name": "InitialRateUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "purchaser",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokensPurchased",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "WhitelistedAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "WhitelistedRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "WhitelistAdminAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "WhitelistAdminRemoved",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "accounts",
          "type": "address[]"
        }
      ],
      "name": "addWhitelistedAccounts",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x60806040523480156200001157600080fd5b5060405160c08062001dba833981018060405260c08110156200003357600080fd5b81019080805190602001909291908051906020019092919080519060200190929190805190602001909291908051906020019092919080519060200190929190505050858583838988886200009733620004fc640100000000026401000000009004565b60016002819055506000831162000116576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260018152602001807f310000000000000000000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415620001ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260018152602001807f320000000000000000000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156200025e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260018152602001807f330000000000000000000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b8260058190555081600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050504282101562000361576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260018152602001807f390000000000000000000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b818111620003d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260028152602001807f313000000000000000000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b8160078190555080600881905550505033600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008211620004b357600080fd5b81600a81905550620004d48162000566640100000000026401000000009004565b5050620004f085620005a6640100000000026401000000009004565b505050505050620008b9565b62000520816000620005e76401000000000262001236179091906401000000009004565b8073ffffffffffffffffffffffffffffffffffffffff167f22380c05984257a1cb900161c713dd71d39e74820f1aea43bd3f1bdd2096129960405160405180910390a250565b6200057f620006a6640100000000026401000000009004565b6200058957600080fd5b620005a381620006fe640100000000026401000000009004565b50565b620005c033620007f9640100000000026401000000009004565b620005ca57600080fd5b620005e481620004fc640100000000026401000000009004565b50565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156200062257600080fd5b6200063d828262000826640100000000026401000000009004565b156200064857600080fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6000600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156200073957600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60006200081f826000620008266401000000000262000f0b179091906401000000009004565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156200086257600080fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6114f180620008c96000396000f3fe6080604052600436106101b9576000357c0100000000000000000000000000000000000000000000000000000000900480637362d9c811610109578063c404c721116100a7578063ec8ac4d811610081578063ec8ac4d81461077b578063f2fde38b146107bf578063f7fb07b014610810578063fc0c546a1461083b576101b9565b8063c404c721146106fe578063d1c6f44814610729578063d6cd947314610764576101b9565b80639e51051f116100e35780639e51051f14610614578063a02d85631461063f578063b7a8807c1461066a578063bb5f747b14610695576101b9565b80637362d9c81461053d5780638da5cb5b1461058e5780638f32d59b146105e5576101b9565b80633af32abf116101765780634b6753bc116101505780634b6753bc1461048d5780634c5a628c146104b8578063521eb273146104cf578063715018a614610526576101b9565b80633af32abf146103ca5780634042b66f1461043357806347535d7b1461045e576101b9565b806310154bad146101c45780631515bc2b14610215578063291d9549146102445780632a4bc321146102955780632aa3ae9c1461035a5780632c4e722e1461039f575b6101c233610892565b005b3480156101d057600080fd5b50610213600480360360208110156101e757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610988565b005b34801561022157600080fd5b5061022a6109a6565b604051808215151515815260200191505060405180910390f35b34801561025057600080fd5b506102936004803603602081101561026757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506109b2565b005b3480156102a157600080fd5b50610358600480360360208110156102b857600080fd5b81019080803590602001906401000000008111156102d557600080fd5b8201836020820111156102e757600080fd5b8035906020019184602083028401116401000000008311171561030957600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505091929192905050506109d0565b005b34801561036657600080fd5b5061039d6004803603604081101561037d57600080fd5b810190808035906020019092919080359060200190929190505050610a1e565b005b3480156103ab57600080fd5b506103b4610a3d565b6040518082815260200191505060405180910390f35b3480156103d657600080fd5b50610419600480360360208110156103ed57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a44565b604051808215151515815260200191505060405180910390f35b34801561043f57600080fd5b50610448610a61565b6040518082815260200191505060405180910390f35b34801561046a57600080fd5b50610473610a6b565b604051808215151515815260200191505060405180910390f35b34801561049957600080fd5b506104a2610a86565b6040518082815260200191505060405180910390f35b3480156104c457600080fd5b506104cd610a90565b005b3480156104db57600080fd5b506104e4610a9b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561053257600080fd5b5061053b610ac5565b005b34801561054957600080fd5b5061058c6004803603602081101561056057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b97565b005b34801561059a57600080fd5b506105a3610bb5565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156105f157600080fd5b506105fa610bdf565b604051808215151515815260200191505060405180910390f35b34801561062057600080fd5b50610629610c37565b6040518082815260200191505060405180910390f35b34801561064b57600080fd5b50610654610c41565b6040518082815260200191505060405180910390f35b34801561067657600080fd5b5061067f610c4b565b6040518082815260200191505060405180910390f35b3480156106a157600080fd5b506106e4600480360360208110156106b857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c55565b604051808215151515815260200191505060405180910390f35b34801561070a57600080fd5b50610713610c72565b6040518082815260200191505060405180910390f35b34801561073557600080fd5b506107626004803603602081101561074c57600080fd5b8101908080359060200190929190505050610c7c565b005b34801561077057600080fd5b50610779610c99565b005b6107bd6004803603602081101561079157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610892565b005b3480156107cb57600080fd5b5061080e600480360360208110156107e257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ca4565b005b34801561081c57600080fd5b50610825610cc1565b6040518082815260200191505060405180910390f35b34801561084757600080fd5b50610850610cf4565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60016002600082825401925050819055506000600254905060003490506108b98382610d1e565b60006108c482610d3e565b90506108db82600654610d6690919063ffffffff16565b6006819055506108eb8482610d85565b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f6faf93231a456e552dbc9961f58d9713ee4f2e69d15f1975b050ef0911053a7b8484604051808381526020018281526020019250505060405180910390a36109628483610d93565b61096a610d97565b6109748483610e02565b5050600254811461098457600080fd5b5050565b61099133610c55565b61099a57600080fd5b6109a381610e06565b50565b60006008544211905090565b6109bb33610c55565b6109c457600080fd5b6109cd81610e60565b50565b6109d933610c55565b6109e257600080fd5b60008090505b8151811015610a1a57610a0d828281518110610a0057fe5b6020026020010151610e06565b80806001019150506109e8565b5050565b610a26610bdf565b610a2f57600080fd5b610a398282610eba565b5050565b6000806000fd5b6000610a5a826001610f0b90919063ffffffff16565b9050919050565b6000600654905090565b60006007544210158015610a8157506008544211155b905090565b6000600854905090565b610a9933610f9d565b565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610acd610bdf565b610ad657600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b610ba033610c55565b610ba957600080fd5b610bb281610ff7565b50565b6000600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6000600a54905090565b6000600b54905090565b6000600754905090565b6000610c6b826000610f0b90919063ffffffff16565b9050919050565b6000600c54905090565b610c84610bdf565b610c8d57600080fd5b610c9681611051565b50565b610ca233610e60565b565b610cac610bdf565b610cb557600080fd5b610cbe81611092565b50565b6000610ccb610a6b565b610cd85760009050610cf1565b600b544210610ceb57600c549050610cf1565b600a5490505b90565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610d2782610a44565b610d3057600080fd5b610d3a828261118c565b5050565b600080610d49610cc1565b9050610d5e83826111ab90919063ffffffff16565b915050919050565b600080828401905083811015610d7b57600080fd5b8091505092915050565b610d8f82826111e5565b5050565b5050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f19350505050158015610dff573d6000803e3d6000fd5b50565b5050565b610e1a81600161123690919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fee1504a83b6d4a361f4c1dc78ab59bfa30d6a3b6612c403e86bb01ef2984295f60405160405180910390a250565b610e748160016112e290919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f270d9b30cf5b0793bbfd54c9d5b94aeb49462b8148399000265144a8722da6b660405160405180910390a250565b81600b8190555080600c819055507f4e7e6d92843fbe2fd0f27456b98f02069ee4d44de6a198b7db55f5bfd76fe9248282604051808381526020018281526020019250505060405180910390a15050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610f4657600080fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b610fb18160006112e290919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f0a8eb35e5ca14b3d6f28e4abf2f128dbab231a58b56e89beb5d636115001e16560405160405180910390a250565b61100b81600061123690919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f22380c05984257a1cb900161c713dd71d39e74820f1aea43bd3f1bdd2096129960405160405180910390a250565b80600a819055507f2d5f5ea15ed32044e5f601470ede06bf73cf3c8983ebcfd001fc563fcec0fc9d816040518082815260200191505060405180910390a150565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156110cc57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b611194610a6b565b61119d57600080fd5b6111a7828261138d565b5050565b6000808314156111be57600090506111df565b60008284029050828482816111cf57fe5b04146111da57600080fd5b809150505b92915050565b6112328282600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166113d99092919063ffffffff16565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561127057600080fd5b61127a8282610f0b565b1561128457600080fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561131c57600080fd5b6113268282610f0b565b61132f57600080fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156113c757600080fd5b60008114156113d557600080fd5b5050565b8273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561147c57600080fd5b505af1158015611490573d6000803e3d6000fd5b505050506040513d60208110156114a657600080fd5b81019080805190602001909291905050506114c057600080fd5b50505056fea165627a7a723058200ea28275f567bf04191c6b94bb6df831ffc711c61ab227475008a1813f00a2ee0029",
  "deployedBytecode": "0x6080604052600436106101b9576000357c0100000000000000000000000000000000000000000000000000000000900480637362d9c811610109578063c404c721116100a7578063ec8ac4d811610081578063ec8ac4d81461077b578063f2fde38b146107bf578063f7fb07b014610810578063fc0c546a1461083b576101b9565b8063c404c721146106fe578063d1c6f44814610729578063d6cd947314610764576101b9565b80639e51051f116100e35780639e51051f14610614578063a02d85631461063f578063b7a8807c1461066a578063bb5f747b14610695576101b9565b80637362d9c81461053d5780638da5cb5b1461058e5780638f32d59b146105e5576101b9565b80633af32abf116101765780634b6753bc116101505780634b6753bc1461048d5780634c5a628c146104b8578063521eb273146104cf578063715018a614610526576101b9565b80633af32abf146103ca5780634042b66f1461043357806347535d7b1461045e576101b9565b806310154bad146101c45780631515bc2b14610215578063291d9549146102445780632a4bc321146102955780632aa3ae9c1461035a5780632c4e722e1461039f575b6101c233610892565b005b3480156101d057600080fd5b50610213600480360360208110156101e757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610988565b005b34801561022157600080fd5b5061022a6109a6565b604051808215151515815260200191505060405180910390f35b34801561025057600080fd5b506102936004803603602081101561026757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506109b2565b005b3480156102a157600080fd5b50610358600480360360208110156102b857600080fd5b81019080803590602001906401000000008111156102d557600080fd5b8201836020820111156102e757600080fd5b8035906020019184602083028401116401000000008311171561030957600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505091929192905050506109d0565b005b34801561036657600080fd5b5061039d6004803603604081101561037d57600080fd5b810190808035906020019092919080359060200190929190505050610a1e565b005b3480156103ab57600080fd5b506103b4610a3d565b6040518082815260200191505060405180910390f35b3480156103d657600080fd5b50610419600480360360208110156103ed57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a44565b604051808215151515815260200191505060405180910390f35b34801561043f57600080fd5b50610448610a61565b6040518082815260200191505060405180910390f35b34801561046a57600080fd5b50610473610a6b565b604051808215151515815260200191505060405180910390f35b34801561049957600080fd5b506104a2610a86565b6040518082815260200191505060405180910390f35b3480156104c457600080fd5b506104cd610a90565b005b3480156104db57600080fd5b506104e4610a9b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561053257600080fd5b5061053b610ac5565b005b34801561054957600080fd5b5061058c6004803603602081101561056057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b97565b005b34801561059a57600080fd5b506105a3610bb5565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156105f157600080fd5b506105fa610bdf565b604051808215151515815260200191505060405180910390f35b34801561062057600080fd5b50610629610c37565b6040518082815260200191505060405180910390f35b34801561064b57600080fd5b50610654610c41565b6040518082815260200191505060405180910390f35b34801561067657600080fd5b5061067f610c4b565b6040518082815260200191505060405180910390f35b3480156106a157600080fd5b506106e4600480360360208110156106b857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c55565b604051808215151515815260200191505060405180910390f35b34801561070a57600080fd5b50610713610c72565b6040518082815260200191505060405180910390f35b34801561073557600080fd5b506107626004803603602081101561074c57600080fd5b8101908080359060200190929190505050610c7c565b005b34801561077057600080fd5b50610779610c99565b005b6107bd6004803603602081101561079157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610892565b005b3480156107cb57600080fd5b5061080e600480360360208110156107e257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ca4565b005b34801561081c57600080fd5b50610825610cc1565b6040518082815260200191505060405180910390f35b34801561084757600080fd5b50610850610cf4565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60016002600082825401925050819055506000600254905060003490506108b98382610d1e565b60006108c482610d3e565b90506108db82600654610d6690919063ffffffff16565b6006819055506108eb8482610d85565b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f6faf93231a456e552dbc9961f58d9713ee4f2e69d15f1975b050ef0911053a7b8484604051808381526020018281526020019250505060405180910390a36109628483610d93565b61096a610d97565b6109748483610e02565b5050600254811461098457600080fd5b5050565b61099133610c55565b61099a57600080fd5b6109a381610e06565b50565b60006008544211905090565b6109bb33610c55565b6109c457600080fd5b6109cd81610e60565b50565b6109d933610c55565b6109e257600080fd5b60008090505b8151811015610a1a57610a0d828281518110610a0057fe5b6020026020010151610e06565b80806001019150506109e8565b5050565b610a26610bdf565b610a2f57600080fd5b610a398282610eba565b5050565b6000806000fd5b6000610a5a826001610f0b90919063ffffffff16565b9050919050565b6000600654905090565b60006007544210158015610a8157506008544211155b905090565b6000600854905090565b610a9933610f9d565b565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610acd610bdf565b610ad657600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b610ba033610c55565b610ba957600080fd5b610bb281610ff7565b50565b6000600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6000600a54905090565b6000600b54905090565b6000600754905090565b6000610c6b826000610f0b90919063ffffffff16565b9050919050565b6000600c54905090565b610c84610bdf565b610c8d57600080fd5b610c9681611051565b50565b610ca233610e60565b565b610cac610bdf565b610cb557600080fd5b610cbe81611092565b50565b6000610ccb610a6b565b610cd85760009050610cf1565b600b544210610ceb57600c549050610cf1565b600a5490505b90565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610d2782610a44565b610d3057600080fd5b610d3a828261118c565b5050565b600080610d49610cc1565b9050610d5e83826111ab90919063ffffffff16565b915050919050565b600080828401905083811015610d7b57600080fd5b8091505092915050565b610d8f82826111e5565b5050565b5050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f19350505050158015610dff573d6000803e3d6000fd5b50565b5050565b610e1a81600161123690919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fee1504a83b6d4a361f4c1dc78ab59bfa30d6a3b6612c403e86bb01ef2984295f60405160405180910390a250565b610e748160016112e290919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f270d9b30cf5b0793bbfd54c9d5b94aeb49462b8148399000265144a8722da6b660405160405180910390a250565b81600b8190555080600c819055507f4e7e6d92843fbe2fd0f27456b98f02069ee4d44de6a198b7db55f5bfd76fe9248282604051808381526020018281526020019250505060405180910390a15050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610f4657600080fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b610fb18160006112e290919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f0a8eb35e5ca14b3d6f28e4abf2f128dbab231a58b56e89beb5d636115001e16560405160405180910390a250565b61100b81600061123690919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f22380c05984257a1cb900161c713dd71d39e74820f1aea43bd3f1bdd2096129960405160405180910390a250565b80600a819055507f2d5f5ea15ed32044e5f601470ede06bf73cf3c8983ebcfd001fc563fcec0fc9d816040518082815260200191505060405180910390a150565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156110cc57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b611194610a6b565b61119d57600080fd5b6111a7828261138d565b5050565b6000808314156111be57600090506111df565b60008284029050828482816111cf57fe5b04146111da57600080fd5b809150505b92915050565b6112328282600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166113d99092919063ffffffff16565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561127057600080fd5b61127a8282610f0b565b1561128457600080fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561131c57600080fd5b6113268282610f0b565b61132f57600080fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156113c757600080fd5b60008114156113d557600080fd5b5050565b8273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561147c57600080fd5b505af1158015611490573d6000803e3d6000fd5b505050506040513d60208110156114a657600080fd5b81019080805190602001909291905050506114c057600080fd5b50505056fea165627a7a723058200ea28275f567bf04191c6b94bb6df831ffc711c61ab227475008a1813f00a2ee0029",
  "sourceMap": "436:1035:1:-;;;543:734;8:9:-1;5:2;;;30:1;27;20:12;5:2;543:734:1;;;;;;;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;543:734:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1064:4;1070:5;1013:11;1026;965:4;971:15;988:5;433:30:7;452:10;433:18;;;:30;;;:::i;:::-;576:1:22;560:13;:17;;;;2380:1:9;2373:4;:8;2365:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2422:1;2404:20;;:6;:20;;;;2396:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2473:1;2447:28;;2455:5;2447:28;;;;2439:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2499:4;2491:5;:12;;;;2523:6;2513:7;;:16;;;;;;;;;;;;;;;;;;2548:5;2539:6;;:14;;;;;;;;;;;;;;;;;;2283:277;;;806:15:11;791:11;:30;;783:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;858:11;844;:25;836:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;901:11;886:12;:26;;;;937:11;922:12;:26;;;;657:298;;524:10:15;515:6;;:19;;;;;;;;;;;;;;;;;;582:6;;;;;;;;;;;549:40;;578:1;549:40;;;;;;;;;;;;1327:1:0;1313:11;:15;1305:24;;;;;;1350:11;1335:12;:26;;;;1367:24;1385:5;1367:17;;;:24;;;:::i;:::-;1224:172;;1247:24:1;1265:5;1247:17;;;:24;;;:::i;:::-;543:734;;;;;;436:1035;;923:143:7;987:29;1008:7;987:16;:20;;;;;;:29;;;;;:::i;:::-;1051:7;1031:28;;;;;;;;;;;;923:143;:::o;1655:107:15:-;863:9;:7;;;:9;;;:::i;:::-;855:18;;;;;;1727:28;1746:8;1727:18;;;:28;;;:::i;:::-;1655:107;:::o;706:114:7:-;524:28;541:10;524:16;;;:28;;;:::i;:::-;516:37;;;;;;786:27;805:7;786:18;;;:27;;;:::i;:::-;706:114;:::o;259:181:5:-;354:1;335:21;;:7;:21;;;;327:30;;;;;;376:18;380:4;386:7;376:3;;;:18;;;:::i;:::-;375:19;367:28;;;;;;429:4;406;:11;;:20;418:7;406:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;259:181;;:::o;979:90:15:-;1019:4;1056:6;;;;;;;;;;;1042:20;;:10;:20;;;1035:27;;979:90;:::o;1906:183::-;1999:1;1979:22;;:8;:22;;;;1971:31;;;;;;2046:8;2017:38;;2038:6;;;;;;;;;;;2017:38;;;;;;;;;;;;2074:8;2065:6;;:17;;;;;;;;;;;;;;;;;;1906:183;:::o;577:123:7:-;641:4;664:29;685:7;664:16;:20;;;;;;:29;;;;;:::i;:::-;657:36;;577:123;;;:::o;786:162:5:-;858:4;901:1;882:21;;:7;:21;;;;874:30;;;;;;921:4;:11;;:20;933:7;921:20;;;;;;;;;;;;;;;;;;;;;;;;;914:27;;786:162;;;;:::o;436:1035:1:-;;;;;;;",
  "deployedSourceMap": "436:1035:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2887:21:9;2897:10;2887:9;:21::i;:::-;436:1035:1;848:108:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;848:108:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;848:108:8;;;;;;;;;;;;;;;;;;;:::i;:::-;;1701:156:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1701:156:11;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;962:114:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;962:114:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;962:114:8;;;;;;;;;;;;;;;;;;;:::i;:::-;;1283:185:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1283:185:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1283:185:1;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1283:185:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1283:185:1;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;1283:185:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1283:185:1;;;;;;;;;;;;;;;:::i;:::-;;2574:153:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2574:153:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2574:153:0;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1542:65;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1542:65:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;725:117:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;725:117:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;725:117:8;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3436:85:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3436:85:9;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1348:189:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1348:189:11;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1174:89;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1174:89:11;;;:::i;:::-;;;;;;;;;;;;;;;;;;;826:91:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;826:91:7;;;:::i;:::-;;3126:87:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3126:87:9;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1347:137:15;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1347:137:15;;;:::i;:::-;;706:114:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;706:114:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;706:114:7;;;;;;;;;;;;;;;;;;;:::i;:::-;;659:77:15;;8:9:-1;5:2;;;30:1;27;20:12;5:2;659:77:15;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;979:90;;8:9:-1;5:2;;;30:1;27;20:12;5:2;979:90:15;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1671:83:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1671:83:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1819:95;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1819:95:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1020:89:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1020:89:11;;;:::i;:::-;;;;;;;;;;;;;;;;;;;577:123:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;577:123:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;577:123:7;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1975:87:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1975:87:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2153:113;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2153:113:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2153:113:0;;;;;;;;;;;;;;;;;:::i;:::-;;1082:85:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1082:85:8;;;:::i;:::-;;3778:603:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3778:603:9;;;;;;;;;;;;;;;;;;;:::i;:::-;;1655:107:15;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1655:107:15;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1655:107:15;;;;;;;;;;;;;;;;;;;:::i;:::-;;3156:213:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3156:213:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2974:76:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2974:76:9;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3778:603;1010:1:22;993:13;;:18;;;;;;;;;;;1021:20;1044:13;;1021:36;;3856:17:9;3876:9;3856:29;;3895:44;3916:11;3929:9;3895:20;:44::i;:::-;3998:14;4015:26;4031:9;4015:15;:26::i;:::-;3998:43;;4089:25;4104:9;4089:10;;:14;;:25;;;;:::i;:::-;4076:10;:38;;;;4125:37;4142:11;4155:6;4125:16;:37::i;:::-;4205:11;4177:59;;4193:10;4177:59;;;4218:9;4229:6;4177:59;;;;;;;;;;;;;;;;;;;;;;;;4247:46;4270:11;4283:9;4247:22;:46::i;:::-;4304:15;:13;:15::i;:::-;4329:45;4351:11;4364:9;4329:21;:45::i;:::-;1067:1:22;;1102:13;;1086:12;:29;1078:38;;;;;;3778:603:9;;:::o;848:108:8:-;524:28:7;541:10;524:16;:28::i;:::-;516:37;;;;;;925:24:8;941:7;925:15;:24::i;:::-;848:108;:::o;1701:156:11:-;1743:4;1838:12;;1820:15;:30;1813:37;;1701:156;:::o;962:114:8:-;524:28:7;541:10;524:16;:28::i;:::-;516:37;;;;;;1042:27:8;1061:7;1042:18;:27::i;:::-;962:114;:::o;1283:185:1:-;524:28:7;541:10;524:16;:28::i;:::-;516:37;;;;;;1380:6:1;1389:1;1380:10;;1375:88;1396:8;:15;1392:1;:19;1375:88;;;1427:28;1443:8;1452:1;1443:11;;;;;;;;;;;;;;1427:15;:28::i;:::-;1413:3;;;;;;;1375:88;;;;1283:185;:::o;2574:153:0:-;863:9:15;:7;:9::i;:::-;855:18;;;;;;2672:50:0;2697:13;2712:9;2672:24;:50::i;:::-;2574:153;;:::o;1542:65::-;1579:7;1594:8;;;725:117:8;786:4;809:26;827:7;809:13;:17;;:26;;;;:::i;:::-;802:33;;725:117;;;:::o;3436:85:9:-;3478:7;3504:10;;3497:17;;3436:85;:::o;1348:189:11:-;1387:4;1483:12;;1464:15;:31;;:66;;;;;1518:12;;1499:15;:31;;1464:66;1457:73;;1348:189;:::o;1174:89::-;1218:7;1244:12;;1237:19;;1174:89;:::o;826:91:7:-;877:33;899:10;877:21;:33::i;:::-;826:91::o;3126:87:9:-;3165:15;3199:7;;;;;;;;;;;3192:14;;3126:87;:::o;1347:137:15:-;863:9;:7;:9::i;:::-;855:18;;;;;;1445:1;1408:40;;1429:6;;;;;;;;;;;1408:40;;;;;;;;;;;;1475:1;1458:6;;:19;;;;;;;;;;;;;;;;;;1347:137::o;706:114:7:-;524:28;541:10;524:16;:28::i;:::-;516:37;;;;;;786:27;805:7;786:18;:27::i;:::-;706:114;:::o;659:77:15:-;697:7;723:6;;;;;;;;;;;716:13;;659:77;:::o;979:90::-;1019:4;1056:6;;;;;;;;;;;1042:20;;:10;:20;;;1035:27;;979:90;:::o;1671:83:0:-;1715:7;1737:12;;1730:19;;1671:83;:::o;1819:95::-;1869:7;1891:18;;1884:25;;1819:95;:::o;1020:89:11:-;1064:7;1090:12;;1083:19;;1020:89;:::o;577:123:7:-;641:4;664:29;685:7;664:16;:20;;:29;;;;:::i;:::-;657:36;;577:123;;;:::o;1975:87:0:-;2021:7;2043:14;;2036:21;;1975:87;:::o;2153:113::-;863:9:15;:7;:9::i;:::-;855:18;;;;;;2227:34:0;2246:14;2227:18;:34::i;:::-;2153:113;:::o;1082:85:8:-;1130:30;1149:10;1130:18;:30::i;:::-;1082:85::o;1655:107:15:-;863:9;:7;:9::i;:::-;855:18;;;;;;1727:28;1746:8;1727:18;:28::i;:::-;1655:107;:::o;3156:213:0:-;3203:7;3223:8;:6;:8::i;:::-;3218:38;;3248:1;3241:8;;;;3218:38;3284:18;;3265:15;:37;3261:79;;3319:14;;3312:21;;;;3261:79;3352:12;;3345:19;;3156:213;;:::o;2974:76:9:-;3012:6;3037;;;;;;;;;;;3030:13;;2974:76;:::o;535:201:12:-;639:27;653:12;639:13;:27::i;:::-;631:36;;;;;;677:52;704:12;718:10;677:26;:52::i;:::-;535:201;;:::o;3595:164:0:-;3662:7;3677:19;3699:16;:14;:16::i;:::-;3677:38;;3728:26;3744:9;3728:11;:15;;:26;;;;:::i;:::-;3721:33;;;3595:164;;;:::o;1431:145:14:-;1489:7;1508:9;1524:1;1520;:5;1508:17;;1548:1;1543;:6;;1535:15;;;;;;1568:1;1561:8;;;1431:145;;;;:::o;6218:134:9:-;6305:40;6320:11;6333;6305:14;:40::i;:::-;6218:134;;:::o;6622:145::-;;;:::o;7223:78::-;7267:7;;;;;;;;;;;:16;;:27;7284:9;7267:27;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7267:27:9;7223:78::o;5386:149::-;;;:::o;1173:134:8:-;1234:26;1252:7;1234:13;:17;;:26;;;;:::i;:::-;1292:7;1275:25;;;;;;;;;;;;1173:134;:::o;1313:142::-;1377:29;1398:7;1377:13;:20;;:29;;;;:::i;:::-;1440:7;1421:27;;;;;;;;;;;;1313:142;:::o;2731:223:0:-;2843:13;2822:18;:34;;;;2879:9;2862:14;:26;;;;2899:50;2924:13;2939:9;2899:50;;;;;;;;;;;;;;;;;;;;;;;;2731:223;;:::o;786:162:5:-;858:4;901:1;882:21;;:7;:21;;;;874:30;;;;;;921:4;:11;;:20;933:7;921:20;;;;;;;;;;;;;;;;;;;;;;;;;914:27;;786:162;;;;:::o;1072:151:7:-;1139:32;1163:7;1139:16;:23;;:32;;;;:::i;:::-;1208:7;1186:30;;;;;;;;;;;;1072:151;:::o;923:143::-;987:29;1008:7;987:16;:20;;:29;;;;:::i;:::-;1051:7;1031:28;;;;;;;;;;;;923:143;:::o;2270:146:0:-;2352:14;2337:12;:29;;;;2377:34;2396:14;2377:34;;;;;;;;;;;;;;;;;;2270:146;:::o;1906:183:15:-;1999:1;1979:22;;:8;:22;;;;1971:31;;;;;;2046:8;2017:38;;2038:6;;;;;;;;;;;2017:38;;;;;;;;;;;;2074:8;2065:6;;:17;;;;;;;;;;;;;;;;;;1906:183;:::o;2049:165:11:-;442:8;:6;:8::i;:::-;434:17;;;;;;2157:50;2184:11;2197:9;2157:26;:50::i;:::-;2049:165;;:::o;229:421:14:-;287:7;532:1;527;:6;523:45;;;556:1;549:8;;;;523:45;578:9;594:1;590;:5;578:17;;622:1;617;613;:5;;;;;;:10;605:19;;;;;;642:1;635:8;;;229:421;;;;;:::o;5815:137:9:-;5900:45;5920:11;5933;5900:6;;;;;;;;;;;:19;;;;:45;;;;;:::i;:::-;5815:137;;:::o;259:181:5:-;354:1;335:21;;:7;:21;;;;327:30;;;;;;376:18;380:4;386:7;376:3;:18::i;:::-;375:19;367:28;;;;;;429:4;406;:11;;:20;418:7;406:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;259:181;;:::o;514:184::-;612:1;593:21;;:7;:21;;;;585:30;;;;;;633:18;637:4;643:7;633:3;:18::i;:::-;625:27;;;;;;686:5;663:4;:11;;:20;675:7;663:20;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;514:184;;:::o;4923:168:9:-;5048:1;5025:25;;:11;:25;;;;5017:34;;;;;;5082:1;5069:9;:14;;5061:23;;;;;;4923:168;;:::o;409:123:21:-;499:5;:14;;;514:2;518:5;499:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;499:25:21;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;499:25:21;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;499:25:21;;;;;;;;;;;;;;;;491:34;;;;;;409:123;;;:::o",
  "source": "pragma solidity ^0.5.0;\r\n\r\nimport \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\";\r\nimport \"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\";\r\nimport \"openzeppelin-solidity/contracts/crowdsale/validation/TimedCrowdsale.sol\";\r\nimport \"openzeppelin-solidity/contracts/crowdsale/validation/WhitelistCrowdsale.sol\";\r\nimport \"openzeppelin-solidity/contracts/crowdsale/Crowdsale.sol\";\r\nimport \"./AsureBonusesCrowdsale.sol\";\r\n\r\ncontract AsureCrowdsale is Crowdsale, TimedCrowdsale, WhitelistCrowdsale, AsureBonusesCrowdsale {\r\n  //\r\n  constructor(\r\n    uint256 rate,                     // rate, in Asure Tokens\r\n    address payable owner,            // owner\r\n    address payable crowdsaleWallet,  // wallet to send Ether\r\n    IERC20 token,                     // the token\r\n    uint256 openingTime,              // opening time in unix epoch seconds\r\n    uint256 closingTime               // closing time in unix epoch seconds\r\n  )\r\n  public\r\n  Crowdsale(rate, crowdsaleWallet, token)\r\n  TimedCrowdsale(openingTime, closingTime)\r\n  AsureBonusesCrowdsale(rate, owner)\r\n  {\r\n    // nice, we just created a crowdsale that's only open\r\n    // for a certain amount of time\r\n    // and stops accepting contributions once it reaches `cap`\r\n    addWhitelistAdmin(owner);\r\n  }\r\n\r\n  function addWhitelistedAccounts(address[] memory accounts) public onlyWhitelistAdmin {\r\n    for (uint i = 0; i < accounts.length; i++) {\r\n      _addWhitelisted(accounts[i]);\r\n    }\r\n  }\r\n}\r\n",
  "sourcePath": "C:\\git\\crowdsale\\packages\\crowdsale\\contracts\\AsureCrowdsale.sol",
  "ast": {
    "absolutePath": "/C/git/crowdsale/packages/crowdsale/contracts/AsureCrowdsale.sol",
    "exportedSymbols": {
      "AsureCrowdsale": [
        269
      ]
    },
    "id": 270,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 193,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "id": 194,
        "nodeType": "ImportDirective",
        "scope": 270,
        "sourceUnit": 2575,
        "src": "27:63:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "id": 195,
        "nodeType": "ImportDirective",
        "scope": 270,
        "sourceUnit": 2761,
        "src": "92:64:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/crowdsale/validation/TimedCrowdsale.sol",
        "file": "openzeppelin-solidity/contracts/crowdsale/validation/TimedCrowdsale.sol",
        "id": 196,
        "nodeType": "ImportDirective",
        "scope": 270,
        "sourceUnit": 1502,
        "src": "158:81:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/crowdsale/validation/WhitelistCrowdsale.sol",
        "file": "openzeppelin-solidity/contracts/crowdsale/validation/WhitelistCrowdsale.sol",
        "id": 197,
        "nodeType": "ImportDirective",
        "scope": 270,
        "sourceUnit": 1532,
        "src": "241:85:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/crowdsale/Crowdsale.sol",
        "file": "openzeppelin-solidity/contracts/crowdsale/Crowdsale.sol",
        "id": 198,
        "nodeType": "ImportDirective",
        "scope": 270,
        "sourceUnit": 1315,
        "src": "328:65:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/git/crowdsale/packages/crowdsale/contracts/AsureBonusesCrowdsale.sol",
        "file": "./AsureBonusesCrowdsale.sol",
        "id": 199,
        "nodeType": "ImportDirective",
        "scope": 270,
        "sourceUnit": 192,
        "src": "395:37:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 200,
              "name": "Crowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1314,
              "src": "463:9:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Crowdsale_$1314",
                "typeString": "contract Crowdsale"
              }
            },
            "id": 201,
            "nodeType": "InheritanceSpecifier",
            "src": "463:9:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 202,
              "name": "TimedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1501,
              "src": "474:14:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TimedCrowdsale_$1501",
                "typeString": "contract TimedCrowdsale"
              }
            },
            "id": 203,
            "nodeType": "InheritanceSpecifier",
            "src": "474:14:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 204,
              "name": "WhitelistCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1531,
              "src": "490:18:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_WhitelistCrowdsale_$1531",
                "typeString": "contract WhitelistCrowdsale"
              }
            },
            "id": 205,
            "nodeType": "InheritanceSpecifier",
            "src": "490:18:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 206,
              "name": "AsureBonusesCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 191,
              "src": "510:21:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AsureBonusesCrowdsale_$191",
                "typeString": "contract AsureBonusesCrowdsale"
              }
            },
            "id": 207,
            "nodeType": "InheritanceSpecifier",
            "src": "510:21:1"
          }
        ],
        "contractDependencies": [
          191,
          935,
          1044,
          1314,
          1501,
          1531,
          2142,
          2935
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 269,
        "linearizedBaseContracts": [
          269,
          191,
          2142,
          1531,
          1501,
          1314,
          2935,
          1044,
          935
        ],
        "name": "AsureCrowdsale",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 239,
              "nodeType": "Block",
              "src": "1080:197:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 236,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 211,
                        "src": "1265:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 235,
                      "name": "addWhitelistAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 893,
                      "src": "1247:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1247:24:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 238,
                  "nodeType": "ExpressionStatement",
                  "src": "1247:24:1"
                }
              ]
            },
            "documentation": null,
            "id": 240,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 222,
                    "name": "rate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 209,
                    "src": "965:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 223,
                    "name": "crowdsaleWallet",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 213,
                    "src": "971:15:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 224,
                    "name": "token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 215,
                    "src": "988:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$2760",
                      "typeString": "contract IERC20"
                    }
                  }
                ],
                "id": 225,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 221,
                  "name": "Crowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1314,
                  "src": "955:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Crowdsale_$1314_$",
                    "typeString": "type(contract Crowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "955:39:1"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 227,
                    "name": "openingTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 217,
                    "src": "1013:11:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 228,
                    "name": "closingTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 219,
                    "src": "1026:11:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 229,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 226,
                  "name": "TimedCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1501,
                  "src": "998:14:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_TimedCrowdsale_$1501_$",
                    "typeString": "type(contract TimedCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "998:40:1"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 231,
                    "name": "rate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 209,
                    "src": "1064:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 232,
                    "name": "owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 211,
                    "src": "1070:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  }
                ],
                "id": 233,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 230,
                  "name": "AsureBonusesCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 191,
                  "src": "1042:21:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_AsureBonusesCrowdsale_$191_$",
                    "typeString": "type(contract AsureBonusesCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1042:34:1"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 220,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 209,
                  "name": "rate",
                  "nodeType": "VariableDeclaration",
                  "scope": 240,
                  "src": "561:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 208,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "561:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 211,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 240,
                  "src": "625:21:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 210,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "625:15:1",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 213,
                  "name": "crowdsaleWallet",
                  "nodeType": "VariableDeclaration",
                  "scope": 240,
                  "src": "673:31:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 212,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "673:15:1",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 215,
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 240,
                  "src": "736:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$2760",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 214,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2760,
                    "src": "736:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$2760",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 217,
                  "name": "openingTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 240,
                  "src": "788:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 216,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "788:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 219,
                  "name": "closingTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 240,
                  "src": "865:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 218,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "865:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "554:387:1"
            },
            "returnParameters": {
              "id": 234,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1080:0:1"
            },
            "scope": 269,
            "src": "543:734:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 267,
              "nodeType": "Block",
              "src": "1368:100:1",
              "statements": [
                {
                  "body": {
                    "id": 265,
                    "nodeType": "Block",
                    "src": "1418:45:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 260,
                                "name": "accounts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 243,
                                "src": "1443:8:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 262,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 261,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 249,
                                "src": "1452:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1443:11:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 259,
                            "name": "_addWhitelisted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1027,
                            "src": "1427:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 263,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1427:28:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 264,
                        "nodeType": "ExpressionStatement",
                        "src": "1427:28:1"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 252,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 249,
                      "src": "1392:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 253,
                        "name": "accounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 243,
                        "src": "1396:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 254,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1396:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1392:19:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 266,
                  "initializationExpression": {
                    "assignments": [
                      249
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 249,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 266,
                        "src": "1380:6:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 248,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1380:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 251,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 250,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1389:1:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1380:10:1"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 257,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1413:3:1",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 256,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 249,
                        "src": "1413:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 258,
                    "nodeType": "ExpressionStatement",
                    "src": "1413:3:1"
                  },
                  "nodeType": "ForStatement",
                  "src": "1375:88:1"
                }
              ]
            },
            "documentation": null,
            "id": 268,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 246,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 245,
                  "name": "onlyWhitelistAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 868,
                  "src": "1349:18:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1349:18:1"
              }
            ],
            "name": "addWhitelistedAccounts",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 244,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 243,
                  "name": "accounts",
                  "nodeType": "VariableDeclaration",
                  "scope": 268,
                  "src": "1315:25:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 241,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1315:7:1",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 242,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1315:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1314:27:1"
            },
            "returnParameters": {
              "id": 247,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1368:0:1"
            },
            "scope": 269,
            "src": "1283:185:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 270,
        "src": "436:1035:1"
      }
    ],
    "src": "0:1473:1"
  },
  "legacyAST": {
    "absolutePath": "/C/git/crowdsale/packages/crowdsale/contracts/AsureCrowdsale.sol",
    "exportedSymbols": {
      "AsureCrowdsale": [
        269
      ]
    },
    "id": 270,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 193,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "id": 194,
        "nodeType": "ImportDirective",
        "scope": 270,
        "sourceUnit": 2575,
        "src": "27:63:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "id": 195,
        "nodeType": "ImportDirective",
        "scope": 270,
        "sourceUnit": 2761,
        "src": "92:64:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/crowdsale/validation/TimedCrowdsale.sol",
        "file": "openzeppelin-solidity/contracts/crowdsale/validation/TimedCrowdsale.sol",
        "id": 196,
        "nodeType": "ImportDirective",
        "scope": 270,
        "sourceUnit": 1502,
        "src": "158:81:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/crowdsale/validation/WhitelistCrowdsale.sol",
        "file": "openzeppelin-solidity/contracts/crowdsale/validation/WhitelistCrowdsale.sol",
        "id": 197,
        "nodeType": "ImportDirective",
        "scope": 270,
        "sourceUnit": 1532,
        "src": "241:85:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/crowdsale/Crowdsale.sol",
        "file": "openzeppelin-solidity/contracts/crowdsale/Crowdsale.sol",
        "id": 198,
        "nodeType": "ImportDirective",
        "scope": 270,
        "sourceUnit": 1315,
        "src": "328:65:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/git/crowdsale/packages/crowdsale/contracts/AsureBonusesCrowdsale.sol",
        "file": "./AsureBonusesCrowdsale.sol",
        "id": 199,
        "nodeType": "ImportDirective",
        "scope": 270,
        "sourceUnit": 192,
        "src": "395:37:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 200,
              "name": "Crowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1314,
              "src": "463:9:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Crowdsale_$1314",
                "typeString": "contract Crowdsale"
              }
            },
            "id": 201,
            "nodeType": "InheritanceSpecifier",
            "src": "463:9:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 202,
              "name": "TimedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1501,
              "src": "474:14:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TimedCrowdsale_$1501",
                "typeString": "contract TimedCrowdsale"
              }
            },
            "id": 203,
            "nodeType": "InheritanceSpecifier",
            "src": "474:14:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 204,
              "name": "WhitelistCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1531,
              "src": "490:18:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_WhitelistCrowdsale_$1531",
                "typeString": "contract WhitelistCrowdsale"
              }
            },
            "id": 205,
            "nodeType": "InheritanceSpecifier",
            "src": "490:18:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 206,
              "name": "AsureBonusesCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 191,
              "src": "510:21:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AsureBonusesCrowdsale_$191",
                "typeString": "contract AsureBonusesCrowdsale"
              }
            },
            "id": 207,
            "nodeType": "InheritanceSpecifier",
            "src": "510:21:1"
          }
        ],
        "contractDependencies": [
          191,
          935,
          1044,
          1314,
          1501,
          1531,
          2142,
          2935
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 269,
        "linearizedBaseContracts": [
          269,
          191,
          2142,
          1531,
          1501,
          1314,
          2935,
          1044,
          935
        ],
        "name": "AsureCrowdsale",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 239,
              "nodeType": "Block",
              "src": "1080:197:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 236,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 211,
                        "src": "1265:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 235,
                      "name": "addWhitelistAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 893,
                      "src": "1247:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1247:24:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 238,
                  "nodeType": "ExpressionStatement",
                  "src": "1247:24:1"
                }
              ]
            },
            "documentation": null,
            "id": 240,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 222,
                    "name": "rate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 209,
                    "src": "965:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 223,
                    "name": "crowdsaleWallet",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 213,
                    "src": "971:15:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 224,
                    "name": "token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 215,
                    "src": "988:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$2760",
                      "typeString": "contract IERC20"
                    }
                  }
                ],
                "id": 225,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 221,
                  "name": "Crowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1314,
                  "src": "955:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Crowdsale_$1314_$",
                    "typeString": "type(contract Crowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "955:39:1"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 227,
                    "name": "openingTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 217,
                    "src": "1013:11:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 228,
                    "name": "closingTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 219,
                    "src": "1026:11:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 229,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 226,
                  "name": "TimedCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1501,
                  "src": "998:14:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_TimedCrowdsale_$1501_$",
                    "typeString": "type(contract TimedCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "998:40:1"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 231,
                    "name": "rate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 209,
                    "src": "1064:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 232,
                    "name": "owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 211,
                    "src": "1070:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  }
                ],
                "id": 233,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 230,
                  "name": "AsureBonusesCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 191,
                  "src": "1042:21:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_AsureBonusesCrowdsale_$191_$",
                    "typeString": "type(contract AsureBonusesCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1042:34:1"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 220,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 209,
                  "name": "rate",
                  "nodeType": "VariableDeclaration",
                  "scope": 240,
                  "src": "561:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 208,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "561:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 211,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 240,
                  "src": "625:21:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 210,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "625:15:1",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 213,
                  "name": "crowdsaleWallet",
                  "nodeType": "VariableDeclaration",
                  "scope": 240,
                  "src": "673:31:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 212,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "673:15:1",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 215,
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 240,
                  "src": "736:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$2760",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 214,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2760,
                    "src": "736:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$2760",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 217,
                  "name": "openingTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 240,
                  "src": "788:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 216,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "788:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 219,
                  "name": "closingTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 240,
                  "src": "865:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 218,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "865:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "554:387:1"
            },
            "returnParameters": {
              "id": 234,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1080:0:1"
            },
            "scope": 269,
            "src": "543:734:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 267,
              "nodeType": "Block",
              "src": "1368:100:1",
              "statements": [
                {
                  "body": {
                    "id": 265,
                    "nodeType": "Block",
                    "src": "1418:45:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 260,
                                "name": "accounts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 243,
                                "src": "1443:8:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 262,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 261,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 249,
                                "src": "1452:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1443:11:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 259,
                            "name": "_addWhitelisted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1027,
                            "src": "1427:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 263,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1427:28:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 264,
                        "nodeType": "ExpressionStatement",
                        "src": "1427:28:1"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 252,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 249,
                      "src": "1392:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 253,
                        "name": "accounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 243,
                        "src": "1396:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 254,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1396:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1392:19:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 266,
                  "initializationExpression": {
                    "assignments": [
                      249
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 249,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 266,
                        "src": "1380:6:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 248,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1380:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 251,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 250,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1389:1:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1380:10:1"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 257,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1413:3:1",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 256,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 249,
                        "src": "1413:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 258,
                    "nodeType": "ExpressionStatement",
                    "src": "1413:3:1"
                  },
                  "nodeType": "ForStatement",
                  "src": "1375:88:1"
                }
              ]
            },
            "documentation": null,
            "id": 268,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 246,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 245,
                  "name": "onlyWhitelistAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 868,
                  "src": "1349:18:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1349:18:1"
              }
            ],
            "name": "addWhitelistedAccounts",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 244,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 243,
                  "name": "accounts",
                  "nodeType": "VariableDeclaration",
                  "scope": 268,
                  "src": "1315:25:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 241,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1315:7:1",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 242,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1315:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1314:27:1"
            },
            "returnParameters": {
              "id": 247,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1368:0:1"
            },
            "scope": 269,
            "src": "1283:185:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 270,
        "src": "436:1035:1"
      }
    ],
    "src": "0:1473:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.6+commit.b259423e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.2",
  "updatedAt": "2019-03-19T11:37:29.341Z",
  "devdoc": {
    "methods": {
      "buyTokens(address)": {
        "details": "low level token purchase ***DO NOT OVERRIDE*** This function has a non-reentrancy guard, so it shouldn't be called by another `nonReentrant` function.",
        "params": {
          "beneficiary": "Recipient of the token purchase"
        }
      },
      "closingTime()": {
        "return": "the crowdsale closing time."
      },
      "getCurrentRate()": {
        "details": "Returns the rate of tokens per wei at the present time. Note that, rate can be changed by the owner",
        "return": "The number of tokens a buyer gets per wei at a given time"
      },
      "hasClosed()": {
        "details": "Checks whether the period in which the crowdsale is open has already elapsed.",
        "return": "Whether crowdsale period has elapsed"
      },
      "initialRate()": {
        "return": "the initial rate of the crowdsale."
      },
      "isOpen()": {
        "return": "true if the crowdsale is open, false otherwise."
      },
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract."
      },
      "nextBonusRate()": {
        "return": "the next Rate of the crowdsale."
      },
      "nextBonusTimeslot()": {
        "return": "the next Timeslot of the crowdsale."
      },
      "openingTime()": {
        "return": "the crowdsale opening time."
      },
      "owner()": {
        "return": "the address of the owner."
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract."
      },
      "token()": {
        "return": "the token being sold."
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      },
      "updateBonusTimeslotRate(uint256,uint256)": {
        "details": "Update timeslot and rate for the next Timeslot",
        "params": {
          "bonusRate": "rate for the timeslot",
          "bonusTimeslot": "next time slot"
        }
      },
      "updateInitialRate(uint256)": {
        "details": "Update initial Rate",
        "params": {
          "newInitialRate": "set new initial Rate"
        }
      },
      "wallet()": {
        "return": "the address where funds are collected."
      },
      "weiRaised()": {
        "return": "the amount of wei raised."
      }
    }
  },
  "userdoc": {
    "methods": {
      "rate()": {
        "notice": "The base rate function is overridden to revert, since this crowdsale doens't use it, and all calls to it are a mistake."
      },
      "renounceOwnership()": {
        "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      }
    }
  }
}