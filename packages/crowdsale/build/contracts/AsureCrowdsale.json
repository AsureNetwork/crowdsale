{
  "contractName": "AsureCrowdsale",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addWhitelisted",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "hasClosed",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "removeWhitelisted",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "bonusTimeslot",
          "type": "uint256"
        },
        {
          "name": "bonusRate",
          "type": "uint256"
        }
      ],
      "name": "updateBonusTimeslotRate",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "rate",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isWhitelisted",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "weiRaised",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOpen",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "closingTime",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceWhitelistAdmin",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "wallet",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addWhitelistAdmin",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "initialRate",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "nextBonusTimeslot",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "openingTime",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isWhitelistAdmin",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "nextBonusRate",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newInitialRate",
          "type": "uint256"
        }
      ],
      "name": "updateInitialRate",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceWhitelisted",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "beneficiary",
          "type": "address"
        }
      ],
      "name": "buyTokens",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getCurrentRate",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "rate",
          "type": "uint256"
        },
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "crowdsaleWallet",
          "type": "address"
        },
        {
          "name": "token",
          "type": "address"
        },
        {
          "name": "openingTime",
          "type": "uint256"
        },
        {
          "name": "closingTime",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "nextBonusTimeslot",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "nextBonusRate",
          "type": "uint256"
        }
      ],
      "name": "BonusTimeslotRateUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "initialRate",
          "type": "uint256"
        }
      ],
      "name": "InitialRateUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "purchaser",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokensPurchased",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "WhitelistedAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "WhitelistedRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "WhitelistAdminAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "WhitelistAdminRemoved",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "accounts",
          "type": "address[]"
        }
      ],
      "name": "addWhitelistedAccounts",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "burn",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x60806040523480156200001157600080fd5b5060405160c08062001da6833981018060405260c08110156200003357600080fd5b81019080805190602001909291908051906020019092919080519060200190929190805190602001909291908051906020019092919080519060200190929190505050858583838988886200009733620002f6640100000000026401000000009004565b600160028190555060008311620000ad57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415620000e857600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156200012357600080fd5b8260058190555081600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505042821015620001bd57600080fd5b818111620001ca57600080fd5b8160078190555080600881905550505033600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008211620002a657600080fd5b81600a8190555081600c81905550620002ce8162000360640100000000026401000000009004565b5050620002ea85620003a0640100000000026401000000009004565b505050505050620006b3565b6200031a816000620003e16401000000000262001428179091906401000000009004565b8073ffffffffffffffffffffffffffffffffffffffff167f22380c05984257a1cb900161c713dd71d39e74820f1aea43bd3f1bdd2096129960405160405180910390a250565b62000379620004a0640100000000026401000000009004565b6200038357600080fd5b6200039d81620004f8640100000000026401000000009004565b50565b620003ba33620005f3640100000000026401000000009004565b620003c457600080fd5b620003de81620002f6640100000000026401000000009004565b50565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156200041c57600080fd5b62000437828262000620640100000000026401000000009004565b156200044257600080fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6000600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156200053357600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000620006198260006200062064010000000002620010fd179091906401000000009004565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156200065c57600080fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6116e380620006c36000396000f3fe6080604052600436106101d4576000357c0100000000000000000000000000000000000000000000000000000000900480637362d9c811610109578063c404c721116100a7578063ec8ac4d811610081578063ec8ac4d8146107ad578063f2fde38b146107f1578063f7fb07b014610842578063fc0c546a1461086d576101d4565b8063c404c72114610730578063d1c6f4481461075b578063d6cd947314610796576101d4565b80639e51051f116100e35780639e51051f14610646578063a02d856314610671578063b7a8807c1461069c578063bb5f747b146106c7576101d4565b80637362d9c81461056f5780638da5cb5b146105c05780638f32d59b14610617576101d4565b80634042b66f116101765780634b6753bc116101505780634b6753bc146104bf5780634c5a628c146104ea578063521eb27314610501578063715018a614610558576101d4565b80634042b66f1461044e57806344df8e701461047957806347535d7b14610490576101d4565b80632a4bc321116101b25780632a4bc321146102b05780632aa3ae9c146103755780632c4e722e146103ba5780633af32abf146103e5576101d4565b806310154bad146101df5780631515bc2b14610230578063291d95491461025f575b6101dd336108c4565b005b3480156101eb57600080fd5b5061022e6004803603602081101561020257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506109ba565b005b34801561023c57600080fd5b506102456109d8565b604051808215151515815260200191505060405180910390f35b34801561026b57600080fd5b506102ae6004803603602081101561028257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506109e4565b005b3480156102bc57600080fd5b50610373600480360360208110156102d357600080fd5b81019080803590602001906401000000008111156102f057600080fd5b82018360208201111561030257600080fd5b8035906020019184602083028401116401000000008311171561032457600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050509192919290505050610a02565b005b34801561038157600080fd5b506103b86004803603604081101561039857600080fd5b810190808035906020019092919080359060200190929190505050610a50565b005b3480156103c657600080fd5b506103cf610a92565b6040518082815260200191505060405180910390f35b3480156103f157600080fd5b506104346004803603602081101561040857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a99565b604051808215151515815260200191505060405180910390f35b34801561045a57600080fd5b50610463610ab6565b6040518082815260200191505060405180910390f35b34801561048557600080fd5b5061048e610ac0565b005b34801561049c57600080fd5b506104a5610c3a565b604051808215151515815260200191505060405180910390f35b3480156104cb57600080fd5b506104d4610c55565b6040518082815260200191505060405180910390f35b3480156104f657600080fd5b506104ff610c5f565b005b34801561050d57600080fd5b50610516610c6a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561056457600080fd5b5061056d610c94565b005b34801561057b57600080fd5b506105be6004803603602081101561059257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d66565b005b3480156105cc57600080fd5b506105d5610d84565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561062357600080fd5b5061062c610dae565b604051808215151515815260200191505060405180910390f35b34801561065257600080fd5b5061065b610e06565b6040518082815260200191505060405180910390f35b34801561067d57600080fd5b50610686610e10565b6040518082815260200191505060405180910390f35b3480156106a857600080fd5b506106b1610e1a565b6040518082815260200191505060405180910390f35b3480156106d357600080fd5b50610716600480360360208110156106ea57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610e24565b604051808215151515815260200191505060405180910390f35b34801561073c57600080fd5b50610745610e41565b6040518082815260200191505060405180910390f35b34801561076757600080fd5b506107946004803603602081101561077e57600080fd5b8101908080359060200190929190505050610e4b565b005b3480156107a257600080fd5b506107ab610e8b565b005b6107ef600480360360208110156107c357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506108c4565b005b3480156107fd57600080fd5b506108406004803603602081101561081457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610e96565b005b34801561084e57600080fd5b50610857610eb3565b6040518082815260200191505060405180910390f35b34801561087957600080fd5b50610882610ee6565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60016002600082825401925050819055506000600254905060003490506108eb8382610f10565b60006108f682610f30565b905061090d82600654610f5890919063ffffffff16565b60068190555061091d8482610f77565b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f6faf93231a456e552dbc9961f58d9713ee4f2e69d15f1975b050ef0911053a7b8484604051808381526020018281526020019250505060405180910390a36109948483610f85565b61099c610f89565b6109a68483610ff4565b505060025481146109b657600080fd5b5050565b6109c333610e24565b6109cc57600080fd5b6109d581610ff8565b50565b60006008544211905090565b6109ed33610e24565b6109f657600080fd5b6109ff81611052565b50565b610a0b33610e24565b610a1457600080fd5b60008090505b8151811015610a4c57610a3f828281518110610a3257fe5b6020026020010151610ff8565b8080600101915050610a1a565b5050565b610a58610dae565b610a6157600080fd5b610a69610c3a565b158015610a7b5750610a796109d8565b155b610a8457600080fd5b610a8e82826110ac565b5050565b6000806000fd5b6000610aaf8260016110fd90919063ffffffff16565b9050919050565b6000600654905090565b610ac86109d8565b610ad157600080fd5b6000610adb610ee6565b90508073ffffffffffffffffffffffffffffffffffffffff166342966c688273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015610b9257600080fd5b505afa158015610ba6573d6000803e3d6000fd5b505050506040513d6020811015610bbc57600080fd5b81019080805190602001909291905050506040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180828152602001915050600060405180830381600087803b158015610c1f57600080fd5b505af1158015610c33573d6000803e3d6000fd5b5050505050565b60006007544210158015610c5057506008544211155b905090565b6000600854905090565b610c683361118f565b565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610c9c610dae565b610ca557600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b610d6f33610e24565b610d7857600080fd5b610d81816111e9565b50565b6000600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6000600a54905090565b6000600b54905090565b6000600754905090565b6000610e3a8260006110fd90919063ffffffff16565b9050919050565b6000600c54905090565b610e53610dae565b610e5c57600080fd5b610e64610c3a565b158015610e765750610e746109d8565b155b610e7f57600080fd5b610e8881611243565b50565b610e9433611052565b565b610e9e610dae565b610ea757600080fd5b610eb081611284565b50565b6000610ebd610c3a565b610eca5760009050610ee3565b600b544210610edd57600c549050610ee3565b600a5490505b90565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610f1982610a99565b610f2257600080fd5b610f2c828261137e565b5050565b600080610f3b610eb3565b9050610f50838261139d90919063ffffffff16565b915050919050565b600080828401905083811015610f6d57600080fd5b8091505092915050565b610f8182826113d7565b5050565b5050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f19350505050158015610ff1573d6000803e3d6000fd5b50565b5050565b61100c81600161142890919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fee1504a83b6d4a361f4c1dc78ab59bfa30d6a3b6612c403e86bb01ef2984295f60405160405180910390a250565b6110668160016114d490919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f270d9b30cf5b0793bbfd54c9d5b94aeb49462b8148399000265144a8722da6b660405160405180910390a250565b81600b8190555080600c819055507f4e7e6d92843fbe2fd0f27456b98f02069ee4d44de6a198b7db55f5bfd76fe9248282604051808381526020018281526020019250505060405180910390a15050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561113857600080fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6111a38160006114d490919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f0a8eb35e5ca14b3d6f28e4abf2f128dbab231a58b56e89beb5d636115001e16560405160405180910390a250565b6111fd81600061142890919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f22380c05984257a1cb900161c713dd71d39e74820f1aea43bd3f1bdd2096129960405160405180910390a250565b80600a819055507f2d5f5ea15ed32044e5f601470ede06bf73cf3c8983ebcfd001fc563fcec0fc9d816040518082815260200191505060405180910390a150565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156112be57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b611386610c3a565b61138f57600080fd5b611399828261157f565b5050565b6000808314156113b057600090506113d1565b60008284029050828482816113c157fe5b04146113cc57600080fd5b809150505b92915050565b6114248282600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166115cb9092919063ffffffff16565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561146257600080fd5b61146c82826110fd565b1561147657600080fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561150e57600080fd5b61151882826110fd565b61152157600080fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156115b957600080fd5b60008114156115c757600080fd5b5050565b8273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561166e57600080fd5b505af1158015611682573d6000803e3d6000fd5b505050506040513d602081101561169857600080fd5b81019080805190602001909291905050506116b257600080fd5b50505056fea165627a7a72305820d06eaaf7bc512b4e119b8ee557e061464c7bcf605a1b883cb8dd6f35548b60050029",
  "deployedBytecode": "0x6080604052600436106101d4576000357c0100000000000000000000000000000000000000000000000000000000900480637362d9c811610109578063c404c721116100a7578063ec8ac4d811610081578063ec8ac4d8146107ad578063f2fde38b146107f1578063f7fb07b014610842578063fc0c546a1461086d576101d4565b8063c404c72114610730578063d1c6f4481461075b578063d6cd947314610796576101d4565b80639e51051f116100e35780639e51051f14610646578063a02d856314610671578063b7a8807c1461069c578063bb5f747b146106c7576101d4565b80637362d9c81461056f5780638da5cb5b146105c05780638f32d59b14610617576101d4565b80634042b66f116101765780634b6753bc116101505780634b6753bc146104bf5780634c5a628c146104ea578063521eb27314610501578063715018a614610558576101d4565b80634042b66f1461044e57806344df8e701461047957806347535d7b14610490576101d4565b80632a4bc321116101b25780632a4bc321146102b05780632aa3ae9c146103755780632c4e722e146103ba5780633af32abf146103e5576101d4565b806310154bad146101df5780631515bc2b14610230578063291d95491461025f575b6101dd336108c4565b005b3480156101eb57600080fd5b5061022e6004803603602081101561020257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506109ba565b005b34801561023c57600080fd5b506102456109d8565b604051808215151515815260200191505060405180910390f35b34801561026b57600080fd5b506102ae6004803603602081101561028257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506109e4565b005b3480156102bc57600080fd5b50610373600480360360208110156102d357600080fd5b81019080803590602001906401000000008111156102f057600080fd5b82018360208201111561030257600080fd5b8035906020019184602083028401116401000000008311171561032457600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050509192919290505050610a02565b005b34801561038157600080fd5b506103b86004803603604081101561039857600080fd5b810190808035906020019092919080359060200190929190505050610a50565b005b3480156103c657600080fd5b506103cf610a92565b6040518082815260200191505060405180910390f35b3480156103f157600080fd5b506104346004803603602081101561040857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a99565b604051808215151515815260200191505060405180910390f35b34801561045a57600080fd5b50610463610ab6565b6040518082815260200191505060405180910390f35b34801561048557600080fd5b5061048e610ac0565b005b34801561049c57600080fd5b506104a5610c3a565b604051808215151515815260200191505060405180910390f35b3480156104cb57600080fd5b506104d4610c55565b6040518082815260200191505060405180910390f35b3480156104f657600080fd5b506104ff610c5f565b005b34801561050d57600080fd5b50610516610c6a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561056457600080fd5b5061056d610c94565b005b34801561057b57600080fd5b506105be6004803603602081101561059257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d66565b005b3480156105cc57600080fd5b506105d5610d84565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561062357600080fd5b5061062c610dae565b604051808215151515815260200191505060405180910390f35b34801561065257600080fd5b5061065b610e06565b6040518082815260200191505060405180910390f35b34801561067d57600080fd5b50610686610e10565b6040518082815260200191505060405180910390f35b3480156106a857600080fd5b506106b1610e1a565b6040518082815260200191505060405180910390f35b3480156106d357600080fd5b50610716600480360360208110156106ea57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610e24565b604051808215151515815260200191505060405180910390f35b34801561073c57600080fd5b50610745610e41565b6040518082815260200191505060405180910390f35b34801561076757600080fd5b506107946004803603602081101561077e57600080fd5b8101908080359060200190929190505050610e4b565b005b3480156107a257600080fd5b506107ab610e8b565b005b6107ef600480360360208110156107c357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506108c4565b005b3480156107fd57600080fd5b506108406004803603602081101561081457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610e96565b005b34801561084e57600080fd5b50610857610eb3565b6040518082815260200191505060405180910390f35b34801561087957600080fd5b50610882610ee6565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60016002600082825401925050819055506000600254905060003490506108eb8382610f10565b60006108f682610f30565b905061090d82600654610f5890919063ffffffff16565b60068190555061091d8482610f77565b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f6faf93231a456e552dbc9961f58d9713ee4f2e69d15f1975b050ef0911053a7b8484604051808381526020018281526020019250505060405180910390a36109948483610f85565b61099c610f89565b6109a68483610ff4565b505060025481146109b657600080fd5b5050565b6109c333610e24565b6109cc57600080fd5b6109d581610ff8565b50565b60006008544211905090565b6109ed33610e24565b6109f657600080fd5b6109ff81611052565b50565b610a0b33610e24565b610a1457600080fd5b60008090505b8151811015610a4c57610a3f828281518110610a3257fe5b6020026020010151610ff8565b8080600101915050610a1a565b5050565b610a58610dae565b610a6157600080fd5b610a69610c3a565b158015610a7b5750610a796109d8565b155b610a8457600080fd5b610a8e82826110ac565b5050565b6000806000fd5b6000610aaf8260016110fd90919063ffffffff16565b9050919050565b6000600654905090565b610ac86109d8565b610ad157600080fd5b6000610adb610ee6565b90508073ffffffffffffffffffffffffffffffffffffffff166342966c688273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015610b9257600080fd5b505afa158015610ba6573d6000803e3d6000fd5b505050506040513d6020811015610bbc57600080fd5b81019080805190602001909291905050506040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180828152602001915050600060405180830381600087803b158015610c1f57600080fd5b505af1158015610c33573d6000803e3d6000fd5b5050505050565b60006007544210158015610c5057506008544211155b905090565b6000600854905090565b610c683361118f565b565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610c9c610dae565b610ca557600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b610d6f33610e24565b610d7857600080fd5b610d81816111e9565b50565b6000600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6000600a54905090565b6000600b54905090565b6000600754905090565b6000610e3a8260006110fd90919063ffffffff16565b9050919050565b6000600c54905090565b610e53610dae565b610e5c57600080fd5b610e64610c3a565b158015610e765750610e746109d8565b155b610e7f57600080fd5b610e8881611243565b50565b610e9433611052565b565b610e9e610dae565b610ea757600080fd5b610eb081611284565b50565b6000610ebd610c3a565b610eca5760009050610ee3565b600b544210610edd57600c549050610ee3565b600a5490505b90565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610f1982610a99565b610f2257600080fd5b610f2c828261137e565b5050565b600080610f3b610eb3565b9050610f50838261139d90919063ffffffff16565b915050919050565b600080828401905083811015610f6d57600080fd5b8091505092915050565b610f8182826113d7565b5050565b5050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f19350505050158015610ff1573d6000803e3d6000fd5b50565b5050565b61100c81600161142890919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fee1504a83b6d4a361f4c1dc78ab59bfa30d6a3b6612c403e86bb01ef2984295f60405160405180910390a250565b6110668160016114d490919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f270d9b30cf5b0793bbfd54c9d5b94aeb49462b8148399000265144a8722da6b660405160405180910390a250565b81600b8190555080600c819055507f4e7e6d92843fbe2fd0f27456b98f02069ee4d44de6a198b7db55f5bfd76fe9248282604051808381526020018281526020019250505060405180910390a15050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561113857600080fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6111a38160006114d490919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f0a8eb35e5ca14b3d6f28e4abf2f128dbab231a58b56e89beb5d636115001e16560405160405180910390a250565b6111fd81600061142890919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f22380c05984257a1cb900161c713dd71d39e74820f1aea43bd3f1bdd2096129960405160405180910390a250565b80600a819055507f2d5f5ea15ed32044e5f601470ede06bf73cf3c8983ebcfd001fc563fcec0fc9d816040518082815260200191505060405180910390a150565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156112be57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b611386610c3a565b61138f57600080fd5b611399828261157f565b5050565b6000808314156113b057600090506113d1565b60008284029050828482816113c157fe5b04146113cc57600080fd5b809150505b92915050565b6114248282600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166115cb9092919063ffffffff16565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561146257600080fd5b61146c82826110fd565b1561147657600080fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561150e57600080fd5b61151882826110fd565b61152157600080fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156115b957600080fd5b60008114156115c757600080fd5b5050565b8273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561166e57600080fd5b505af1158015611682573d6000803e3d6000fd5b505050506040513d602081101561169857600080fd5b81019080805190602001909291905050506116b257600080fd5b50505056fea165627a7a72305820d06eaaf7bc512b4e119b8ee557e061464c7bcf605a1b883cb8dd6f35548b60050029",
  "sourceMap": "499:1036:1:-;;;599:560;8:9:-1;5:2;;;30:1;27;20:12;5:2;599:560:1;;;;;;;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;599:560:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1109:4;1115:5;1059:11;1072;1012:4;1018:15;1035:5;433:30:9;452:10;433:18;;;:30;;;:::i;:::-;576:1:25;560:13;:17;;;;2380:1:11;2373:4;:8;2365:17;;;;;;2418:1;2400:20;;:6;:20;;;;2392:29;;;;;;2465:1;2439:28;;2447:5;2439:28;;;;2431:37;;;;;;2487:4;2479:5;:12;;;;2511:6;2501:7;;:16;;;;;;;;;;;;;;;;;;2536:5;2527:6;;:14;;;;;;;;;;;;;;;;;;2283:265;;;806:15:13;791:11;:30;;783:39;;;;;;854:11;840;:25;832:34;;;;;;892:11;877:12;:26;;;;928:11;913:12;:26;;;;657:289;;524:10:17;515:6;;:19;;;;;;;;;;;;;;;;;;582:6;;;;;;;;;;;549:40;;578:1;549:40;;;;;;;;;;;;1333:1:0;1319:11;:15;1311:24;;;;;;1356:11;1341:12;:26;;;;1390:11;1373:14;:28;;;;1407:24;1425:5;1407:17;;;:24;;;:::i;:::-;1239:197;;1130:24:1;1148:5;1130:17;;;:24;;;:::i;:::-;599:560;;;;;;499:1036;;923:143:9;987:29;1008:7;987:16;:20;;;;;;:29;;;;;:::i;:::-;1051:7;1031:28;;;;;;;;;;;;923:143;:::o;1655:107:17:-;863:9;:7;;;:9;;;:::i;:::-;855:18;;;;;;1727:28;1746:8;1727:18;;;:28;;;:::i;:::-;1655:107;:::o;706:114:9:-;524:28;541:10;524:16;;;:28;;;:::i;:::-;516:37;;;;;;786:27;805:7;786:18;;;:27;;;:::i;:::-;706:114;:::o;259:181:7:-;354:1;335:21;;:7;:21;;;;327:30;;;;;;376:18;380:4;386:7;376:3;;;:18;;;:::i;:::-;375:19;367:28;;;;;;429:4;406;:11;;:20;418:7;406:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;259:181;;:::o;979:90:17:-;1019:4;1056:6;;;;;;;;;;;1042:20;;:10;:20;;;1035:27;;979:90;:::o;1906:183::-;1999:1;1979:22;;:8;:22;;;;1971:31;;;;;;2046:8;2017:38;;2038:6;;;;;;;;;;;2017:38;;;;;;;;;;;;2074:8;2065:6;;:17;;;;;;;;;;;;;;;;;;1906:183;:::o;577:123:9:-;641:4;664:29;685:7;664:16;:20;;;;;;:29;;;;;:::i;:::-;657:36;;577:123;;;:::o;786:162:7:-;858:4;901:1;882:21;;:7;:21;;;;874:30;;;;;;921:4;:11;;:20;933:7;921:20;;;;;;;;;;;;;;;;;;;;;;;;;914:27;;786:162;;;;:::o;499:1036:1:-;;;;;;;",
  "deployedSourceMap": "499:1036:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2875:21:11;2885:10;2875:9;:21::i;:::-;499:1036:1;848:108:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;848:108:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;848:108:10;;;;;;;;;;;;;;;;;;;:::i;:::-;;1692:156:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1692:156:13;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;962:114:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;962:114:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;962:114:10;;;;;;;;;;;;;;;;;;;:::i;:::-;;1163:181:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1163:181:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1163:181:1;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1163:181:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1163:181:1;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;1163:181:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1163:181:1;;;;;;;;;;;;;;;:::i;:::-;;2654:193:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2654:193:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2654:193:0;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1582:65;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1582:65:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;725:117:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;725:117:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;725:117:10;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3424:85:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3424:85:11;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1348:185:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1348:185:1;;;:::i;:::-;;1339:189:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1339:189:13;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1165:89;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1165:89:13;;;:::i;:::-;;;;;;;;;;;;;;;;;;;826:91:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;826:91:9;;;:::i;:::-;;3114:87:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3114:87:11;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1347:137:17;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1347:137:17;;;:::i;:::-;;706:114:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;706:114:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;706:114:9;;;;;;;;;;;;;;;;;;;:::i;:::-;;659:77:17;;8:9:-1;5:2;;;30:1;27;20:12;5:2;659:77:17;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;979:90;;8:9:-1;5:2;;;30:1;27;20:12;5:2;979:90:17;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1711:83:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1711:83:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1859:95;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1859:95:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1011:89:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1011:89:13;;;:::i;:::-;;;;;;;;;;;;;;;;;;;577:123:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;577:123:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;577:123:9;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2015:87:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2015:87:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2193:153;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2193:153:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2193:153:0;;;;;;;;;;;;;;;;;:::i;:::-;;1082:85:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1082:85:10;;;:::i;:::-;;3766:603:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3766:603:11;;;;;;;;;;;;;;;;;;;:::i;:::-;;1655:107:17;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1655:107:17;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1655:107:17;;;;;;;;;;;;;;;;;;;:::i;:::-;;3276:213:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3276:213:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2962:76:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2962:76:11;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3766:603;1010:1:25;993:13;;:18;;;;;;;;;;;1021:20;1044:13;;1021:36;;3844:17:11;3864:9;3844:29;;3883:44;3904:11;3917:9;3883:20;:44::i;:::-;3986:14;4003:26;4019:9;4003:15;:26::i;:::-;3986:43;;4077:25;4092:9;4077:10;;:14;;:25;;;;:::i;:::-;4064:10;:38;;;;4113:37;4130:11;4143:6;4113:16;:37::i;:::-;4193:11;4165:59;;4181:10;4165:59;;;4206:9;4217:6;4165:59;;;;;;;;;;;;;;;;;;;;;;;;4235:46;4258:11;4271:9;4235:22;:46::i;:::-;4292:15;:13;:15::i;:::-;4317:45;4339:11;4352:9;4317:21;:45::i;:::-;1067:1:25;;1102:13;;1086:12;:29;1078:38;;;;;;3766:603:11;;:::o;848:108:10:-;524:28:9;541:10;524:16;:28::i;:::-;516:37;;;;;;925:24:10;941:7;925:15;:24::i;:::-;848:108;:::o;1692:156:13:-;1734:4;1829:12;;1811:15;:30;1804:37;;1692:156;:::o;962:114:10:-;524:28:9;541:10;524:16;:28::i;:::-;516:37;;;;;;1042:27:10;1061:7;1042:18;:27::i;:::-;962:114;:::o;1163:181:1:-;524:28:9;541:10;524:16;:28::i;:::-;516:37;;;;;;1259:6:1;1268:1;1259:10;;1254:86;1275:8;:15;1271:1;:19;1254:86;;;1305:28;1321:8;1330:1;1321:11;;;;;;;;;;;;;;1305:15;:28::i;:::-;1292:3;;;;;;;1254:86;;;;1163:181;:::o;2654:193:0:-;863:9:17;:7;:9::i;:::-;855:18;;;;;;2761:8:0;:6;:8::i;:::-;2760:9;:25;;;;;2774:11;:9;:11::i;:::-;2773:12;2760:25;2752:34;;;;;;2792:50;2817:13;2832:9;2792:24;:50::i;:::-;2654:193;;:::o;1582:65::-;1619:7;1634:8;;;725:117:10;786:4;809:26;827:7;809:13;:17;;:26;;;;:::i;:::-;802:33;;725:117;;;:::o;3424:85:11:-;3466:7;3492:10;;3485:17;;3424:85;:::o;1348:185:1:-;1385:11;:9;:11::i;:::-;1377:20;;;;;;1403:27;1455:7;:5;:7::i;:::-;1403:61;;1470:13;:18;;;1489:13;:23;;;1521:4;1489:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1489:38:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1489:38:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1489:38:1;;;;;;;;;;;;;;;;1470:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1470:58:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1470:58:1;;;;1348:185;:::o;1339:189:13:-;1378:4;1474:12;;1455:15;:31;;:66;;;;;1509:12;;1490:15;:31;;1455:66;1448:73;;1339:189;:::o;1165:89::-;1209:7;1235:12;;1228:19;;1165:89;:::o;826:91:9:-;877:33;899:10;877:21;:33::i;:::-;826:91::o;3114:87:11:-;3153:15;3187:7;;;;;;;;;;;3180:14;;3114:87;:::o;1347:137:17:-;863:9;:7;:9::i;:::-;855:18;;;;;;1445:1;1408:40;;1429:6;;;;;;;;;;;1408:40;;;;;;;;;;;;1475:1;1458:6;;:19;;;;;;;;;;;;;;;;;;1347:137::o;706:114:9:-;524:28;541:10;524:16;:28::i;:::-;516:37;;;;;;786:27;805:7;786:18;:27::i;:::-;706:114;:::o;659:77:17:-;697:7;723:6;;;;;;;;;;;716:13;;659:77;:::o;979:90::-;1019:4;1056:6;;;;;;;;;;;1042:20;;:10;:20;;;1035:27;;979:90;:::o;1711:83:0:-;1755:7;1777:12;;1770:19;;1711:83;:::o;1859:95::-;1909:7;1931:18;;1924:25;;1859:95;:::o;1011:89:13:-;1055:7;1081:12;;1074:19;;1011:89;:::o;577:123:9:-;641:4;664:29;685:7;664:16;:20;;:29;;;;:::i;:::-;657:36;;577:123;;;:::o;2015:87:0:-;2061:7;2083:14;;2076:21;;2015:87;:::o;2193:153::-;863:9:17;:7;:9::i;:::-;855:18;;;;;;2276:8:0;:6;:8::i;:::-;2275:9;:25;;;;;2289:11;:9;:11::i;:::-;2288:12;2275:25;2267:34;;;;;;2307;2326:14;2307:18;:34::i;:::-;2193:153;:::o;1082:85:10:-;1130:30;1149:10;1130:18;:30::i;:::-;1082:85::o;1655:107:17:-;863:9;:7;:9::i;:::-;855:18;;;;;;1727:28;1746:8;1727:18;:28::i;:::-;1655:107;:::o;3276:213:0:-;3323:7;3343:8;:6;:8::i;:::-;3338:38;;3368:1;3361:8;;;;3338:38;3404:18;;3385:15;:37;3381:79;;3439:14;;3432:21;;;;3381:79;3472:12;;3465:19;;3276:213;;:::o;2962:76:11:-;3000:6;3025;;;;;;;;;;;3018:13;;2962:76;:::o;535:201:14:-;639:27;653:12;639:13;:27::i;:::-;631:36;;;;;;677:52;704:12;718:10;677:26;:52::i;:::-;535:201;;:::o;3715:164:0:-;3782:7;3797:19;3819:16;:14;:16::i;:::-;3797:38;;3848:26;3864:9;3848:11;:15;;:26;;;;:::i;:::-;3841:33;;;3715:164;;;:::o;1431:145:16:-;1489:7;1508:9;1524:1;1520;:5;1508:17;;1548:1;1543;:6;;1535:15;;;;;;1568:1;1561:8;;;1431:145;;;;:::o;6206:134:11:-;6293:40;6308:11;6321;6293:14;:40::i;:::-;6206:134;;:::o;6610:145::-;;;:::o;7211:78::-;7255:7;;;;;;;;;;;:16;;:27;7272:9;7255:27;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7255:27:11;7211:78::o;5374:149::-;;;:::o;1173:134:10:-;1234:26;1252:7;1234:13;:17;;:26;;;;:::i;:::-;1292:7;1275:25;;;;;;;;;;;;1173:134;:::o;1313:142::-;1377:29;1398:7;1377:13;:20;;:29;;;;:::i;:::-;1440:7;1421:27;;;;;;;;;;;;1313:142;:::o;2851:223:0:-;2963:13;2942:18;:34;;;;2999:9;2982:14;:26;;;;3019:50;3044:13;3059:9;3019:50;;;;;;;;;;;;;;;;;;;;;;;;2851:223;;:::o;786:162:7:-;858:4;901:1;882:21;;:7;:21;;;;874:30;;;;;;921:4;:11;;:20;933:7;921:20;;;;;;;;;;;;;;;;;;;;;;;;;914:27;;786:162;;;;:::o;1072:151:9:-;1139:32;1163:7;1139:16;:23;;:32;;;;:::i;:::-;1208:7;1186:30;;;;;;;;;;;;1072:151;:::o;923:143::-;987:29;1008:7;987:16;:20;;:29;;;;:::i;:::-;1051:7;1031:28;;;;;;;;;;;;923:143;:::o;2350:146:0:-;2432:14;2417:12;:29;;;;2457:34;2476:14;2457:34;;;;;;;;;;;;;;;;;;2350:146;:::o;1906:183:17:-;1999:1;1979:22;;:8;:22;;;;1971:31;;;;;;2046:8;2017:38;;2038:6;;;;;;;;;;;2017:38;;;;;;;;;;;;2074:8;2065:6;;:17;;;;;;;;;;;;;;;;;;1906:183;:::o;2040:165:13:-;442:8;:6;:8::i;:::-;434:17;;;;;;2148:50;2175:11;2188:9;2148:26;:50::i;:::-;2040:165;;:::o;229:421:16:-;287:7;532:1;527;:6;523:45;;;556:1;549:8;;;;523:45;578:9;594:1;590;:5;578:17;;622:1;617;613;:5;;;;;;:10;605:19;;;;;;642:1;635:8;;;229:421;;;;;:::o;5803:137:11:-;5888:45;5908:11;5921;5888:6;;;;;;;;;;;:19;;;;:45;;;;;:::i;:::-;5803:137;;:::o;259:181:7:-;354:1;335:21;;:7;:21;;;;327:30;;;;;;376:18;380:4;386:7;376:3;:18::i;:::-;375:19;367:28;;;;;;429:4;406;:11;;:20;418:7;406:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;259:181;;:::o;514:184::-;612:1;593:21;;:7;:21;;;;585:30;;;;;;633:18;637:4;643:7;633:3;:18::i;:::-;625:27;;;;;;686:5;663:4;:11;;:20;675:7;663:20;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;514:184;;:::o;4911:168:11:-;5036:1;5013:25;;:11;:25;;;;5005:34;;;;;;5070:1;5057:9;:14;;5049:23;;;;;;4911:168;;:::o;409:123:24:-;499:5;:14;;;514:2;518:5;499:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;499:25:24;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;499:25:24;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;499:25:24;;;;;;;;;;;;;;;;491:34;;;;;;409:123;;;:::o",
  "source": "pragma solidity ^0.5.0;\n\nimport \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\";\nimport \"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\";\nimport \"openzeppelin-solidity/contracts/token/ERC20/ERC20Burnable.sol\";\nimport \"openzeppelin-solidity/contracts/crowdsale/validation/TimedCrowdsale.sol\";\nimport \"openzeppelin-solidity/contracts/crowdsale/validation/WhitelistCrowdsale.sol\";\nimport \"openzeppelin-solidity/contracts/crowdsale/Crowdsale.sol\";\nimport \"./AsureBonusesCrowdsale.sol\";\n\ncontract AsureCrowdsale is Crowdsale, TimedCrowdsale, WhitelistCrowdsale, AsureBonusesCrowdsale {\n  constructor(\n    uint256 rate,                     // rate, in Asure Tokens\n    address payable owner,            // owner\n    address payable crowdsaleWallet,  // wallet to send Ether\n    IERC20 token,                     // the token\n    uint256 openingTime,              // opening time in unix epoch seconds\n    uint256 closingTime               // closing time in unix epoch seconds\n  )\n  public\n  Crowdsale(rate, crowdsaleWallet, token)\n  TimedCrowdsale(openingTime, closingTime)\n  AsureBonusesCrowdsale(rate, owner)\n  {\n    addWhitelistAdmin(owner);\n  }\n\n  function addWhitelistedAccounts(address[] memory accounts) public onlyWhitelistAdmin {\n    for (uint i = 0; i < accounts.length; i++) {\n      _addWhitelisted(accounts[i]);\n    }\n  }\n\n  function burn() public {\n    require(hasClosed());\n    ERC20Burnable burnableToken = ERC20Burnable(address(token()));\n    burnableToken.burn(burnableToken.balanceOf(address(this)));\n  }\n}\n",
  "sourcePath": "/home/mischi/p/asurenetwork/crowdsale/packages/crowdsale/contracts/AsureCrowdsale.sol",
  "ast": {
    "absolutePath": "/home/mischi/p/asurenetwork/crowdsale/packages/crowdsale/contracts/AsureCrowdsale.sol",
    "exportedSymbols": {
      "AsureCrowdsale": [
        323
      ]
    },
    "id": 324,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 217,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "id": 218,
        "nodeType": "ImportDirective",
        "scope": 324,
        "sourceUnit": 2768,
        "src": "25:63:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "id": 219,
        "nodeType": "ImportDirective",
        "scope": 324,
        "sourceUnit": 3011,
        "src": "89:64:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20Burnable.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20Burnable.sol",
        "id": 220,
        "nodeType": "ImportDirective",
        "scope": 324,
        "sourceUnit": 2799,
        "src": "154:71:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/crowdsale/validation/TimedCrowdsale.sol",
        "file": "openzeppelin-solidity/contracts/crowdsale/validation/TimedCrowdsale.sol",
        "id": 221,
        "nodeType": "ImportDirective",
        "scope": 324,
        "sourceUnit": 1699,
        "src": "226:81:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/crowdsale/validation/WhitelistCrowdsale.sol",
        "file": "openzeppelin-solidity/contracts/crowdsale/validation/WhitelistCrowdsale.sol",
        "id": 222,
        "nodeType": "ImportDirective",
        "scope": 324,
        "sourceUnit": 1729,
        "src": "308:85:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/crowdsale/Crowdsale.sol",
        "file": "openzeppelin-solidity/contracts/crowdsale/Crowdsale.sol",
        "id": 223,
        "nodeType": "ImportDirective",
        "scope": 324,
        "sourceUnit": 1515,
        "src": "394:65:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/mischi/p/asurenetwork/crowdsale/packages/crowdsale/contracts/AsureBonusesCrowdsale.sol",
        "file": "./AsureBonusesCrowdsale.sol",
        "id": 224,
        "nodeType": "ImportDirective",
        "scope": 324,
        "sourceUnit": 216,
        "src": "460:37:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 225,
              "name": "Crowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1514,
              "src": "526:9:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Crowdsale_$1514",
                "typeString": "contract Crowdsale"
              }
            },
            "id": 226,
            "nodeType": "InheritanceSpecifier",
            "src": "526:9:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 227,
              "name": "TimedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1698,
              "src": "537:14:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TimedCrowdsale_$1698",
                "typeString": "contract TimedCrowdsale"
              }
            },
            "id": 228,
            "nodeType": "InheritanceSpecifier",
            "src": "537:14:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 229,
              "name": "WhitelistCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1728,
              "src": "553:18:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_WhitelistCrowdsale_$1728",
                "typeString": "contract WhitelistCrowdsale"
              }
            },
            "id": 230,
            "nodeType": "InheritanceSpecifier",
            "src": "553:18:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 231,
              "name": "AsureBonusesCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 215,
              "src": "573:21:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AsureBonusesCrowdsale_$215",
                "typeString": "contract AsureBonusesCrowdsale"
              }
            },
            "id": 232,
            "nodeType": "InheritanceSpecifier",
            "src": "573:21:1"
          }
        ],
        "contractDependencies": [
          215,
          1138,
          1247,
          1514,
          1698,
          1728,
          2335,
          3185
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 323,
        "linearizedBaseContracts": [
          323,
          215,
          2335,
          1728,
          1698,
          1514,
          3185,
          1247,
          1138
        ],
        "name": "AsureCrowdsale",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 264,
              "nodeType": "Block",
              "src": "1124:35:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 261,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 236,
                        "src": "1148:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 260,
                      "name": "addWhitelistAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1096,
                      "src": "1130:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1130:24:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 263,
                  "nodeType": "ExpressionStatement",
                  "src": "1130:24:1"
                }
              ]
            },
            "documentation": null,
            "id": 265,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 247,
                    "name": "rate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 234,
                    "src": "1012:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 248,
                    "name": "crowdsaleWallet",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 238,
                    "src": "1018:15:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 249,
                    "name": "token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 240,
                    "src": "1035:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3010",
                      "typeString": "contract IERC20"
                    }
                  }
                ],
                "id": 250,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 246,
                  "name": "Crowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1514,
                  "src": "1002:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Crowdsale_$1514_$",
                    "typeString": "type(contract Crowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1002:39:1"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 252,
                    "name": "openingTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 242,
                    "src": "1059:11:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 253,
                    "name": "closingTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 244,
                    "src": "1072:11:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 254,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 251,
                  "name": "TimedCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1698,
                  "src": "1044:14:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_TimedCrowdsale_$1698_$",
                    "typeString": "type(contract TimedCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1044:40:1"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 256,
                    "name": "rate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 234,
                    "src": "1109:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 257,
                    "name": "owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 236,
                    "src": "1115:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  }
                ],
                "id": 258,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 255,
                  "name": "AsureBonusesCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 215,
                  "src": "1087:21:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_AsureBonusesCrowdsale_$215_$",
                    "typeString": "type(contract AsureBonusesCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1087:34:1"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 245,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 234,
                  "name": "rate",
                  "nodeType": "VariableDeclaration",
                  "scope": 265,
                  "src": "616:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 233,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "616:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 236,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 265,
                  "src": "679:21:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 235,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "679:15:1",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 238,
                  "name": "crowdsaleWallet",
                  "nodeType": "VariableDeclaration",
                  "scope": 265,
                  "src": "726:31:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 237,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "726:15:1",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 240,
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 265,
                  "src": "788:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$3010",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 239,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3010,
                    "src": "788:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3010",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 242,
                  "name": "openingTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 265,
                  "src": "839:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 241,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "839:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 244,
                  "name": "closingTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 265,
                  "src": "915:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 243,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "915:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "610:380:1"
            },
            "returnParameters": {
              "id": 259,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1124:0:1"
            },
            "scope": 323,
            "src": "599:560:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 292,
              "nodeType": "Block",
              "src": "1248:96:1",
              "statements": [
                {
                  "body": {
                    "id": 290,
                    "nodeType": "Block",
                    "src": "1297:43:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 285,
                                "name": "accounts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 268,
                                "src": "1321:8:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 287,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 286,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 274,
                                "src": "1330:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1321:11:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 284,
                            "name": "_addWhitelisted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1230,
                            "src": "1305:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 288,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1305:28:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 289,
                        "nodeType": "ExpressionStatement",
                        "src": "1305:28:1"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 280,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 277,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 274,
                      "src": "1271:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 278,
                        "name": "accounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 268,
                        "src": "1275:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 279,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1275:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1271:19:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 291,
                  "initializationExpression": {
                    "assignments": [
                      274
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 274,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 291,
                        "src": "1259:6:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 273,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1259:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 276,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 275,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1268:1:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1259:10:1"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 282,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1292:3:1",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 281,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 274,
                        "src": "1292:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 283,
                    "nodeType": "ExpressionStatement",
                    "src": "1292:3:1"
                  },
                  "nodeType": "ForStatement",
                  "src": "1254:86:1"
                }
              ]
            },
            "documentation": null,
            "id": 293,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 271,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 270,
                  "name": "onlyWhitelistAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1071,
                  "src": "1229:18:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1229:18:1"
              }
            ],
            "name": "addWhitelistedAccounts",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 269,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 268,
                  "name": "accounts",
                  "nodeType": "VariableDeclaration",
                  "scope": 293,
                  "src": "1195:25:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 266,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1195:7:1",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 267,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1195:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1194:27:1"
            },
            "returnParameters": {
              "id": 272,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1248:0:1"
            },
            "scope": 323,
            "src": "1163:181:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 321,
              "nodeType": "Block",
              "src": "1371:162:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 297,
                          "name": "hasClosed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1680,
                          "src": "1385:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                            "typeString": "function () view returns (bool)"
                          }
                        },
                        "id": 298,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1385:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 296,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3203,
                        3204
                      ],
                      "referencedDeclaration": 3203,
                      "src": "1377:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 299,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1377:20:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 300,
                  "nodeType": "ExpressionStatement",
                  "src": "1377:20:1"
                },
                {
                  "assignments": [
                    302
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 302,
                      "name": "burnableToken",
                      "nodeType": "VariableDeclaration",
                      "scope": 321,
                      "src": "1403:27:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Burnable_$2798",
                        "typeString": "contract ERC20Burnable"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 301,
                        "name": "ERC20Burnable",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2798,
                        "src": "1403:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Burnable_$2798",
                          "typeString": "contract ERC20Burnable"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 309,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 305,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1342,
                              "src": "1455:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IERC20_$3010_$",
                                "typeString": "function () view returns (contract IERC20)"
                              }
                            },
                            "id": 306,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1455:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$3010",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$3010",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 304,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1447:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 307,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1447:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 303,
                      "name": "ERC20Burnable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2798,
                      "src": "1433:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC20Burnable_$2798_$",
                        "typeString": "type(contract ERC20Burnable)"
                      }
                    },
                    "id": 308,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1433:31:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Burnable_$2798",
                      "typeString": "contract ERC20Burnable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1403:61:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 316,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3244,
                                "src": "1521:4:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AsureCrowdsale_$323",
                                  "typeString": "contract AsureCrowdsale"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_AsureCrowdsale_$323",
                                  "typeString": "contract AsureCrowdsale"
                                }
                              ],
                              "id": 315,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1513:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 317,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1513:13:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 313,
                            "name": "burnableToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 302,
                            "src": "1489:13:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Burnable_$2798",
                              "typeString": "contract ERC20Burnable"
                            }
                          },
                          "id": 314,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2376,
                          "src": "1489:23:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 318,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1489:38:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 310,
                        "name": "burnableToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 302,
                        "src": "1470:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Burnable_$2798",
                          "typeString": "contract ERC20Burnable"
                        }
                      },
                      "id": 312,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2784,
                      "src": "1470:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 319,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1470:58:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 320,
                  "nodeType": "ExpressionStatement",
                  "src": "1470:58:1"
                }
              ]
            },
            "documentation": null,
            "id": 322,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 294,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1361:2:1"
            },
            "returnParameters": {
              "id": 295,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1371:0:1"
            },
            "scope": 323,
            "src": "1348:185:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 324,
        "src": "499:1036:1"
      }
    ],
    "src": "0:1536:1"
  },
  "legacyAST": {
    "absolutePath": "/home/mischi/p/asurenetwork/crowdsale/packages/crowdsale/contracts/AsureCrowdsale.sol",
    "exportedSymbols": {
      "AsureCrowdsale": [
        323
      ]
    },
    "id": 324,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 217,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "id": 218,
        "nodeType": "ImportDirective",
        "scope": 324,
        "sourceUnit": 2768,
        "src": "25:63:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "id": 219,
        "nodeType": "ImportDirective",
        "scope": 324,
        "sourceUnit": 3011,
        "src": "89:64:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20Burnable.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20Burnable.sol",
        "id": 220,
        "nodeType": "ImportDirective",
        "scope": 324,
        "sourceUnit": 2799,
        "src": "154:71:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/crowdsale/validation/TimedCrowdsale.sol",
        "file": "openzeppelin-solidity/contracts/crowdsale/validation/TimedCrowdsale.sol",
        "id": 221,
        "nodeType": "ImportDirective",
        "scope": 324,
        "sourceUnit": 1699,
        "src": "226:81:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/crowdsale/validation/WhitelistCrowdsale.sol",
        "file": "openzeppelin-solidity/contracts/crowdsale/validation/WhitelistCrowdsale.sol",
        "id": 222,
        "nodeType": "ImportDirective",
        "scope": 324,
        "sourceUnit": 1729,
        "src": "308:85:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/crowdsale/Crowdsale.sol",
        "file": "openzeppelin-solidity/contracts/crowdsale/Crowdsale.sol",
        "id": 223,
        "nodeType": "ImportDirective",
        "scope": 324,
        "sourceUnit": 1515,
        "src": "394:65:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/mischi/p/asurenetwork/crowdsale/packages/crowdsale/contracts/AsureBonusesCrowdsale.sol",
        "file": "./AsureBonusesCrowdsale.sol",
        "id": 224,
        "nodeType": "ImportDirective",
        "scope": 324,
        "sourceUnit": 216,
        "src": "460:37:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 225,
              "name": "Crowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1514,
              "src": "526:9:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Crowdsale_$1514",
                "typeString": "contract Crowdsale"
              }
            },
            "id": 226,
            "nodeType": "InheritanceSpecifier",
            "src": "526:9:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 227,
              "name": "TimedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1698,
              "src": "537:14:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TimedCrowdsale_$1698",
                "typeString": "contract TimedCrowdsale"
              }
            },
            "id": 228,
            "nodeType": "InheritanceSpecifier",
            "src": "537:14:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 229,
              "name": "WhitelistCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1728,
              "src": "553:18:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_WhitelistCrowdsale_$1728",
                "typeString": "contract WhitelistCrowdsale"
              }
            },
            "id": 230,
            "nodeType": "InheritanceSpecifier",
            "src": "553:18:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 231,
              "name": "AsureBonusesCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 215,
              "src": "573:21:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AsureBonusesCrowdsale_$215",
                "typeString": "contract AsureBonusesCrowdsale"
              }
            },
            "id": 232,
            "nodeType": "InheritanceSpecifier",
            "src": "573:21:1"
          }
        ],
        "contractDependencies": [
          215,
          1138,
          1247,
          1514,
          1698,
          1728,
          2335,
          3185
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 323,
        "linearizedBaseContracts": [
          323,
          215,
          2335,
          1728,
          1698,
          1514,
          3185,
          1247,
          1138
        ],
        "name": "AsureCrowdsale",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 264,
              "nodeType": "Block",
              "src": "1124:35:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 261,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 236,
                        "src": "1148:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 260,
                      "name": "addWhitelistAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1096,
                      "src": "1130:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1130:24:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 263,
                  "nodeType": "ExpressionStatement",
                  "src": "1130:24:1"
                }
              ]
            },
            "documentation": null,
            "id": 265,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 247,
                    "name": "rate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 234,
                    "src": "1012:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 248,
                    "name": "crowdsaleWallet",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 238,
                    "src": "1018:15:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 249,
                    "name": "token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 240,
                    "src": "1035:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3010",
                      "typeString": "contract IERC20"
                    }
                  }
                ],
                "id": 250,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 246,
                  "name": "Crowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1514,
                  "src": "1002:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Crowdsale_$1514_$",
                    "typeString": "type(contract Crowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1002:39:1"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 252,
                    "name": "openingTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 242,
                    "src": "1059:11:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 253,
                    "name": "closingTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 244,
                    "src": "1072:11:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 254,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 251,
                  "name": "TimedCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1698,
                  "src": "1044:14:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_TimedCrowdsale_$1698_$",
                    "typeString": "type(contract TimedCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1044:40:1"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 256,
                    "name": "rate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 234,
                    "src": "1109:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 257,
                    "name": "owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 236,
                    "src": "1115:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  }
                ],
                "id": 258,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 255,
                  "name": "AsureBonusesCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 215,
                  "src": "1087:21:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_AsureBonusesCrowdsale_$215_$",
                    "typeString": "type(contract AsureBonusesCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1087:34:1"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 245,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 234,
                  "name": "rate",
                  "nodeType": "VariableDeclaration",
                  "scope": 265,
                  "src": "616:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 233,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "616:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 236,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 265,
                  "src": "679:21:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 235,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "679:15:1",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 238,
                  "name": "crowdsaleWallet",
                  "nodeType": "VariableDeclaration",
                  "scope": 265,
                  "src": "726:31:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 237,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "726:15:1",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 240,
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 265,
                  "src": "788:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$3010",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 239,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3010,
                    "src": "788:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3010",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 242,
                  "name": "openingTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 265,
                  "src": "839:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 241,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "839:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 244,
                  "name": "closingTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 265,
                  "src": "915:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 243,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "915:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "610:380:1"
            },
            "returnParameters": {
              "id": 259,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1124:0:1"
            },
            "scope": 323,
            "src": "599:560:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 292,
              "nodeType": "Block",
              "src": "1248:96:1",
              "statements": [
                {
                  "body": {
                    "id": 290,
                    "nodeType": "Block",
                    "src": "1297:43:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 285,
                                "name": "accounts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 268,
                                "src": "1321:8:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 287,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 286,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 274,
                                "src": "1330:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1321:11:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 284,
                            "name": "_addWhitelisted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1230,
                            "src": "1305:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 288,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1305:28:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 289,
                        "nodeType": "ExpressionStatement",
                        "src": "1305:28:1"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 280,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 277,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 274,
                      "src": "1271:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 278,
                        "name": "accounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 268,
                        "src": "1275:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 279,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1275:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1271:19:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 291,
                  "initializationExpression": {
                    "assignments": [
                      274
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 274,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 291,
                        "src": "1259:6:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 273,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1259:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 276,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 275,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1268:1:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1259:10:1"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 282,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1292:3:1",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 281,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 274,
                        "src": "1292:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 283,
                    "nodeType": "ExpressionStatement",
                    "src": "1292:3:1"
                  },
                  "nodeType": "ForStatement",
                  "src": "1254:86:1"
                }
              ]
            },
            "documentation": null,
            "id": 293,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 271,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 270,
                  "name": "onlyWhitelistAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1071,
                  "src": "1229:18:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1229:18:1"
              }
            ],
            "name": "addWhitelistedAccounts",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 269,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 268,
                  "name": "accounts",
                  "nodeType": "VariableDeclaration",
                  "scope": 293,
                  "src": "1195:25:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 266,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1195:7:1",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 267,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1195:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1194:27:1"
            },
            "returnParameters": {
              "id": 272,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1248:0:1"
            },
            "scope": 323,
            "src": "1163:181:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 321,
              "nodeType": "Block",
              "src": "1371:162:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 297,
                          "name": "hasClosed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1680,
                          "src": "1385:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                            "typeString": "function () view returns (bool)"
                          }
                        },
                        "id": 298,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1385:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 296,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3203,
                        3204
                      ],
                      "referencedDeclaration": 3203,
                      "src": "1377:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 299,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1377:20:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 300,
                  "nodeType": "ExpressionStatement",
                  "src": "1377:20:1"
                },
                {
                  "assignments": [
                    302
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 302,
                      "name": "burnableToken",
                      "nodeType": "VariableDeclaration",
                      "scope": 321,
                      "src": "1403:27:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Burnable_$2798",
                        "typeString": "contract ERC20Burnable"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 301,
                        "name": "ERC20Burnable",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2798,
                        "src": "1403:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Burnable_$2798",
                          "typeString": "contract ERC20Burnable"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 309,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 305,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1342,
                              "src": "1455:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IERC20_$3010_$",
                                "typeString": "function () view returns (contract IERC20)"
                              }
                            },
                            "id": 306,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1455:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$3010",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$3010",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 304,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1447:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 307,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1447:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 303,
                      "name": "ERC20Burnable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2798,
                      "src": "1433:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC20Burnable_$2798_$",
                        "typeString": "type(contract ERC20Burnable)"
                      }
                    },
                    "id": 308,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1433:31:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Burnable_$2798",
                      "typeString": "contract ERC20Burnable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1403:61:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 316,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3244,
                                "src": "1521:4:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AsureCrowdsale_$323",
                                  "typeString": "contract AsureCrowdsale"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_AsureCrowdsale_$323",
                                  "typeString": "contract AsureCrowdsale"
                                }
                              ],
                              "id": 315,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1513:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 317,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1513:13:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 313,
                            "name": "burnableToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 302,
                            "src": "1489:13:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Burnable_$2798",
                              "typeString": "contract ERC20Burnable"
                            }
                          },
                          "id": 314,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2376,
                          "src": "1489:23:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 318,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1489:38:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 310,
                        "name": "burnableToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 302,
                        "src": "1470:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Burnable_$2798",
                          "typeString": "contract ERC20Burnable"
                        }
                      },
                      "id": 312,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2784,
                      "src": "1470:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 319,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1470:58:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 320,
                  "nodeType": "ExpressionStatement",
                  "src": "1470:58:1"
                }
              ]
            },
            "documentation": null,
            "id": 322,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 294,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1361:2:1"
            },
            "returnParameters": {
              "id": 295,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1371:0:1"
            },
            "scope": 323,
            "src": "1348:185:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 324,
        "src": "499:1036:1"
      }
    ],
    "src": "0:1536:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.6+commit.b259423e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.3",
  "updatedAt": "2019-03-20T20:57:56.350Z",
  "devdoc": {
    "methods": {
      "buyTokens(address)": {
        "details": "low level token purchase ***DO NOT OVERRIDE*** This function has a non-reentrancy guard, so it shouldn't be called by another `nonReentrant` function.",
        "params": {
          "beneficiary": "Recipient of the token purchase"
        }
      },
      "closingTime()": {
        "return": "the crowdsale closing time."
      },
      "getCurrentRate()": {
        "details": "Returns the rate of tokens per wei at the present time. Note that, rate can be changed by the owner",
        "return": "The number of tokens a buyer gets per wei at a given time"
      },
      "hasClosed()": {
        "details": "Checks whether the period in which the crowdsale is open has already elapsed.",
        "return": "Whether crowdsale period has elapsed"
      },
      "initialRate()": {
        "return": "the initial rate of the crowdsale."
      },
      "isOpen()": {
        "return": "true if the crowdsale is open, false otherwise."
      },
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract."
      },
      "nextBonusRate()": {
        "return": "the next Rate of the crowdsale."
      },
      "nextBonusTimeslot()": {
        "return": "the next Timeslot of the crowdsale."
      },
      "openingTime()": {
        "return": "the crowdsale opening time."
      },
      "owner()": {
        "return": "the address of the owner."
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract."
      },
      "token()": {
        "return": "the token being sold."
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      },
      "updateBonusTimeslotRate(uint256,uint256)": {
        "details": "Update timeslot and rate for the next Timeslot",
        "params": {
          "bonusRate": "rate for the timeslot",
          "bonusTimeslot": "next time slot"
        }
      },
      "updateInitialRate(uint256)": {
        "details": "Update initial Rate",
        "params": {
          "newInitialRate": "set new initial Rate"
        }
      },
      "wallet()": {
        "return": "the address where funds are collected."
      },
      "weiRaised()": {
        "return": "the amount of wei raised."
      }
    }
  },
  "userdoc": {
    "methods": {
      "rate()": {
        "notice": "The base rate function is overridden to revert, since this crowdsale doens't use it, and all calls to it are a mistake."
      },
      "renounceOwnership()": {
        "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      }
    }
  }
}